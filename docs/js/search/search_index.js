var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/CustomError.html",[0,1.263,1,1.745]],["body/classes/CustomError.html",[0,1.012,1,2.361,2,1.398,3,0.46,4,0.545,5,1.685,6,0.786,7,3.213,8,2.121,9,2.361,10,3.056,11,1.685,12,2.121,13,0.382,14,0.663,15,3.921,16,3.056,17,1.703,18,1.999,19,2.014,20,2.361,21,3.583,22,2.014,23,1.685,24,2.121,25,3.056,26,1.999,27,1.685,28,1.183,29,0.056,30,1.012,31,0.804,32,2.121,33,2.428,34,2.121,35,2.121,36,2.121,37,2.121,38,3.301,39,2.739,40,2.121,41,2.121,42,2.121,43,2.121,44,2.014,45,1.184,46,2.121,47,2.014,48,2.121,49,2.121,50,1.685,51,2.121,52,1.398,53,2.121,54,0.545,55,1.398,56,1.012,57,0.035,58,0.035]],["title/interfaces/CustomErrorMap.html",[26,1.477,59,0.306]],["body/interfaces/CustomErrorMap.html",[3,0.574,4,0.681,6,0.681,7,3.06,13,0.477,14,0.774,17,2.025,18,2.409,19,2.659,20,2.845,22,2.659,26,1.477,29,0.054,31,0.813,45,1.402,47,3.06,52,2.351,54,0.681,55,1.745,56,1.263,57,0.04,58,0.04,59,0.307,60,0.933,61,0.8,62,1.263,63,2.648,64,0.389,65,0.8,66,2.648,67,2.648]],["title/interfaces/ExpsAppRoute.html",[59,0.306,68,1.745]],["body/interfaces/ExpsAppRoute.html",[3,0.691,4,0.819,6,0.819,13,0.574,14,0.873,29,0.053,31,0.726,45,1.215,56,1.921,57,0.046,58,0.046,59,0.369,60,1.122,61,0.962,62,1.52,64,0.467,65,0.962,68,2.099,69,2.908,70,3.186,71,2.099,72,3.268,73,3.056]],["title/interfaces/ExpsConstants.html",[59,0.306,74,1.477]],["body/interfaces/ExpsConstants.html",[3,0.551,4,0.653,6,0.653,13,0.458,14,0.752,29,0.054,30,1.212,31,0.827,45,1.506,57,0.039,58,0.039,59,0.294,60,0.895,61,0.767,62,1.212,64,0.373,65,0.767,74,1.417,75,1.674,76,2.018,77,3.138,78,3.138,79,3.138,80,3.138,81,3.138,82,3.138,83,3.372,84,3.094,85,1.674,86,2.603,87,1.655,88,1.674,89,1.041,90,2.756,91,1.674,92,2.018,93,1.674]],["title/interfaces/ExpsRouteConfig.html",[59,0.306,94,1.477]],["body/interfaces/ExpsRouteConfig.html",[3,0.458,4,0.543,6,0.543,11,1.679,13,0.381,14,0.661,17,2.039,29,0.055,31,0.822,45,0.92,54,0.543,57,0.035,58,0.035,59,0.245,60,0.744,61,0.638,62,1.008,64,0.31,65,0.638,69,2.735,73,2.579,87,1.008,89,0.866,94,1.179,95,1.393,96,2.84,97,2.84,98,3.109,99,3.109,100,3.434,101,3.575,102,3.575,103,3.434,104,2.356,105,2.421,106,1.393,107,1.679,108,2.421,109,2.421,110,2.113,111,2.113,112,2.849,113,1.995,114,2.356,115,2.356,116,3.575,117,1.679]],["title/interfaces/ExpsRouterConfig.html",[59,0.306,118,1.745]],["body/interfaces/ExpsRouterConfig.html",[3,0.495,4,0.587,6,0.587,13,0.412,14,0.699,17,2.038,29,0.054,30,1.09,31,0.822,45,0.973,57,0.037,58,0.037,59,0.264,60,0.805,61,0.69,62,1.09,64,0.335,65,0.69,71,2.817,72,2.924,87,1.09,89,0.936,95,2.123,96,2.965,97,2.965,98,3.221,103,3.524,104,2.46,105,2.56,106,1.505,112,2.672,113,1.797,114,2.123,115,2.123,117,1.814,118,1.505,119,3.733,120,3.733,121,3.733,122,3.733,123,2.284,124,3.222]],["title/interfaces/HttpContext.html",[59,0.306,125,1.477]],["body/interfaces/HttpContext.html",[3,0.378,4,0.448,6,0.448,13,0.314,14,0.573,17,1.57,28,2.136,29,0.056,30,1.827,31,0.69,39,1.741,45,1.445,54,1.207,57,0.03,58,0.03,59,0.202,60,0.614,61,0.526,64,0.256,65,0.526,84,2.348,85,1.741,86,2.656,87,1.7,88,1.741,89,1.083,93,1.741,125,0.972,126,1.384,127,2.619,128,3.509,129,2.099,130,2.535,131,2.535,132,2.535,133,2.535,134,2.535,135,2.099,136,2.099,137,2.099,138,2.099,139,2.099,140,4.504,141,3.829,142,1.742,143,1.742,144,3.829,145,1.742,146,2.642,147,1.742,148,1.742,149,1.742,150,1.742,151,1.742]],["title/classes/ResponseBody.html",[0,1.263,152,1.745]],["body/classes/ResponseBody.html",[0,1.18,2,1.63,3,0.537,4,0.636,6,0.636,7,2.998,9,1.63,13,0.446,14,0.739,17,1.014,18,2.456,19,2.766,20,2.998,22,2.567,23,1.965,27,1.965,28,1.38,29,0.055,30,1.18,31,0.84,33,3.497,45,1.407,47,2.245,52,2.567,54,0.876,55,2.766,57,0.039,58,0.039,91,3.072,107,1.965,152,2.245,153,1.965,154,2.474,155,2.474]],["title/coverage.html",[156,2.834]],["body/coverage.html",[0,1.3,1,1.196,3,0.394,4,0.467,5,1.441,26,1.012,29,0.058,31,0.327,57,0.031,58,0.031,59,0.474,61,1.236,68,1.196,74,1.012,75,1.196,94,1.012,118,1.196,125,1.52,152,1.196,153,1.441,156,1.441,157,1.814,158,1.814,159,1.441,160,3.272,161,5.088,162,4.943,163,1.814,164,1.814,165,1.814,166,2.725,167,2.725,168,1.814,169,1.814,170,3.858,171,1.814,172,1.814,173,1.814,174,1.814,175,1.814,176,1.441,177,1.814,178,1.814,179,2.889,180,1.814,181,1.814,182,1.814,183,1.441,184,2.725,185,1.814,186,1.814,187,1.814,188,1.814,189,1.814,190,1.814,191,1.814,192,1.814,193,1.814,194,1.814,195,1.814,196,1.814,197,1.814,198,1.814,199,1.814,200,1.441,201,1.814,202,1.814,203,1.441]],["title/dependencies.html",[204,1.774,205,2.519]],["body/dependencies.html",[29,0.057,54,0.923,57,0.049,58,0.049,64,0.527,127,2.003,205,2.852,206,4.334,207,2.366,208,3.59,209,2.852,210,3.59,211,3.59,212,2.852,213,3.59]],["title/index.html",[13,0.403,214,1.774,215,1.774]],["body/index.html",[29,0.051,54,0.838,57,0.046,58,0.046,64,0.478,127,1.818,203,2.589,207,2.148,209,2.589,212,2.589,216,4.084,217,2.691,218,3.259,219,4.084,220,4.084,221,4.084,222,2.278,223,3.259,224,3.259,225,3.259,226,3.259,227,2.589,228,3.259,229,2.589,230,3.259,231,2.691,232,3.259,233,2.148]],["title/license.html",[214,1.774,215,1.774,222,1.246]],["body/license.html",[3,0.521,29,0.038,56,1.145,57,0.038,58,0.038,64,0.352,90,1.907,104,1.582,222,1.339,227,1.907,229,1.907,233,1.582,234,3.834,235,2.4,236,2.4,237,2.4,238,2.4,239,3.336,240,2.4,241,2.4,242,2.4,243,2.4,244,2.4,245,2.4,246,3.336,247,4.787,248,2.4,249,2.4,250,3.834,251,2.4,252,3.336,253,2.4,254,2.4,255,3.336,256,2.4,257,2.4,258,2.4,259,2.4,260,2.4,261,2.4,262,2.4,263,3.336,264,2.4,265,2.4,266,2.4,267,2.4,268,2.4,269,2.4,270,2.4,271,3.336,272,3.336,273,2.4,274,2.4,275,2.4,276,2.4,277,2.4,278,2.4,279,2.4,280,2.4,281,2.4,282,2.4,283,2.4,284,2.4,285,2.4,286,2.4,287,2.4,288,2.4,289,2.4,290,2.4,291,2.4,292,2.4,293,2.4,294,2.4,295,2.4,296,2.4,297,2.4,298,2.4,299,2.4,300,2.4]],["title/modules.html",[301,2.834]],["body/modules.html",[29,0.052,57,0.052,58,0.052,301,3.175]],["title/overview.html",[302,2.834]],["body/overview.html",[2,2.562,29,0.052,57,0.052,58,0.052,60,1.369,302,3.088,303,3.887,304,3.887]],["title/properties.html",[14,0.688,204,1.774]],["body/properties.html",[6,0.848,14,0.715,29,0.057,50,2.619,57,0.047,58,0.047,64,0.689,106,2.173,207,2.173,217,2.173,222,1.839,231,2.711,233,2.173,305,2.619,306,3.297,307,3.297,308,3.297,309,3.297,310,3.297,311,3.297,312,3.297,313,3.297,314,3.297,315,3.297]],["title/miscellaneous/typealiases.html",[316,1.246,317,3.171]],["body/miscellaneous/typealiases.html",[9,1.966,13,0.37,28,1.962,29,0.056,31,0.874,44,2.317,54,0.767,57,0.034,58,0.034,61,0.62,64,0.648,65,0.62,72,1.966,89,1.441,91,1.966,108,2.37,109,2.37,112,1.966,113,1.145,114,1.352,129,2.37,170,2.37,316,1.145,318,2.052,319,2.984,320,4.801,321,2.984,322,2.984,323,3.516,324,3.516,325,2.984,326,2.984,327,2.984,328,2.984,329,4.801,330,2.052,331,2.052,332,2.984,333,2.37,334,2.052,335,2.052,336,2.984,337,2.052,338,2.984,339,2.984,340,2.984,341,2.984,342,2.984,343,2.984,344,2.052]],["title/miscellaneous/variables.html",[316,1.246,345,2.519]],["body/miscellaneous/variables.html",[13,0.331,18,1.025,29,0.056,31,0.594,38,3.114,39,2.173,44,1.211,54,0.941,56,0.877,57,0.031,58,0.031,64,0.484,65,0.996,69,1.211,71,1.813,73,2.412,74,1.025,75,2.412,76,1.46,77,1.46,78,1.46,79,1.46,80,1.46,81,1.46,82,1.46,83,1.46,84,2.173,85,1.813,86,2.173,87,1.573,88,1.211,89,1.351,92,1.46,93,1.813,94,1.025,95,1.211,99,2.908,100,2.908,113,1.025,115,1.211,125,1.839,126,1.46,127,1.535,128,2.186,130,1.46,131,1.46,132,1.46,133,1.46,134,1.46,135,1.46,136,1.46,137,1.46,138,1.46,139,1.46,159,1.46,176,1.46,179,1.46,183,2.186,200,2.619,217,1.211,231,2.173,305,1.46,316,1.025,333,1.46,345,1.46,346,1.838,347,1.838,348,1.838,349,3.66,350,1.838,351,1.838,352,2.751,353,1.838,354,1.838,355,1.838,356,2.751,357,2.751,358,1.838,359,1.838,360,1.838,361,1.838,362,1.838,363,1.838,364,1.838,365,1.838,366,1.838,367,1.838,368,1.838,369,1.838,370,1.838,371,1.838,372,1.838,373,1.838,374,1.838,375,1.838,376,1.838,377,1.838,378,1.838,379,1.838]]],"invertedIndex":[["",{"_index":29,"title":{},"body":{"classes/CustomError.html":{},"interfaces/CustomErrorMap.html":{},"interfaces/ExpsAppRoute.html":{},"interfaces/ExpsConstants.html":{},"interfaces/ExpsRouteConfig.html":{},"interfaces/ExpsRouterConfig.html":{},"interfaces/HttpContext.html":{},"classes/ResponseBody.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["1.2.4",{"_index":211,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":162,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":161,"title":{},"body":{"coverage.html":{}}}],["13/13",{"_index":168,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":303,"title":{},"body":{"overview.html":{}}}],["2.0.16",{"_index":306,"title":{},"body":{"properties.html":{}}}],["2.0.4",{"_index":208,"title":{},"body":{"dependencies.html":{}}}],["2.0.7",{"_index":210,"title":{},"body":{"dependencies.html":{}}}],["2022",{"_index":236,"title":{},"body":{"license.html":{}}}],["3/3",{"_index":164,"title":{},"body":{"coverage.html":{}}}],["4.17.21",{"_index":213,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":304,"title":{},"body":{"overview.html":{}}}],["6/6",{"_index":163,"title":{},"body":{"coverage.html":{}}}],["7/7",{"_index":165,"title":{},"body":{"coverage.html":{}}}],["8/8",{"_index":167,"title":{},"body":{"coverage.html":{}}}],["9/9",{"_index":166,"title":{},"body":{"coverage.html":{}}}],["_iscustomerror",{"_index":16,"title":{},"body":{"classes/CustomError.html":{}}}],["above",{"_index":270,"title":{},"body":{"license.html":{}}}],["account",{"_index":238,"title":{},"body":{"license.html":{}}}],["action",{"_index":293,"title":{},"body":{"license.html":{}}}],["additional",{"_index":66,"title":{},"body":{"interfaces/CustomErrorMap.html":{}}}],["agarwal",{"_index":230,"title":{},"body":{"index.html":{}}}],["aliases",{"_index":318,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["am92/api",{"_index":206,"title":{},"body":{"dependencies.html":{}}}],["am92/express",{"_index":216,"title":{},"body":{"index.html":{}}}],["and/or",{"_index":261,"title":{},"body":{"license.html":{}}}],["ankit",{"_index":227,"title":{},"body":{"index.html":{},"license.html":{}}}],["api",{"_index":231,"title":{},"body":{"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["apilogging",{"_index":185,"title":{},"body":{"coverage.html":{}}}],["application",{"_index":65,"title":{},"body":{"interfaces/CustomErrorMap.html":{},"interfaces/ExpsAppRoute.html":{},"interfaces/ExpsConstants.html":{},"interfaces/ExpsRouteConfig.html":{},"interfaces/ExpsRouterConfig.html":{},"interfaces/HttpContext.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["arising",{"_index":297,"title":{},"body":{"license.html":{}}}],["array",{"_index":333,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["associated",{"_index":56,"title":{},"body":{"classes/CustomError.html":{},"interfaces/CustomErrorMap.html":{},"interfaces/ExpsAppRoute.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["asyncwrapper",{"_index":171,"title":{},"body":{"coverage.html":{}}}],["asyncwrapper(handshakehandler",{"_index":364,"title":{},"body":{"miscellaneous/variables.html":{}}}],["asyncwrapper(healthhandler",{"_index":361,"title":{},"body":{"miscellaneous/variables.html":{}}}],["asyncwrapper(versionhandler",{"_index":362,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authors",{"_index":287,"title":{},"body":{"license.html":{}}}],["before",{"_index":117,"title":{},"body":{"interfaces/ExpsRouteConfig.html":{},"interfaces/ExpsRouterConfig.html":{}}}],["better",{"_index":36,"title":{},"body":{"classes/CustomError.html":{}}}],["bodies",{"_index":123,"title":{},"body":{"interfaces/ExpsRouterConfig.html":{}}}],["body",{"_index":107,"title":{},"body":{"interfaces/ExpsRouteConfig.html":{},"classes/ResponseBody.html":{}}}],["boolean",{"_index":103,"title":{},"body":{"interfaces/ExpsRouteConfig.html":{},"interfaces/ExpsRouterConfig.html":{}}}],["c",{"_index":235,"title":{},"body":{"license.html":{}}}],["case",{"_index":11,"title":{},"body":{"classes/CustomError.html":{},"interfaces/ExpsRouteConfig.html":{}}}],["charge",{"_index":243,"title":{},"body":{"license.html":{}}}],["claim",{"_index":290,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/CustomError.html":{},"classes/ResponseBody.html":{}},"body":{"classes/CustomError.html":{},"classes/ResponseBody.html":{},"coverage.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/CustomError.html":{},"classes/ResponseBody.html":{},"overview.html":{}}}],["client",{"_index":85,"title":{},"body":{"interfaces/ExpsConstants.html":{},"interfaces/HttpContext.html":{},"miscellaneous/variables.html":{}}}],["client_id_header_key",{"_index":77,"title":{},"body":{"interfaces/ExpsConstants.html":{},"miscellaneous/variables.html":{}}}],["clientid",{"_index":143,"title":{},"body":{"interfaces/HttpContext.html":{}}}],["code",{"_index":47,"title":{},"body":{"classes/CustomError.html":{},"interfaces/CustomErrorMap.html":{},"classes/ResponseBody.html":{}}}],["collection",{"_index":70,"title":{},"body":{"interfaces/ExpsAppRoute.html":{}}}],["completed",{"_index":92,"title":{},"body":{"interfaces/ExpsConstants.html":{},"miscellaneous/variables.html":{}}}],["conditions",{"_index":269,"title":{},"body":{"license.html":{}}}],["configuration",{"_index":95,"title":{},"body":{"interfaces/ExpsRouteConfig.html":{},"interfaces/ExpsRouterConfig.html":{},"miscellaneous/variables.html":{}}}],["configureapp",{"_index":173,"title":{},"body":{"coverage.html":{}}}],["configurerouter",{"_index":175,"title":{},"body":{"coverage.html":{}}}],["connection",{"_index":299,"title":{},"body":{"license.html":{}}}],["constants",{"_index":75,"title":{},"body":{"interfaces/ExpsConstants.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":23,"title":{},"body":{"classes/CustomError.html":{},"classes/ResponseBody.html":{}}}],["constructor(e",{"_index":24,"title":{},"body":{"classes/CustomError.html":{}}}],["constructor(statuscode",{"_index":155,"title":{},"body":{"classes/ResponseBody.html":{}}}],["contains",{"_index":365,"title":{},"body":{"miscellaneous/variables.html":{}}}],["content",{"_index":218,"title":{},"body":{"index.html":{}}}],["context",{"_index":127,"title":{},"body":{"interfaces/HttpContext.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["contract",{"_index":294,"title":{},"body":{"license.html":{}}}],["contributors",{"_index":220,"title":{},"body":{"index.html":{}}}],["copies",{"_index":263,"title":{},"body":{"license.html":{}}}],["copy",{"_index":246,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":234,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":156,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creates",{"_index":27,"title":{},"body":{"classes/CustomError.html":{},"classes/ResponseBody.html":{}}}],["crypto",{"_index":207,"title":{},"body":{"dependencies.html":{},"index.html":{},"properties.html":{}}}],["custom",{"_index":43,"title":{},"body":{"classes/CustomError.html":{}}}],["customerror",{"_index":1,"title":{"classes/CustomError.html":{}},"body":{"classes/CustomError.html":{},"coverage.html":{}}}],["customerrormap",{"_index":26,"title":{"interfaces/CustomErrorMap.html":{}},"body":{"classes/CustomError.html":{},"interfaces/CustomErrorMap.html":{},"coverage.html":{}}}],["damages",{"_index":291,"title":{},"body":{"license.html":{}}}],["data",{"_index":18,"title":{},"body":{"classes/CustomError.html":{},"interfaces/CustomErrorMap.html":{},"classes/ResponseBody.html":{},"miscellaneous/variables.html":{}}}],["deal",{"_index":249,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":300,"title":{},"body":{"license.html":{}}}],["decryptcryptokey",{"_index":188,"title":{},"body":{"coverage.html":{}}}],["decryptpayload",{"_index":190,"title":{},"body":{"coverage.html":{}}}],["default",{"_index":38,"title":{},"body":{"classes/CustomError.html":{},"miscellaneous/variables.html":{}}}],["default_error_code",{"_index":46,"title":{},"body":{"classes/CustomError.html":{}}}],["default_error_msg",{"_index":48,"title":{},"body":{"classes/CustomError.html":{}}}],["default_error_status_code",{"_index":53,"title":{},"body":{"classes/CustomError.html":{}}}],["default_routes",{"_index":183,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["defines",{"_index":353,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defining",{"_index":62,"title":{},"body":{"interfaces/CustomErrorMap.html":{},"interfaces/ExpsAppRoute.html":{},"interfaces/ExpsConstants.html":{},"interfaces/ExpsRouteConfig.html":{},"interfaces/ExpsRouterConfig.html":{}}}],["definition",{"_index":329,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["delete",{"_index":340,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["dependencies",{"_index":205,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["description",{"_index":6,"title":{},"body":{"classes/CustomError.html":{},"interfaces/CustomErrorMap.html":{},"interfaces/ExpsAppRoute.html":{},"interfaces/ExpsConstants.html":{},"interfaces/ExpsRouteConfig.html":{},"interfaces/ExpsRouterConfig.html":{},"interfaces/HttpContext.html":{},"classes/ResponseBody.html":{},"properties.html":{}}}],["dictionary",{"_index":332,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["disable",{"_index":105,"title":{},"body":{"interfaces/ExpsRouteConfig.html":{},"interfaces/ExpsRouterConfig.html":{}}}],["disablebodylog",{"_index":96,"title":{},"body":{"interfaces/ExpsRouteConfig.html":{},"interfaces/ExpsRouterConfig.html":{}}}],["disablecrypto",{"_index":97,"title":{},"body":{"interfaces/ExpsRouteConfig.html":{},"interfaces/ExpsRouterConfig.html":{}}}],["distribute",{"_index":259,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":3,"title":{},"body":{"classes/CustomError.html":{},"interfaces/CustomErrorMap.html":{},"interfaces/ExpsAppRoute.html":{},"interfaces/ExpsConstants.html":{},"interfaces/ExpsRouteConfig.html":{},"interfaces/ExpsRouterConfig.html":{},"interfaces/HttpContext.html":{},"classes/ResponseBody.html":{},"coverage.html":{},"license.html":{}}}],["e",{"_index":32,"title":{},"body":{"classes/CustomError.html":{}}}],["each",{"_index":367,"title":{},"body":{"miscellaneous/variables.html":{}}}],["emap",{"_index":25,"title":{},"body":{"classes/CustomError.html":{}}}],["enabled",{"_index":98,"title":{},"body":{"interfaces/ExpsRouteConfig.html":{},"interfaces/ExpsRouterConfig.html":{}}}],["encryption",{"_index":87,"title":{},"body":{"interfaces/ExpsConstants.html":{},"interfaces/ExpsRouteConfig.html":{},"interfaces/ExpsRouterConfig.html":{},"interfaces/HttpContext.html":{},"miscellaneous/variables.html":{}}}],["encryption_key_header_key",{"_index":78,"title":{},"body":{"interfaces/ExpsConstants.html":{},"miscellaneous/variables.html":{}}}],["encryptionkey",{"_index":146,"title":{},"body":{"interfaces/HttpContext.html":{}}}],["encryptpayload",{"_index":192,"title":{},"body":{"coverage.html":{}}}],["error",{"_index":7,"title":{},"body":{"classes/CustomError.html":{},"interfaces/CustomErrorMap.html":{},"classes/ResponseBody.html":{}}}],["error's",{"_index":49,"title":{},"body":{"classes/CustomError.html":{}}}],["errorcode",{"_index":19,"title":{},"body":{"classes/CustomError.html":{},"interfaces/CustomErrorMap.html":{},"classes/ResponseBody.html":{}}}],["event",{"_index":90,"title":{},"body":{"interfaces/ExpsConstants.html":{},"license.html":{}}}],["example",{"_index":223,"title":{},"body":{"index.html":{}}}],["executed",{"_index":115,"title":{},"body":{"interfaces/ExpsRouteConfig.html":{},"interfaces/ExpsRouterConfig.html":{},"miscellaneous/variables.html":{}}}],["express",{"_index":64,"title":{},"body":{"interfaces/CustomErrorMap.html":{},"interfaces/ExpsAppRoute.html":{},"interfaces/ExpsConstants.html":{},"interfaces/ExpsRouteConfig.html":{},"interfaces/ExpsRouterConfig.html":{},"interfaces/HttpContext.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["expresshttpcontext.get",{"_index":369,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expresshttpcontext.set",{"_index":370,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expressjs",{"_index":310,"title":{},"body":{"properties.html":{}}}],["exps",{"_index":351,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expsapp",{"_index":319,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["expsapproute",{"_index":68,"title":{"interfaces/ExpsAppRoute.html":{}},"body":{"interfaces/ExpsAppRoute.html":{},"coverage.html":{}}}],["expsconstants",{"_index":74,"title":{"interfaces/ExpsConstants.html":{}},"body":{"interfaces/ExpsConstants.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["expsmiddleware",{"_index":112,"title":{},"body":{"interfaces/ExpsRouteConfig.html":{},"interfaces/ExpsRouterConfig.html":{},"miscellaneous/typealiases.html":{}}}],["expsnextfunction",{"_index":321,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["expsparams",{"_index":322,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["expsparamsarray",{"_index":323,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["expsparamsdictionary",{"_index":324,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["expsquery",{"_index":325,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["expsrequest",{"_index":326,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["expsresponse",{"_index":327,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["expsrouteconfig",{"_index":94,"title":{"interfaces/ExpsRouteConfig.html":{}},"body":{"interfaces/ExpsRouteConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["expsrouter",{"_index":328,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["expsrouterconfig",{"_index":118,"title":{"interfaces/ExpsRouterConfig.html":{}},"body":{"interfaces/ExpsRouterConfig.html":{},"coverage.html":{}}}],["extends",{"_index":12,"title":{},"body":{"classes/CustomError.html":{}}}],["extractheaders",{"_index":194,"title":{},"body":{"coverage.html":{}}}],["file",{"_index":4,"title":{},"body":{"classes/CustomError.html":{},"interfaces/CustomErrorMap.html":{},"interfaces/ExpsAppRoute.html":{},"interfaces/ExpsConstants.html":{},"interfaces/ExpsRouteConfig.html":{},"interfaces/ExpsRouterConfig.html":{},"interfaces/HttpContext.html":{},"classes/ResponseBody.html":{},"coverage.html":{}}}],["files",{"_index":248,"title":{},"body":{"license.html":{}}}],["fitness",{"_index":283,"title":{},"body":{"license.html":{}}}],["flag",{"_index":41,"title":{},"body":{"classes/CustomError.html":{}}}],["following",{"_index":268,"title":{},"body":{"license.html":{}}}],["framework",{"_index":308,"title":{},"body":{"properties.html":{}}}],["free",{"_index":242,"title":{},"body":{"license.html":{}}}],["function",{"_index":170,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["functions",{"_index":114,"title":{},"body":{"interfaces/ExpsRouteConfig.html":{},"interfaces/ExpsRouterConfig.html":{},"miscellaneous/typealiases.html":{}}}],["furnished",{"_index":266,"title":{},"body":{"license.html":{}}}],["gandhi",{"_index":228,"title":{},"body":{"index.html":{}}}],["getclientid",{"_index":130,"title":{},"body":{"interfaces/HttpContext.html":{},"miscellaneous/variables.html":{}}}],["getencryptionkey",{"_index":131,"title":{},"body":{"interfaces/HttpContext.html":{},"miscellaneous/variables.html":{}}}],["getplaintextencryptionkey",{"_index":132,"title":{},"body":{"interfaces/HttpContext.html":{},"miscellaneous/variables.html":{}}}],["getrequestid",{"_index":133,"title":{},"body":{"interfaces/HttpContext.html":{},"miscellaneous/variables.html":{}}}],["getsessionid",{"_index":134,"title":{},"body":{"interfaces/HttpContext.html":{},"miscellaneous/variables.html":{}}}],["getting",{"_index":214,"title":{"index.html":{},"license.html":{}},"body":{}}],["git@github.com:heliumtank92/am92",{"_index":314,"title":{},"body":{"properties.html":{}}}],["granted",{"_index":241,"title":{},"body":{"license.html":{}}}],["handleerror",{"_index":196,"title":{},"body":{"coverage.html":{}}}],["handleresponse",{"_index":198,"title":{},"body":{"coverage.html":{}}}],["handling",{"_index":359,"title":{},"body":{"miscellaneous/variables.html":{}}}],["handshake",{"_index":363,"title":{},"body":{"miscellaneous/variables.html":{}}}],["handshakehandler",{"_index":180,"title":{},"body":{"coverage.html":{}}}],["head",{"_index":343,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["header",{"_index":83,"title":{},"body":{"interfaces/ExpsConstants.html":{},"miscellaneous/variables.html":{}}}],["health",{"_index":360,"title":{},"body":{"miscellaneous/variables.html":{}}}],["healthhandler",{"_index":181,"title":{},"body":{"coverage.html":{}}}],["hereby",{"_index":240,"title":{},"body":{"license.html":{}}}],["holders",{"_index":288,"title":{},"body":{"license.html":{}}}],["homepage",{"_index":311,"title":{},"body":{"properties.html":{}}}],["http",{"_index":54,"title":{},"body":{"classes/CustomError.html":{},"interfaces/CustomErrorMap.html":{},"interfaces/ExpsRouteConfig.html":{},"interfaces/HttpContext.html":{},"classes/ResponseBody.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["httpcontext",{"_index":125,"title":{"interfaces/HttpContext.html":{}},"body":{"interfaces/HttpContext.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["https://heliumtank92.github.io/am92",{"_index":312,"title":{},"body":{"properties.html":{}}}],["id",{"_index":86,"title":{},"body":{"interfaces/ExpsConstants.html":{},"interfaces/HttpContext.html":{},"miscellaneous/variables.html":{}}}],["identification",{"_index":357,"title":{},"body":{"miscellaneous/variables.html":{}}}],["identifier",{"_index":157,"title":{},"body":{"coverage.html":{}}}],["identifiers",{"_index":378,"title":{},"body":{"miscellaneous/variables.html":{}}}],["identify",{"_index":42,"title":{},"body":{"classes/CustomError.html":{}}}],["implied",{"_index":279,"title":{},"body":{"license.html":{}}}],["include",{"_index":355,"title":{},"body":{"miscellaneous/variables.html":{}}}],["included",{"_index":273,"title":{},"body":{"license.html":{}}}],["including",{"_index":252,"title":{},"body":{"license.html":{}}}],["index",{"_index":13,"title":{"index.html":{}},"body":{"classes/CustomError.html":{},"interfaces/CustomErrorMap.html":{},"interfaces/ExpsAppRoute.html":{},"interfaces/ExpsConstants.html":{},"interfaces/ExpsRouteConfig.html":{},"interfaces/ExpsRouterConfig.html":{},"interfaces/HttpContext.html":{},"classes/ResponseBody.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["initialize",{"_index":178,"title":{},"body":{"coverage.html":{}}}],["insensitive",{"_index":110,"title":{},"body":{"interfaces/ExpsRouteConfig.html":{}}}],["install",{"_index":225,"title":{},"body":{"index.html":{}}}],["installation",{"_index":219,"title":{},"body":{"index.html":{}}}],["instance",{"_index":9,"title":{},"body":{"classes/CustomError.html":{},"classes/ResponseBody.html":{},"miscellaneous/typealiases.html":{}}}],["interface",{"_index":59,"title":{"interfaces/CustomErrorMap.html":{},"interfaces/ExpsAppRoute.html":{},"interfaces/ExpsConstants.html":{},"interfaces/ExpsRouteConfig.html":{},"interfaces/ExpsRouterConfig.html":{},"interfaces/HttpContext.html":{}},"body":{"interfaces/CustomErrorMap.html":{},"interfaces/ExpsAppRoute.html":{},"interfaces/ExpsConstants.html":{},"interfaces/ExpsRouteConfig.html":{},"interfaces/ExpsRouterConfig.html":{},"interfaces/HttpContext.html":{},"coverage.html":{}}}],["interfaces",{"_index":60,"title":{},"body":{"interfaces/CustomErrorMap.html":{},"interfaces/ExpsAppRoute.html":{},"interfaces/ExpsConstants.html":{},"interfaces/ExpsRouteConfig.html":{},"interfaces/ExpsRouterConfig.html":{},"interfaces/HttpContext.html":{},"overview.html":{}}}],["key",{"_index":84,"title":{},"body":{"interfaces/ExpsConstants.html":{},"interfaces/HttpContext.html":{},"miscellaneous/variables.html":{}}}],["keys",{"_index":356,"title":{},"body":{"miscellaneous/variables.html":{}}}],["keywords",{"_index":309,"title":{},"body":{"properties.html":{}}}],["kind",{"_index":278,"title":{},"body":{"license.html":{}}}],["leverages",{"_index":373,"title":{},"body":{"miscellaneous/variables.html":{}}}],["liability",{"_index":292,"title":{},"body":{"license.html":{}}}],["liable",{"_index":289,"title":{},"body":{"license.html":{}}}],["library",{"_index":374,"title":{},"body":{"miscellaneous/variables.html":{}}}],["license",{"_index":222,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["lifecycle",{"_index":379,"title":{},"body":{"miscellaneous/variables.html":{}}}],["limitation",{"_index":253,"title":{},"body":{"license.html":{}}}],["limited",{"_index":280,"title":{},"body":{"license.html":{}}}],["lodash",{"_index":212,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["logger",{"_index":209,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["logging",{"_index":106,"title":{},"body":{"interfaces/ExpsRouteConfig.html":{},"interfaces/ExpsRouterConfig.html":{},"properties.html":{}}}],["logmanager",{"_index":186,"title":{},"body":{"coverage.html":{}}}],["lowercase",{"_index":337,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["main",{"_index":116,"title":{},"body":{"interfaces/ExpsRouteConfig.html":{}}}],["management",{"_index":358,"title":{},"body":{"miscellaneous/variables.html":{}}}],["managing",{"_index":126,"title":{},"body":{"interfaces/HttpContext.html":{},"miscellaneous/variables.html":{}}}],["manner",{"_index":111,"title":{},"body":{"interfaces/ExpsRouteConfig.html":{}}}],["map",{"_index":63,"title":{},"body":{"interfaces/CustomErrorMap.html":{}}}],["matching",{"_index":58,"title":{},"body":{"classes/CustomError.html":{},"interfaces/CustomErrorMap.html":{},"interfaces/ExpsAppRoute.html":{},"interfaces/ExpsConstants.html":{},"interfaces/ExpsRouteConfig.html":{},"interfaces/ExpsRouterConfig.html":{},"interfaces/HttpContext.html":{},"classes/ResponseBody.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mehul",{"_index":229,"title":{},"body":{"index.html":{},"license.html":{}}}],["merchantability",{"_index":282,"title":{},"body":{"license.html":{}}}],["merge",{"_index":257,"title":{},"body":{"license.html":{}}}],["message",{"_index":20,"title":{},"body":{"classes/CustomError.html":{},"interfaces/CustomErrorMap.html":{},"classes/ResponseBody.html":{}}}],["method",{"_index":99,"title":{},"body":{"interfaces/ExpsRouteConfig.html":{},"miscellaneous/variables.html":{}}}],["methods",{"_index":129,"title":{},"body":{"interfaces/HttpContext.html":{},"miscellaneous/typealiases.html":{}}}],["middleware",{"_index":113,"title":{},"body":{"interfaces/ExpsRouteConfig.html":{},"interfaces/ExpsRouterConfig.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["miscellaneous",{"_index":316,"title":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":233,"title":{},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["modify",{"_index":256,"title":{},"body":{"license.html":{}}}],["module",{"_index":352,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modules",{"_index":301,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["name",{"_index":30,"title":{},"body":{"classes/CustomError.html":{},"interfaces/ExpsConstants.html":{},"interfaces/ExpsRouterConfig.html":{},"interfaces/HttpContext.html":{},"classes/ResponseBody.html":{}}}],["nanoid",{"_index":232,"title":{},"body":{"index.html":{}}}],["new",{"_index":201,"title":{},"body":{"coverage.html":{}}}],["next",{"_index":330,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["nextfunction",{"_index":331,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["node",{"_index":50,"title":{},"body":{"classes/CustomError.html":{},"properties.html":{}}}],["noninfringement",{"_index":286,"title":{},"body":{"license.html":{}}}],["notice",{"_index":271,"title":{},"body":{"license.html":{}}}],["npm",{"_index":224,"title":{},"body":{"index.html":{}}}],["number",{"_index":52,"title":{},"body":{"classes/CustomError.html":{},"interfaces/CustomErrorMap.html":{},"classes/ResponseBody.html":{}}}],["object",{"_index":44,"title":{},"body":{"classes/CustomError.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["obtaining",{"_index":245,"title":{},"body":{"license.html":{}}}],["optional",{"_index":17,"title":{},"body":{"classes/CustomError.html":{},"interfaces/CustomErrorMap.html":{},"interfaces/ExpsRouteConfig.html":{},"interfaces/ExpsRouterConfig.html":{},"interfaces/HttpContext.html":{},"classes/ResponseBody.html":{}}}],["options",{"_index":342,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["otherwise",{"_index":296,"title":{},"body":{"license.html":{}}}],["out",{"_index":298,"title":{},"body":{"license.html":{}}}],["overview",{"_index":302,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":204,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["parameters",{"_index":28,"title":{},"body":{"classes/CustomError.html":{},"interfaces/HttpContext.html":{},"classes/ResponseBody.html":{},"miscellaneous/typealiases.html":{}}}],["paramsarray",{"_index":334,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["paramsdictionary",{"_index":335,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["particular",{"_index":284,"title":{},"body":{"license.html":{}}}],["patch",{"_index":341,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["path",{"_index":73,"title":{},"body":{"interfaces/ExpsAppRoute.html":{},"interfaces/ExpsRouteConfig.html":{},"miscellaneous/variables.html":{}}}],["permission",{"_index":239,"title":{},"body":{"license.html":{}}}],["permit",{"_index":264,"title":{},"body":{"license.html":{}}}],["person",{"_index":244,"title":{},"body":{"license.html":{}}}],["persons",{"_index":265,"title":{},"body":{"license.html":{}}}],["pipeline",{"_index":100,"title":{},"body":{"interfaces/ExpsRouteConfig.html":{},"miscellaneous/variables.html":{}}}],["plaintext",{"_index":88,"title":{},"body":{"interfaces/ExpsConstants.html":{},"interfaces/HttpContext.html":{},"miscellaneous/variables.html":{}}}],["plaintext_encryption_key",{"_index":79,"title":{},"body":{"interfaces/ExpsConstants.html":{},"miscellaneous/variables.html":{}}}],["portions",{"_index":275,"title":{},"body":{"license.html":{}}}],["post",{"_index":338,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["postmiddlewares",{"_index":119,"title":{},"body":{"interfaces/ExpsRouterConfig.html":{}}}],["postpipeline",{"_index":101,"title":{},"body":{"interfaces/ExpsRouteConfig.html":{}}}],["premiddlewares",{"_index":120,"title":{},"body":{"interfaces/ExpsRouterConfig.html":{}}}],["prepipeline",{"_index":102,"title":{},"body":{"interfaces/ExpsRouteConfig.html":{}}}],["project",{"_index":51,"title":{},"body":{"classes/CustomError.html":{}}}],["properties",{"_index":14,"title":{"properties.html":{}},"body":{"classes/CustomError.html":{},"interfaces/CustomErrorMap.html":{},"interfaces/ExpsAppRoute.html":{},"interfaces/ExpsConstants.html":{},"interfaces/ExpsRouteConfig.html":{},"interfaces/ExpsRouterConfig.html":{},"interfaces/HttpContext.html":{},"classes/ResponseBody.html":{},"properties.html":{}}}],["provided",{"_index":276,"title":{},"body":{"license.html":{}}}],["provides",{"_index":371,"title":{},"body":{"miscellaneous/variables.html":{}}}],["publish",{"_index":258,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":285,"title":{},"body":{"license.html":{}}}],["put",{"_index":339,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["query",{"_index":336,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["readonly",{"_index":15,"title":{},"body":{"classes/CustomError.html":{}}}],["record",{"_index":124,"title":{},"body":{"interfaces/ExpsRouterConfig.html":{}}}],["registered",{"_index":366,"title":{},"body":{"miscellaneous/variables.html":{}}}],["related",{"_index":67,"title":{},"body":{"interfaces/CustomErrorMap.html":{}}}],["repository",{"_index":313,"title":{},"body":{"properties.html":{}}}],["representing",{"_index":154,"title":{},"body":{"classes/ResponseBody.html":{}}}],["req",{"_index":350,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request",{"_index":89,"title":{},"body":{"interfaces/ExpsConstants.html":{},"interfaces/ExpsRouteConfig.html":{},"interfaces/ExpsRouterConfig.html":{},"interfaces/HttpContext.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["request_id_header_key",{"_index":80,"title":{},"body":{"interfaces/ExpsConstants.html":{},"miscellaneous/variables.html":{}}}],["requestid",{"_index":149,"title":{},"body":{"interfaces/HttpContext.html":{}}}],["resources",{"_index":221,"title":{},"body":{"index.html":{}}}],["response",{"_index":91,"title":{},"body":{"interfaces/ExpsConstants.html":{},"classes/ResponseBody.html":{},"miscellaneous/typealiases.html":{}}}],["response_completed_event",{"_index":81,"title":{},"body":{"interfaces/ExpsConstants.html":{},"miscellaneous/variables.html":{}}}],["responsebody",{"_index":152,"title":{"classes/ResponseBody.html":{}},"body":{"classes/ResponseBody.html":{},"coverage.html":{}}}],["restriction",{"_index":251,"title":{},"body":{"license.html":{}}}],["results",{"_index":57,"title":{},"body":{"classes/CustomError.html":{},"interfaces/CustomErrorMap.html":{},"interfaces/ExpsAppRoute.html":{},"interfaces/ExpsConstants.html":{},"interfaces/ExpsRouteConfig.html":{},"interfaces/ExpsRouterConfig.html":{},"interfaces/HttpContext.html":{},"classes/ResponseBody.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retrieve",{"_index":376,"title":{},"body":{"miscellaneous/variables.html":{}}}],["returns",{"_index":140,"title":{},"body":{"interfaces/HttpContext.html":{}}}],["rewrap",{"_index":35,"title":{},"body":{"classes/CustomError.html":{}}}],["rights",{"_index":254,"title":{},"body":{"license.html":{}}}],["route",{"_index":69,"title":{},"body":{"interfaces/ExpsAppRoute.html":{},"interfaces/ExpsRouteConfig.html":{},"miscellaneous/variables.html":{}}}],["route_methods",{"_index":108,"title":{},"body":{"interfaces/ExpsRouteConfig.html":{},"miscellaneous/typealiases.html":{}}}],["route_methods_caps",{"_index":109,"title":{},"body":{"interfaces/ExpsRouteConfig.html":{},"miscellaneous/typealiases.html":{}}}],["router",{"_index":72,"title":{},"body":{"interfaces/ExpsAppRoute.html":{},"interfaces/ExpsRouterConfig.html":{},"miscellaneous/typealiases.html":{}}}],["routername",{"_index":121,"title":{},"body":{"interfaces/ExpsRouterConfig.html":{}}}],["routes",{"_index":71,"title":{},"body":{"interfaces/ExpsAppRoute.html":{},"interfaces/ExpsRouterConfig.html":{},"miscellaneous/variables.html":{}}}],["routesanity",{"_index":200,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["routesconfig",{"_index":122,"title":{},"body":{"interfaces/ExpsRouterConfig.html":{}}}],["save",{"_index":226,"title":{},"body":{"index.html":{}}}],["sell",{"_index":262,"title":{},"body":{"license.html":{}}}],["service",{"_index":21,"title":{},"body":{"classes/CustomError.html":{}}}],["session",{"_index":93,"title":{},"body":{"interfaces/ExpsConstants.html":{},"interfaces/HttpContext.html":{},"miscellaneous/variables.html":{}}}],["session_id_header_key",{"_index":82,"title":{},"body":{"interfaces/ExpsConstants.html":{},"miscellaneous/variables.html":{}}}],["sessionid",{"_index":151,"title":{},"body":{"interfaces/HttpContext.html":{}}}],["set",{"_index":128,"title":{},"body":{"interfaces/HttpContext.html":{},"miscellaneous/variables.html":{}}}],["setclientid",{"_index":135,"title":{},"body":{"interfaces/HttpContext.html":{},"miscellaneous/variables.html":{}}}],["setclientid(clientid",{"_index":142,"title":{},"body":{"interfaces/HttpContext.html":{}}}],["setencryptionkey",{"_index":136,"title":{},"body":{"interfaces/HttpContext.html":{},"miscellaneous/variables.html":{}}}],["setencryptionkey(encryptionkey",{"_index":145,"title":{},"body":{"interfaces/HttpContext.html":{}}}],["setplaintextencryptionkey",{"_index":137,"title":{},"body":{"interfaces/HttpContext.html":{},"miscellaneous/variables.html":{}}}],["setplaintextencryptionkey(encryptionkey",{"_index":147,"title":{},"body":{"interfaces/HttpContext.html":{}}}],["setrequestid",{"_index":138,"title":{},"body":{"interfaces/HttpContext.html":{},"miscellaneous/variables.html":{}}}],["setrequestid(requestid",{"_index":148,"title":{},"body":{"interfaces/HttpContext.html":{}}}],["setsessionid",{"_index":139,"title":{},"body":{"interfaces/HttpContext.html":{},"miscellaneous/variables.html":{}}}],["setsessionid(sessionid",{"_index":150,"title":{},"body":{"interfaces/HttpContext.html":{}}}],["shall",{"_index":272,"title":{},"body":{"license.html":{}}}],["software",{"_index":247,"title":{},"body":{"license.html":{}}}],["specific",{"_index":372,"title":{},"body":{"miscellaneous/variables.html":{}}}],["specifies",{"_index":368,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../constants.ts",{"_index":346,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../default_routes.ts",{"_index":347,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../httpcontext.ts",{"_index":348,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../types.ts",{"_index":320,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/classes/customerror.ts",{"_index":5,"title":{},"body":{"classes/CustomError.html":{},"coverage.html":{}}}],["src/classes/responsebody.ts",{"_index":153,"title":{},"body":{"classes/ResponseBody.html":{},"coverage.html":{}}}],["src/constants.ts",{"_index":159,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/lib/asyncwrapper.ts",{"_index":169,"title":{},"body":{"coverage.html":{}}}],["src/lib/configureapp.ts",{"_index":172,"title":{},"body":{"coverage.html":{}}}],["src/lib/configurerouter.ts",{"_index":174,"title":{},"body":{"coverage.html":{}}}],["src/lib/httpcontext.ts",{"_index":176,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/lib/initialize.ts",{"_index":177,"title":{},"body":{"coverage.html":{}}}],["src/middlewares/apilogging.ts",{"_index":184,"title":{},"body":{"coverage.html":{}}}],["src/middlewares/decryptcryptokey.ts",{"_index":187,"title":{},"body":{"coverage.html":{}}}],["src/middlewares/decryptpayload.ts",{"_index":189,"title":{},"body":{"coverage.html":{}}}],["src/middlewares/default_routes.ts",{"_index":179,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/middlewares/encryptpayload.ts",{"_index":191,"title":{},"body":{"coverage.html":{}}}],["src/middlewares/extractheaders.ts",{"_index":193,"title":{},"body":{"coverage.html":{}}}],["src/middlewares/handleerror.ts",{"_index":195,"title":{},"body":{"coverage.html":{}}}],["src/middlewares/handleresponse.ts",{"_index":197,"title":{},"body":{"coverage.html":{}}}],["src/middlewares/routesanity.ts",{"_index":199,"title":{},"body":{"coverage.html":{}}}],["src/types.ts",{"_index":61,"title":{},"body":{"interfaces/CustomErrorMap.html":{},"interfaces/ExpsAppRoute.html":{},"interfaces/ExpsConstants.html":{},"interfaces/ExpsRouteConfig.html":{},"interfaces/ExpsRouterConfig.html":{},"interfaces/HttpContext.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["started",{"_index":215,"title":{"index.html":{},"license.html":{}},"body":{}}],["statements",{"_index":158,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":55,"title":{},"body":{"classes/CustomError.html":{},"interfaces/CustomErrorMap.html":{},"classes/ResponseBody.html":{}}}],["statuscode",{"_index":22,"title":{},"body":{"classes/CustomError.html":{},"interfaces/CustomErrorMap.html":{},"classes/ResponseBody.html":{}}}],["store",{"_index":375,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string",{"_index":45,"title":{},"body":{"classes/CustomError.html":{},"interfaces/CustomErrorMap.html":{},"interfaces/ExpsAppRoute.html":{},"interfaces/ExpsConstants.html":{},"interfaces/ExpsRouteConfig.html":{},"interfaces/ExpsRouterConfig.html":{},"interfaces/HttpContext.html":{},"classes/ResponseBody.html":{}}}],["subject",{"_index":267,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":260,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":274,"title":{},"body":{"license.html":{}}}],["table",{"_index":203,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":202,"title":{},"body":{"coverage.html":{}}}],["team",{"_index":237,"title":{},"body":{"license.html":{}}}],["throughout",{"_index":354,"title":{},"body":{"miscellaneous/variables.html":{}}}],["thrown",{"_index":10,"title":{},"body":{"classes/CustomError.html":{}}}],["tort",{"_index":295,"title":{},"body":{"license.html":{}}}],["true",{"_index":40,"title":{},"body":{"classes/CustomError.html":{}}}],["type",{"_index":31,"title":{},"body":{"classes/CustomError.html":{},"interfaces/CustomErrorMap.html":{},"interfaces/ExpsAppRoute.html":{},"interfaces/ExpsConstants.html":{},"interfaces/ExpsRouteConfig.html":{},"interfaces/ExpsRouterConfig.html":{},"interfaces/HttpContext.html":{},"classes/ResponseBody.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":317,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["undefined",{"_index":141,"title":{},"body":{"interfaces/HttpContext.html":{}}}],["understanding",{"_index":37,"title":{},"body":{"classes/CustomError.html":{}}}],["uppercase",{"_index":344,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["use",{"_index":255,"title":{},"body":{"license.html":{}}}],["used",{"_index":76,"title":{},"body":{"interfaces/ExpsConstants.html":{},"miscellaneous/variables.html":{}}}],["utilities",{"_index":307,"title":{},"body":{"properties.html":{}}}],["utils",{"_index":217,"title":{},"body":{"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["utils.git",{"_index":315,"title":{},"body":{"properties.html":{}}}],["value",{"_index":39,"title":{},"body":{"classes/CustomError.html":{},"interfaces/HttpContext.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":160,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":345,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["various",{"_index":377,"title":{},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":305,"title":{},"body":{"properties.html":{},"miscellaneous/variables.html":{}}}],["versionhandler",{"_index":182,"title":{},"body":{"coverage.html":{}}}],["void",{"_index":144,"title":{},"body":{"interfaces/HttpContext.html":{}}}],["warranties",{"_index":281,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":277,"title":{},"body":{"license.html":{}}}],["whether",{"_index":104,"title":{},"body":{"interfaces/ExpsRouteConfig.html":{},"interfaces/ExpsRouterConfig.html":{},"license.html":{}}}],["whose",{"_index":8,"title":{},"body":{"classes/CustomError.html":{}}}],["without",{"_index":250,"title":{},"body":{"license.html":{}}}],["wrap",{"_index":34,"title":{},"body":{"classes/CustomError.html":{}}}],["x",{"_index":349,"title":{},"body":{"miscellaneous/variables.html":{}}}],["yes",{"_index":33,"title":{},"body":{"classes/CustomError.html":{},"classes/ResponseBody.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/CustomError.html":{"url":"classes/CustomError.html","title":"class - CustomError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CustomError\n\n\n\n        \n            Documentation\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/classes/CustomError.ts\n        \n\n\n            \n                Description\n            \n            \n                Error class whose instance is thrown in case of any error.\n\n            \n\n            \n                Extends\n            \n            \n                        Error\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                _isCustomError\n                            \n                            \n                                    Optional\n                                data\n                            \n                            \n                                    Optional\n                                error\n                            \n                            \n                                errorCode\n                            \n                            \n                                message\n                            \n                            \n                                    Readonly\n                                service\n                            \n                            \n                                statusCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(e?: any, eMap?: CustomErrorMap)\n                    \n                \n\n                \n                    \n                            Creates an instance of CustomError.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                                Any Error instance to wrap with CustomError.\n\n                                                        \n                                                \n                                                \n                                                        eMap\n                                                  \n                                                        \n                                                                        CustomErrorMap\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                                CustomErrorMap to rewrap error for better understanding.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        _isCustomError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n\n            \n                \n                    Flag to identify if error is a custom error.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n            \n                \n                    Data object.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n            \n                \n                    Error object.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : DEFAULT_ERROR_CODE\n                    \n                \n\n            \n                \n                    Error Code.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : DEFAULT_ERROR_MSG\n                    \n                \n\n            \n                \n                    Error's message string.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        service\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : SERVICE\n                    \n                \n\n            \n                \n                    Node project from which Error is thrown.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        statusCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : DEFAULT_ERROR_STATUS_CODE\n                    \n                \n\n            \n                \n                    HTTP status code associated with the error.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CustomErrorMap.html":{"url":"interfaces/CustomErrorMap.html","title":"interface - CustomErrorMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CustomErrorMap\n\n\n\n        \n            Documentation\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/TYPES.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for defining an error map in the Express application.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            code\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            data\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            errorCode\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            message\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            statusCode\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The code associated with the error.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Additional data related to the error.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        errorCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The error code.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The error message.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        statusCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        statusCode:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The HTTP status code for the error.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExpsAppRoute.html":{"url":"interfaces/ExpsAppRoute.html","title":"interface - ExpsAppRoute","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ExpsAppRoute\n\n\n\n        \n            Documentation\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/TYPES.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for defining a route or collection of routes with its associated router in the Express application.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            path\n                                        \n                                \n                                \n                                        \n                                            router\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The path of the route.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        router\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        router:     Router\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Router\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The router associated with the route.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExpsConstants.html":{"url":"interfaces/ExpsConstants.html","title":"interface - ExpsConstants","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ExpsConstants\n\n\n\n        \n            Documentation\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/TYPES.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for defining constants used in the Express application.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            CLIENT_ID_HEADER_KEY\n                                        \n                                \n                                \n                                        \n                                            ENCRYPTION_KEY_HEADER_KEY\n                                        \n                                \n                                \n                                        \n                                            PLAINTEXT_ENCRYPTION_KEY\n                                        \n                                \n                                \n                                        \n                                            REQUEST_ID_HEADER_KEY\n                                        \n                                \n                                \n                                        \n                                            RESPONSE_COMPLETED_EVENT\n                                        \n                                \n                                \n                                        \n                                            SESSION_ID_HEADER_KEY\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        CLIENT_ID_HEADER_KEY\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        CLIENT_ID_HEADER_KEY:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Header key for the client ID.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ENCRYPTION_KEY_HEADER_KEY\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ENCRYPTION_KEY_HEADER_KEY:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Header key for the encryption key.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        PLAINTEXT_ENCRYPTION_KEY\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        PLAINTEXT_ENCRYPTION_KEY:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Key for the plaintext encryption key.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        REQUEST_ID_HEADER_KEY\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        REQUEST_ID_HEADER_KEY:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Header key for the request ID.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        RESPONSE_COMPLETED_EVENT\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        RESPONSE_COMPLETED_EVENT:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Event name for the response completed event.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SESSION_ID_HEADER_KEY\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        SESSION_ID_HEADER_KEY:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Header key for the session ID.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExpsRouteConfig.html":{"url":"interfaces/ExpsRouteConfig.html","title":"interface - ExpsRouteConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ExpsRouteConfig\n\n\n\n        \n            Documentation\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/TYPES.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for defining the configuration of a route in the Express application.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            disableBodyLog\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableCrypto\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            enabled\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            method\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            path\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            pipeline\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            postPipeline\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            prePipeline\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        disableBodyLog\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableBodyLog:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Whether to disable logging of the request body.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableCrypto\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableCrypto:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Whether to disable encryption for the route.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        enabled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        enabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Whether the route is enabled.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        method\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        method:     ROUTE_METHODS | ROUTE_METHODS_CAPS\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ROUTE_METHODS | ROUTE_METHODS_CAPS\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The HTTP method for the route in a case insensitive manner.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The path of the route.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pipeline\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pipeline:         ExpsMiddleware[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ExpsMiddleware[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Middleware functions to be executed in the main pipeline.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postPipeline\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        postPipeline:         ExpsMiddleware[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ExpsMiddleware[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Middleware functions to be executed after the main pipeline.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        prePipeline\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        prePipeline:         ExpsMiddleware[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ExpsMiddleware[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Middleware functions to be executed before the main pipeline.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExpsRouterConfig.html":{"url":"interfaces/ExpsRouterConfig.html","title":"interface - ExpsRouterConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ExpsRouterConfig\n\n\n\n        \n            Documentation\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/TYPES.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for defining the configuration of a router in the Express application.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            disableBodyLog\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableCrypto\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            enabled\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            postMiddlewares\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            preMiddlewares\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            routerName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            routesConfig\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        disableBodyLog\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableBodyLog:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Whether to disable logging of all the request bodies in the router.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableCrypto\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableCrypto:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Whether to disable encryption for all routes in the router.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        enabled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        enabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Whether all routes in the router are enabled.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postMiddlewares\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        postMiddlewares:         ExpsMiddleware[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ExpsMiddleware[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Middleware functions to be executed after the routes.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        preMiddlewares\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        preMiddlewares:         ExpsMiddleware[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ExpsMiddleware[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Middleware functions to be executed before the routes.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        routerName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        routerName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The name of the router.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        routesConfig\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        routesConfig:         Record\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Record\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Configuration for the routes in the router.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HttpContext.html":{"url":"interfaces/HttpContext.html","title":"interface - HttpContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HttpContext\n\n\n\n        \n            Documentation\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/TYPES.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for managing HTTP context in the Express application.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            get\n                                        \n                                \n                                \n                                        \n                                            set\n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getClientId\n                                    \n                                \n                                \n                                    \n                                        getEncryptionKey\n                                    \n                                \n                                \n                                    \n                                        getPlaintextEncryptionKey\n                                    \n                                \n                                \n                                    \n                                        getRequestId\n                                    \n                                \n                                \n                                    \n                                        getSessionId\n                                    \n                                \n                                \n                                    \n                                        setClientId\n                                    \n                                \n                                \n                                    \n                                        setEncryptionKey\n                                    \n                                \n                                \n                                    \n                                        setPlaintextEncryptionKey\n                                    \n                                \n                                \n                                    \n                                        setRequestId\n                                    \n                                \n                                \n                                    \n                                        setSessionId\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getClientId\n                        \n                    \n                \n            \n            \n                \ngetClientId()\n                \n            \n\n\n\n\n            \n                \n                        Get the client ID from the HTTP context.\n\n\n                        \n                            Returns :     string | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getEncryptionKey\n                        \n                    \n                \n            \n            \n                \ngetEncryptionKey()\n                \n            \n\n\n\n\n            \n                \n                        Get the encryption key from the HTTP context.\n\n\n                        \n                            Returns :     string | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPlaintextEncryptionKey\n                        \n                    \n                \n            \n            \n                \ngetPlaintextEncryptionKey()\n                \n            \n\n\n\n\n            \n                \n                        Get the plaintext encryption key from the HTTP context.\n\n\n                        \n                            Returns :     string | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRequestId\n                        \n                    \n                \n            \n            \n                \ngetRequestId()\n                \n            \n\n\n\n\n            \n                \n                        Get the request ID from the HTTP context.\n\n\n                        \n                            Returns :     string | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSessionId\n                        \n                    \n                \n            \n            \n                \ngetSessionId()\n                \n            \n\n\n\n\n            \n                \n                        Get the session ID from the HTTP context.\n\n\n                        \n                            Returns :     string | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setClientId\n                        \n                    \n                \n            \n            \n                \nsetClientId(clientId: string)\n                \n            \n\n\n\n\n            \n                \n                        Set the client ID in the HTTP context.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                clientId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setEncryptionKey\n                        \n                    \n                \n            \n            \n                \nsetEncryptionKey(encryptionKey: string)\n                \n            \n\n\n\n\n            \n                \n                        Set the encryption key in the HTTP context.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                encryptionKey\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPlaintextEncryptionKey\n                        \n                    \n                \n            \n            \n                \nsetPlaintextEncryptionKey(encryptionKey: string)\n                \n            \n\n\n\n\n            \n                \n                        Set the plaintext encryption key in the HTTP context.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                encryptionKey\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setRequestId\n                        \n                    \n                \n            \n            \n                \nsetRequestId(requestId: string)\n                \n            \n\n\n\n\n            \n                \n                        Set the request ID in the HTTP context.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                requestId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSessionId\n                        \n                    \n                \n            \n            \n                \nsetSessionId(sessionId: string)\n                \n            \n\n\n\n\n            \n                \n                        Set the session ID in the HTTP context.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sessionId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        get\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        get:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Get a value from the HTTP context.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        set\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        set:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Set a value in the HTTP context.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResponseBody.html":{"url":"classes/ResponseBody.html","title":"class - ResponseBody","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResponseBody\n\n\n\n        \n            Documentation\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/classes/ResponseBody.ts\n        \n\n\n            \n                Description\n            \n            \n                Class representing the response body.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                error\n                            \n                            \n                                errorCode\n                            \n                            \n                                message\n                            \n                            \n                                status\n                            \n                            \n                                statusCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(statusCode?: number, message?: string, data?: any, error?: any, errorCode?: string)\n                    \n                \n\n                \n                    \n                            Creates an instance of ResponseBody.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        statusCode\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        error\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        errorCode\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n            \n                \n                    The data for the response.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n            \n                \n                    The error for the response.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n            \n                \n                    The error code for the response.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n            \n                \n                    The message for the response.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n            \n                \n                    The HTTP status message for the response.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        statusCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n            \n                \n                    The HTTP status code for the response.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/CONSTANTS.ts\n            \n            variable\n            CONSTANTS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/TYPES.ts\n            \n            interface\n            CustomErrorMap\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/TYPES.ts\n            \n            interface\n            ExpsAppRoute\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/TYPES.ts\n            \n            interface\n            ExpsConstants\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/TYPES.ts\n            \n            interface\n            ExpsRouteConfig\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/TYPES.ts\n            \n            interface\n            ExpsRouterConfig\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/TYPES.ts\n            \n            interface\n            HttpContext\n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                src/classes/CustomError.ts\n            \n            class\n            CustomError\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/classes/ResponseBody.ts\n            \n            class\n            ResponseBody\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/lib/asyncWrapper.ts\n            \n            function\n            asyncWrapper\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/configureApp.ts\n            \n            function\n            configureApp\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/configureRouter.ts\n            \n            function\n            configureRouter\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/httpContext.ts\n            \n            variable\n            httpContext\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/initialize.ts\n            \n            function\n            initialize\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/middlewares/DEFAULT_ROUTES.ts\n            \n            function\n            handshakeHandler\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/middlewares/DEFAULT_ROUTES.ts\n            \n            function\n            healthHandler\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/middlewares/DEFAULT_ROUTES.ts\n            \n            function\n            versionHandler\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/middlewares/DEFAULT_ROUTES.ts\n            \n            variable\n            DEFAULT_ROUTES\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/middlewares/apiLogging.ts\n            \n            function\n            apiLogging\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/middlewares/apiLogging.ts\n            \n            function\n            logManager\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/middlewares/decryptCryptoKey.ts\n            \n            function\n            decryptCryptoKey\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/middlewares/decryptPayload.ts\n            \n            function\n            decryptPayload\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/middlewares/encryptPayload.ts\n            \n            function\n            encryptPayload\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/middlewares/extractHeaders.ts\n            \n            function\n            extractHeaders\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/middlewares/handleError.ts\n            \n            function\n            handleError\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/middlewares/handleResponse.ts\n            \n            function\n            handleResponse\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/middlewares/routeSanity.ts\n            \n            function\n            routeSanity\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @am92/api-crypto : ^2.0.4\n        \n            @am92/api-logger : ^2.0.7\n        \n            express-http-context : ^1.2.4\n        \n            lodash : ^4.17.21\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n@am92/express-utils\n \n \n \n \n\n\n\n\nTable of Content\n\nInstallation\nContributors\nResources\nLicense\n\n\n\nInstallation\nExample :$ npm install --save @am92/express-utils\n\nContributors\n\n  \n    \n      \n        \n          \n          \n          Ankit Gandhi\n        \n      \n      \n        \n          \n          \n          Mehul Agarwal\n        \n      \n    \n  \n\n\n\n\nResources\n\nApi Crypto\nApi Logger\nExpress Http Context\nLodash\nNanoid\n\n\n\nLicense\n\nMIT\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2022 Ankit Mehul Team Account\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    6 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 2.0.16\n        \n            Description : Utilities for Express Framework\n        \n            Keywords : express, expressjs, node, api crypto, api logging\n        \n            Homepage : https://heliumtank92.github.io/am92-express-utils\n        \n            License : MIT\n        \n            Repository : git@github.com:heliumtank92/am92-express-utils.git\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ExpsApp   (src/.../TYPES.ts)\n                        \n                        \n                            ExpsMiddleware   (src/.../TYPES.ts)\n                        \n                        \n                            ExpsNextFunction   (src/.../TYPES.ts)\n                        \n                        \n                            ExpsParams   (src/.../TYPES.ts)\n                        \n                        \n                            ExpsParamsArray   (src/.../TYPES.ts)\n                        \n                        \n                            ExpsParamsDictionary   (src/.../TYPES.ts)\n                        \n                        \n                            ExpsQuery   (src/.../TYPES.ts)\n                        \n                        \n                            ExpsRequest   (src/.../TYPES.ts)\n                        \n                        \n                            ExpsResponse   (src/.../TYPES.ts)\n                        \n                        \n                            ExpsRouter   (src/.../TYPES.ts)\n                        \n                        \n                            ROUTE_METHODS   (src/.../TYPES.ts)\n                        \n                        \n                            ROUTE_METHODS_CAPS   (src/.../TYPES.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/TYPES.ts\n    \n    \n        \n            \n                \n                    \n                    ExpsApp\n                \n            \n            \n                \n                    Type definition for the Express application instance.\n\n                \n            \n            \n                \n                        Express\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ExpsMiddleware\n                \n            \n            \n                \n                    Type definition for Express middleware functions.\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ExpsNextFunction\n                \n            \n            \n                \n                    Type definition for the Express next function.\n\n                \n            \n            \n                \n                        NextFunction\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ExpsParams\n                \n            \n            \n                \n                    Type definition for parameters which can be either a dictionary or an array.\n\n                \n            \n            \n                \n                        ExpsParamsDictionary | ExpsParamsArray\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ExpsParamsArray\n                \n            \n            \n                \n                    Type definition for an array of parameters.\n\n                \n            \n            \n                \n                        ParamsArray\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ExpsParamsDictionary\n                \n            \n            \n                \n                    Type definition for a dictionary of parameters.\n\n                \n            \n            \n                \n                        ParamsDictionary\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ExpsQuery\n                \n            \n            \n                \n                    Type definition for the request query object.\n\n                \n            \n            \n                \n                        Query\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ExpsRequest\n                \n            \n            \n                \n                    Type definition for the Express request object.\n\n                \n            \n            \n                \n                        Request\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ExpsResponse\n                \n            \n            \n                \n                    Type definition for the Express response object.\n\n                \n            \n            \n                \n                        Response\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ExpsRouter\n                \n            \n            \n                \n                    Type definition for the Express router instance.\n\n                \n            \n            \n                \n                        Router\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ROUTE_METHODS\n                \n            \n            \n                \n                    Type definition for HTTP methods in lowercase.\n\n                \n            \n            \n                \n                        \"get\" | \"post\" | \"put\" | \"delete\" | \"patch\" | \"options\" | \"head\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ROUTE_METHODS_CAPS\n                \n            \n            \n                \n                    Type definition for HTTP methods in uppercase.\n\n                \n            \n            \n                \n                        \"GET\" | \"POST\" | \"PUT\" | \"DELETE\" | \"PATCH\" | \"OPTIONS\" | \"HEAD\"\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CONSTANTS   (src/.../CONSTANTS.ts)\n                        \n                        \n                            DEFAULT_ROUTES   (src/.../DEFAULT_ROUTES.ts)\n                        \n                        \n                            httpContext   (src/.../httpContext.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/CONSTANTS.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CONSTANTS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ExpsConstants\n\n                    \n                \n                \n                    \n                        Default value : {\n  REQUEST_ID_HEADER_KEY: 'x-req-id',\n  SESSION_ID_HEADER_KEY: 'x-session-id',\n  CLIENT_ID_HEADER_KEY: 'x-api-client-id',\n  ENCRYPTION_KEY_HEADER_KEY: 'x-api-encryption-key',\n  PLAINTEXT_ENCRYPTION_KEY: 'plaintext-api-encryption-key',\n  RESPONSE_COMPLETED_EVENT: 'exps-utils-completed'\n}\n                    \n                \n\n            \n                \n                    This module defines a set of constants used throughout the application.\nThese constants include header keys for request identification, session management,\nclient identification, and encryption key handling.\n\n                \n            \n\n        \n    \n\n    src/middlewares/DEFAULT_ROUTES.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_ROUTES\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ExpsRouteConfig[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    path: '/health',\n    method: 'get',\n    pipeline: [routeSanity, asyncWrapper(healthHandler)]\n  },\n  {\n    path: '/version',\n    method: 'get',\n    pipeline: [routeSanity, asyncWrapper(versionHandler)]\n  },\n  {\n    path: '/handshake',\n    method: 'get',\n    pipeline: [routeSanity, asyncWrapper(handshakeHandler)]\n  }\n]\n                    \n                \n\n            \n                \n                    Default routes configuration for the Express application.\nThis array contains the default routes that are registered with the Express application.\nEach route object specifies the path, HTTP method, and the middleware pipeline to be executed.\n\n                \n            \n\n        \n    \n\n    src/lib/httpContext.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        httpContext\n                        \n                    \n                \n            \n                \n                    \n                        Type :         HttpContext\n\n                    \n                \n                \n                    \n                        Default value : {\n  get: expressHttpContext.get,\n  set: expressHttpContext.set,\n  getRequestId,\n  setRequestId,\n  getSessionId,\n  setSessionId,\n  getClientId,\n  setClientId,\n  getEncryptionKey,\n  setEncryptionKey,\n  getPlaintextEncryptionKey,\n  setPlaintextEncryptionKey\n}\n                    \n                \n\n            \n                \n                    This module provides a context for managing HTTP request-specific data.\nIt leverages the 'express-http-context' library to store and retrieve\nvarious identifiers and keys associated with the HTTP request lifecycle.\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
