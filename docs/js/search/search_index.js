var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/AppRoute.html",[0,0.306,1,1.745]],["body/interfaces/AppRoute.html",[0,0.362,1,2.059,2,1.101,3,0.678,4,0.803,5,0.943,6,0.803,7,1.49,8,2.882,9,3.124,10,2.059,11,1.897,12,3.923,13,0.458,14,1.101,15,0.563,16,0.862,17,3.034,18,1.2,19,0.717,20,0.052,21,0.045,22,0.045]],["title/classes/CustomError.html",[23,1.263,24,1.745]],["body/classes/CustomError.html",[3,0.442,4,0.524,6,0.764,11,0.973,15,0.368,16,0.644,18,1.162,19,0.795,20,0.055,21,0.034,22,0.034,23,0.973,24,2.309,25,1.344,26,1.62,27,3.19,28,2.039,29,2.783,30,2.97,31,1.62,32,2.039,33,3.849,34,2.97,35,1.677,36,1.954,37,1.957,38,2.309,39,3.503,40,1.957,41,1.62,42,2.039,43,2.97,44,1.954,45,1.62,46,1.344,47,1.137,48,2.039,49,2.359,50,2.039,51,2.039,52,2.039,53,2.039,54,3.25,55,2.696,56,2.039,57,2.039,58,2.039,59,2.039,60,2.359,61,2.039,62,1.957,63,2.039,64,2.039,65,1.62,66,2.039,67,1.344,68,2.039,69,0.524,70,1.344]],["title/interfaces/CustomErrorMap.html",[0,0.306,44,1.477]],["body/interfaces/CustomErrorMap.html",[0,0.298,2,0.906,3,0.558,4,0.661,5,0.776,6,0.661,7,1.226,11,1.226,13,0.377,14,0.906,15,0.463,16,0.758,18,1.39,19,0.804,20,0.053,21,0.04,22,0.04,27,3.033,35,2.014,36,2.38,37,2.619,38,2.811,40,2.619,44,1.434,62,3.033,67,2.304,69,0.661,70,1.694,71,2.57,72,2.57,73,2.57]],["title/interfaces/ExpsConstants.html",[0,0.306,74,1.477]],["body/interfaces/ExpsConstants.html",[0,0.302,2,0.919,3,0.566,4,0.671,5,0.788,6,0.671,7,1.245,13,0.383,14,0.919,15,0.47,16,0.766,18,1.488,19,0.809,20,0.054,21,0.04,22,0.04,74,1.456,75,1.719,76,2.073,77,3.181,78,3.181,79,3.181,80,3.181,81,3.181,82,3.409,83,3.115,84,1.719,85,2.639,86,1.685,87,1.719,88,1.245,89,1.719]],["title/interfaces/ExpsRouteConfig.html",[0,0.306,90,1.477]],["body/interfaces/ExpsRouteConfig.html",[0,0.239,2,0.727,3,0.447,4,0.531,5,0.623,6,0.531,7,0.984,8,2.709,13,0.303,14,0.727,15,0.372,16,0.65,17,2.551,18,0.904,19,0.817,20,0.054,21,0.034,22,0.034,31,1.639,35,1.97,69,0.531,86,0.984,88,0.984,90,1.151,91,1.36,92,2.802,93,2.802,94,3.87,95,3.075,96,3.406,97,3.527,98,3.527,99,3.406,100,2.324,101,2.38,102,1.36,103,1.639,104,2.38,105,2.38,106,2.063,107,2.063,108,2.577,109,2.324,110,2.324,111,3.527,112,1.639]],["title/interfaces/ExpsRouterConfig.html",[0,0.306,113,1.745]],["body/interfaces/ExpsRouterConfig.html",[0,0.275,2,0.836,3,0.515,4,0.61,5,0.716,6,0.61,7,1.132,10,2.717,12,3.444,13,0.348,14,0.836,15,0.428,16,0.718,18,0.999,19,0.81,20,0.053,21,0.038,22,0.038,35,1.927,47,1.323,86,1.132,88,1.132,91,2.18,92,3.027,93,3.027,99,3.275,100,2.18,101,2.628,102,1.563,108,2.505,109,2.18,110,2.18,112,1.884,113,1.563,114,3.81,115,3.81,116,3.81,117,3.81,118,2.372,119,3.309]],["title/interfaces/HttpContext.html",[0,0.306,120,1.477]],["body/interfaces/HttpContext.html",[0,0.192,2,0.586,3,0.361,4,0.428,5,0.502,6,0.428,13,0.244,14,0.586,15,0.3,16,0.553,18,1.432,19,0.676,20,0.056,21,0.029,22,0.029,35,1.537,46,2.472,47,2.092,55,1.68,69,1.196,83,2.292,84,1.68,85,2.608,86,1.659,87,1.68,88,1.216,89,1.68,120,0.927,121,1.321,122,2.593,123,3.463,124,2.025,125,2.464,126,2.464,127,2.464,128,2.464,129,2.464,130,2.025,131,2.025,132,2.025,133,2.025,134,2.025,135,4.449,136,3.75,137,1.662,138,1.662,139,3.75,140,1.662,141,2.55,142,1.662,143,1.662,144,1.662,145,1.662,146,1.662]],["title/classes/ResponseBody.html",[23,1.263,147,1.745]],["body/classes/ResponseBody.html",[3,0.522,4,0.618,6,0.618,15,0.434,16,0.725,18,1.397,19,0.834,20,0.054,21,0.038,22,0.038,23,1.147,25,1.585,27,2.972,29,1.91,35,0.986,36,2.431,37,2.733,38,2.972,40,2.529,41,1.91,45,1.91,46,1.585,47,1.342,49,3.294,62,2.201,67,2.529,69,0.859,70,2.733,103,1.91,147,2.201,148,1.91,149,2.405,150,4.625,151,2.405]],["title/coverage.html",[152,2.834]],["body/coverage.html",[0,0.466,1,1.143,3,0.376,4,0.446,5,1.215,19,0.313,20,0.058,21,0.03,22,0.03,23,1.256,24,1.143,26,1.378,44,0.967,74,0.967,75,1.143,90,0.967,113,1.143,120,1.469,147,1.143,148,1.378,152,1.378,153,1.734,154,1.734,155,1.378,156,3.183,157,5.063,158,4.911,159,1.734,160,2.633,161,2.633,162,1.734,163,1.734,164,1.734,165,1.734,166,3.828,167,1.734,168,1.734,169,1.734,170,1.734,171,1.734,172,1.378,173,1.734,174,1.734,175,2.824,176,1.734,177,1.734,178,1.734,179,1.378,180,2.633,181,1.734,182,1.734,183,1.734,184,1.734,185,1.734,186,1.734,187,1.734,188,1.734,189,1.734,190,1.734,191,1.734,192,1.734,193,1.734,194,1.734,195,1.734,196,1.378,197,1.734,198,1.734,199,1.378]],["title/dependencies.html",[200,1.774,201,2.519]],["body/dependencies.html",[13,0.521,20,0.057,21,0.049,22,0.049,69,0.913,122,1.98,201,2.819,202,4.303,203,2.338,204,4.303,205,2.819,206,3.548,207,2.819,208,3.548]],["title/index.html",[15,0.403,209,1.774,210,1.774]],["body/index.html",[13,0.47,20,0.05,21,0.046,22,0.046,69,0.823,122,1.785,199,2.543,203,2.109,205,2.543,207,2.543,211,4.037,212,4.037,213,3.2,214,4.037,215,4.037,216,4.037,217,2.252,218,3.2,219,3.2,220,3.2,221,3.2,222,2.543,223,3.2,224,2.543,225,3.2,226,2.661,227,3.2,228,2.109]],["title/license.html",[209,1.774,210,1.774,217,1.246]],["body/license.html",[3,0.503,11,1.107,13,0.34,20,0.037,21,0.037,22,0.037,100,1.529,217,1.294,222,1.843,224,1.843,228,1.529,229,3.764,230,2.319,231,2.319,232,2.319,233,2.319,234,3.257,235,2.319,236,2.319,237,2.319,238,2.319,239,2.319,240,2.319,241,3.257,242,4.751,243,2.319,244,2.319,245,3.764,246,2.319,247,3.257,248,2.319,249,2.319,250,3.257,251,2.319,252,2.319,253,2.319,254,2.319,255,2.319,256,2.319,257,2.319,258,3.257,259,2.319,260,2.319,261,2.319,262,2.319,263,2.319,264,2.319,265,2.319,266,3.257,267,3.257,268,2.319,269,2.319,270,2.319,271,2.319,272,2.319,273,2.319,274,2.319,275,2.319,276,2.319,277,2.319,278,2.319,279,2.319,280,2.319,281,2.319,282,2.319,283,2.319,284,2.319,285,2.319,286,2.319,287,2.319,288,2.319,289,2.319,290,2.319,291,2.319,292,2.319,293,2.319,294,2.319,295,2.319,296,2.319]],["title/modules.html",[297,2.834]],["body/modules.html",[20,0.052,21,0.052,22,0.052,297,3.163]],["title/overview.html",[298,2.834]],["body/overview.html",[2,1.361,20,0.051,21,0.051,22,0.051,25,2.546,298,3.069,299,3.863,300,3.863]],["title/properties.html",[16,0.688,200,1.774]],["body/properties.html",[6,0.833,13,0.685,16,0.703,20,0.057,21,0.046,22,0.046,65,2.574,102,2.135,203,2.135,217,1.808,226,2.681,228,2.135,301,2.574,302,3.24,303,3.24,304,3.24,305,3.24,306,3.24,307,3.24,308,3.24,309,3.24,310,3.24,311,3.24,312,3.24]],["title/miscellaneous/typealiases.html",[313,1.246,314,3.171]],["body/miscellaneous/typealiases.html",[5,0.856,13,0.416,15,0.511,19,0.8,20,0.058,21,0.042,22,0.042,69,0.96,104,2.967,105,2.967,108,2.329,109,1.869,124,2.967,166,2.253,313,1.582,315,2.836,316,4.175,317,4.175,318,2.836,319,3.734,320,3.734,321,3.734,322,3.734,323,3.734,324,3.734,325,2.836]],["title/miscellaneous/variables.html",[313,1.246,326,2.519]],["body/miscellaneous/variables.html",[8,1.174,10,1.771,11,0.85,13,0.475,14,1.14,15,0.321,17,2.375,19,0.583,20,0.056,21,0.03,22,0.03,36,0.994,54,3.072,55,2.132,60,1.415,69,0.927,74,0.994,75,2.375,76,1.415,77,1.415,78,1.415,79,1.415,80,1.415,81,1.415,82,1.415,83,2.132,84,1.771,85,2.132,86,1.544,87,1.174,88,1.544,89,1.771,90,0.994,91,1.174,95,2.863,96,2.863,108,0.994,110,1.174,120,1.805,121,1.415,122,1.499,123,2.135,125,1.415,126,1.415,127,1.415,128,1.415,129,1.415,130,1.415,131,1.415,132,1.415,133,1.415,134,1.415,155,1.415,172,1.415,175,1.415,179,2.135,196,2.571,226,2.132,301,1.415,313,0.994,326,1.415,327,1.782,328,1.782,329,1.782,330,3.603,331,1.782,332,2.687,333,1.782,334,1.782,335,1.782,336,2.687,337,2.687,338,1.782,339,1.782,340,1.782,341,1.782,342,1.782,343,1.782,344,1.782,345,1.782,346,1.782,347,1.782,348,1.782,349,1.782,350,1.782,351,1.782,352,1.782,353,1.782,354,1.782,355,1.782,356,1.782,357,1.782,358,1.782,359,1.782,360,1.782]]],"invertedIndex":[["",{"_index":20,"title":{},"body":{"interfaces/AppRoute.html":{},"classes/CustomError.html":{},"interfaces/CustomErrorMap.html":{},"interfaces/ExpsConstants.html":{},"interfaces/ExpsRouteConfig.html":{},"interfaces/ExpsRouterConfig.html":{},"interfaces/HttpContext.html":{},"classes/ResponseBody.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["1.2.4",{"_index":206,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":158,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":157,"title":{},"body":{"coverage.html":{}}}],["13/13",{"_index":163,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":299,"title":{},"body":{"overview.html":{}}}],["2.0.2",{"_index":302,"title":{},"body":{"properties.html":{}}}],["2.0.3",{"_index":204,"title":{},"body":{"dependencies.html":{}}}],["2022",{"_index":231,"title":{},"body":{"license.html":{}}}],["3/3",{"_index":159,"title":{},"body":{"coverage.html":{}}}],["4.17.21",{"_index":208,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":300,"title":{},"body":{"overview.html":{}}}],["6/6",{"_index":160,"title":{},"body":{"coverage.html":{}}}],["7/7",{"_index":162,"title":{},"body":{"coverage.html":{}}}],["8/8",{"_index":164,"title":{},"body":{"coverage.html":{}}}],["9/9",{"_index":161,"title":{},"body":{"coverage.html":{}}}],["_iscustomerror",{"_index":34,"title":{},"body":{"classes/CustomError.html":{}}}],["above",{"_index":265,"title":{},"body":{"license.html":{}}}],["account",{"_index":233,"title":{},"body":{"license.html":{}}}],["action",{"_index":289,"title":{},"body":{"license.html":{}}}],["additional",{"_index":72,"title":{},"body":{"interfaces/CustomErrorMap.html":{}}}],["agarwal",{"_index":225,"title":{},"body":{"index.html":{}}}],["aliases",{"_index":315,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["am92/api",{"_index":202,"title":{},"body":{"dependencies.html":{}}}],["am92/express",{"_index":211,"title":{},"body":{"index.html":{}}}],["and/or",{"_index":256,"title":{},"body":{"license.html":{}}}],["ankit",{"_index":222,"title":{},"body":{"index.html":{},"license.html":{}}}],["api",{"_index":226,"title":{},"body":{"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["apilogging",{"_index":181,"title":{},"body":{"coverage.html":{}}}],["application",{"_index":14,"title":{},"body":{"interfaces/AppRoute.html":{},"interfaces/CustomErrorMap.html":{},"interfaces/ExpsConstants.html":{},"interfaces/ExpsRouteConfig.html":{},"interfaces/ExpsRouterConfig.html":{},"interfaces/HttpContext.html":{},"miscellaneous/variables.html":{}}}],["approute",{"_index":1,"title":{"interfaces/AppRoute.html":{}},"body":{"interfaces/AppRoute.html":{},"coverage.html":{}}}],["arising",{"_index":293,"title":{},"body":{"license.html":{}}}],["array",{"_index":345,"title":{},"body":{"miscellaneous/variables.html":{}}}],["associated",{"_index":11,"title":{},"body":{"interfaces/AppRoute.html":{},"classes/CustomError.html":{},"interfaces/CustomErrorMap.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["asyncwrapper",{"_index":167,"title":{},"body":{"coverage.html":{}}}],["asyncwrapper(handshakehandler",{"_index":344,"title":{},"body":{"miscellaneous/variables.html":{}}}],["asyncwrapper(healthhandler",{"_index":341,"title":{},"body":{"miscellaneous/variables.html":{}}}],["asyncwrapper(versionhandler",{"_index":342,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authors",{"_index":283,"title":{},"body":{"license.html":{}}}],["before",{"_index":112,"title":{},"body":{"interfaces/ExpsRouteConfig.html":{},"interfaces/ExpsRouterConfig.html":{}}}],["better",{"_index":52,"title":{},"body":{"classes/CustomError.html":{}}}],["bodies",{"_index":118,"title":{},"body":{"interfaces/ExpsRouterConfig.html":{}}}],["body",{"_index":103,"title":{},"body":{"interfaces/ExpsRouteConfig.html":{},"classes/ResponseBody.html":{}}}],["boolean",{"_index":99,"title":{},"body":{"interfaces/ExpsRouteConfig.html":{},"interfaces/ExpsRouterConfig.html":{}}}],["c",{"_index":230,"title":{},"body":{"license.html":{}}}],["case",{"_index":31,"title":{},"body":{"classes/CustomError.html":{},"interfaces/ExpsRouteConfig.html":{}}}],["charge",{"_index":238,"title":{},"body":{"license.html":{}}}],["claim",{"_index":286,"title":{},"body":{"license.html":{}}}],["class",{"_index":23,"title":{"classes/CustomError.html":{},"classes/ResponseBody.html":{}},"body":{"classes/CustomError.html":{},"classes/ResponseBody.html":{},"coverage.html":{}}}],["classes",{"_index":25,"title":{},"body":{"classes/CustomError.html":{},"classes/ResponseBody.html":{},"overview.html":{}}}],["client",{"_index":84,"title":{},"body":{"interfaces/ExpsConstants.html":{},"interfaces/HttpContext.html":{},"miscellaneous/variables.html":{}}}],["client_id_header_key",{"_index":77,"title":{},"body":{"interfaces/ExpsConstants.html":{},"miscellaneous/variables.html":{}}}],["clientid",{"_index":138,"title":{},"body":{"interfaces/HttpContext.html":{}}}],["code",{"_index":62,"title":{},"body":{"classes/CustomError.html":{},"interfaces/CustomErrorMap.html":{},"classes/ResponseBody.html":{}}}],["collection",{"_index":9,"title":{},"body":{"interfaces/AppRoute.html":{}}}],["conditions",{"_index":264,"title":{},"body":{"license.html":{}}}],["configuration",{"_index":91,"title":{},"body":{"interfaces/ExpsRouteConfig.html":{},"interfaces/ExpsRouterConfig.html":{},"miscellaneous/variables.html":{}}}],["configureapp",{"_index":169,"title":{},"body":{"coverage.html":{}}}],["configurerouter",{"_index":171,"title":{},"body":{"coverage.html":{}}}],["connection",{"_index":295,"title":{},"body":{"license.html":{}}}],["constants",{"_index":75,"title":{},"body":{"interfaces/ExpsConstants.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":41,"title":{},"body":{"classes/CustomError.html":{},"classes/ResponseBody.html":{}}}],["constructor(e",{"_index":42,"title":{},"body":{"classes/CustomError.html":{}}}],["constructor(statuscode",{"_index":151,"title":{},"body":{"classes/ResponseBody.html":{}}}],["contains",{"_index":346,"title":{},"body":{"miscellaneous/variables.html":{}}}],["content",{"_index":213,"title":{},"body":{"index.html":{}}}],["context",{"_index":122,"title":{},"body":{"interfaces/HttpContext.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["contract",{"_index":290,"title":{},"body":{"license.html":{}}}],["contributors",{"_index":215,"title":{},"body":{"index.html":{}}}],["copies",{"_index":258,"title":{},"body":{"license.html":{}}}],["copy",{"_index":241,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":229,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":152,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creates",{"_index":45,"title":{},"body":{"classes/CustomError.html":{},"classes/ResponseBody.html":{}}}],["crypto",{"_index":203,"title":{},"body":{"dependencies.html":{},"index.html":{},"properties.html":{}}}],["custom",{"_index":59,"title":{},"body":{"classes/CustomError.html":{}}}],["customerror",{"_index":24,"title":{"classes/CustomError.html":{}},"body":{"classes/CustomError.html":{},"coverage.html":{}}}],["customerrormap",{"_index":44,"title":{"interfaces/CustomErrorMap.html":{}},"body":{"classes/CustomError.html":{},"interfaces/CustomErrorMap.html":{},"coverage.html":{}}}],["damages",{"_index":287,"title":{},"body":{"license.html":{}}}],["data",{"_index":36,"title":{},"body":{"classes/CustomError.html":{},"interfaces/CustomErrorMap.html":{},"classes/ResponseBody.html":{},"miscellaneous/variables.html":{}}}],["deal",{"_index":244,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":296,"title":{},"body":{"license.html":{}}}],["decryptcryptokey",{"_index":184,"title":{},"body":{"coverage.html":{}}}],["decryptpayload",{"_index":186,"title":{},"body":{"coverage.html":{}}}],["default",{"_index":54,"title":{},"body":{"classes/CustomError.html":{},"miscellaneous/variables.html":{}}}],["default_error_code",{"_index":61,"title":{},"body":{"classes/CustomError.html":{}}}],["default_error_msg",{"_index":63,"title":{},"body":{"classes/CustomError.html":{}}}],["default_error_status_code",{"_index":68,"title":{},"body":{"classes/CustomError.html":{}}}],["default_routes",{"_index":179,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["defines",{"_index":333,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defining",{"_index":7,"title":{},"body":{"interfaces/AppRoute.html":{},"interfaces/CustomErrorMap.html":{},"interfaces/ExpsConstants.html":{},"interfaces/ExpsRouteConfig.html":{},"interfaces/ExpsRouterConfig.html":{}}}],["definition",{"_index":317,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["delete",{"_index":321,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["dependencies",{"_index":201,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["description",{"_index":6,"title":{},"body":{"interfaces/AppRoute.html":{},"classes/CustomError.html":{},"interfaces/CustomErrorMap.html":{},"interfaces/ExpsConstants.html":{},"interfaces/ExpsRouteConfig.html":{},"interfaces/ExpsRouterConfig.html":{},"interfaces/HttpContext.html":{},"classes/ResponseBody.html":{},"properties.html":{}}}],["disable",{"_index":101,"title":{},"body":{"interfaces/ExpsRouteConfig.html":{},"interfaces/ExpsRouterConfig.html":{}}}],["disablebodylog",{"_index":92,"title":{},"body":{"interfaces/ExpsRouteConfig.html":{},"interfaces/ExpsRouterConfig.html":{}}}],["disablecrypto",{"_index":93,"title":{},"body":{"interfaces/ExpsRouteConfig.html":{},"interfaces/ExpsRouterConfig.html":{}}}],["distribute",{"_index":254,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":3,"title":{},"body":{"interfaces/AppRoute.html":{},"classes/CustomError.html":{},"interfaces/CustomErrorMap.html":{},"interfaces/ExpsConstants.html":{},"interfaces/ExpsRouteConfig.html":{},"interfaces/ExpsRouterConfig.html":{},"interfaces/HttpContext.html":{},"classes/ResponseBody.html":{},"coverage.html":{},"license.html":{}}}],["e",{"_index":48,"title":{},"body":{"classes/CustomError.html":{}}}],["each",{"_index":348,"title":{},"body":{"miscellaneous/variables.html":{}}}],["emap",{"_index":43,"title":{},"body":{"classes/CustomError.html":{}}}],["enabled",{"_index":94,"title":{},"body":{"interfaces/ExpsRouteConfig.html":{}}}],["encryption",{"_index":86,"title":{},"body":{"interfaces/ExpsConstants.html":{},"interfaces/ExpsRouteConfig.html":{},"interfaces/ExpsRouterConfig.html":{},"interfaces/HttpContext.html":{},"miscellaneous/variables.html":{}}}],["encryption_key_header_key",{"_index":78,"title":{},"body":{"interfaces/ExpsConstants.html":{},"miscellaneous/variables.html":{}}}],["encryptionkey",{"_index":141,"title":{},"body":{"interfaces/HttpContext.html":{}}}],["encryptpayload",{"_index":188,"title":{},"body":{"coverage.html":{}}}],["error",{"_index":27,"title":{},"body":{"classes/CustomError.html":{},"interfaces/CustomErrorMap.html":{},"classes/ResponseBody.html":{}}}],["error's",{"_index":64,"title":{},"body":{"classes/CustomError.html":{}}}],["errorcode",{"_index":37,"title":{},"body":{"classes/CustomError.html":{},"interfaces/CustomErrorMap.html":{},"classes/ResponseBody.html":{}}}],["event",{"_index":282,"title":{},"body":{"license.html":{}}}],["example",{"_index":218,"title":{},"body":{"index.html":{}}}],["executed",{"_index":110,"title":{},"body":{"interfaces/ExpsRouteConfig.html":{},"interfaces/ExpsRouterConfig.html":{},"miscellaneous/variables.html":{}}}],["express",{"_index":13,"title":{},"body":{"interfaces/AppRoute.html":{},"interfaces/CustomErrorMap.html":{},"interfaces/ExpsConstants.html":{},"interfaces/ExpsRouteConfig.html":{},"interfaces/ExpsRouterConfig.html":{},"interfaces/HttpContext.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["expresshttpcontext.get",{"_index":350,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expresshttpcontext.set",{"_index":351,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expressjs",{"_index":306,"title":{},"body":{"properties.html":{}}}],["expsconstants",{"_index":74,"title":{"interfaces/ExpsConstants.html":{}},"body":{"interfaces/ExpsConstants.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["expsrouteconfig",{"_index":90,"title":{"interfaces/ExpsRouteConfig.html":{}},"body":{"interfaces/ExpsRouteConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["expsrouterconfig",{"_index":113,"title":{"interfaces/ExpsRouterConfig.html":{}},"body":{"interfaces/ExpsRouterConfig.html":{},"coverage.html":{}}}],["extends",{"_index":32,"title":{},"body":{"classes/CustomError.html":{}}}],["extractheaders",{"_index":190,"title":{},"body":{"coverage.html":{}}}],["file",{"_index":4,"title":{},"body":{"interfaces/AppRoute.html":{},"classes/CustomError.html":{},"interfaces/CustomErrorMap.html":{},"interfaces/ExpsConstants.html":{},"interfaces/ExpsRouteConfig.html":{},"interfaces/ExpsRouterConfig.html":{},"interfaces/HttpContext.html":{},"classes/ResponseBody.html":{},"coverage.html":{}}}],["files",{"_index":243,"title":{},"body":{"license.html":{}}}],["fitness",{"_index":278,"title":{},"body":{"license.html":{}}}],["flag",{"_index":57,"title":{},"body":{"classes/CustomError.html":{}}}],["following",{"_index":263,"title":{},"body":{"license.html":{}}}],["framework",{"_index":304,"title":{},"body":{"properties.html":{}}}],["free",{"_index":237,"title":{},"body":{"license.html":{}}}],["function",{"_index":166,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["functions",{"_index":109,"title":{},"body":{"interfaces/ExpsRouteConfig.html":{},"interfaces/ExpsRouterConfig.html":{},"miscellaneous/typealiases.html":{}}}],["furnished",{"_index":261,"title":{},"body":{"license.html":{}}}],["gandhi",{"_index":223,"title":{},"body":{"index.html":{}}}],["getclientid",{"_index":125,"title":{},"body":{"interfaces/HttpContext.html":{},"miscellaneous/variables.html":{}}}],["getencryptionkey",{"_index":126,"title":{},"body":{"interfaces/HttpContext.html":{},"miscellaneous/variables.html":{}}}],["getplaintextencryptionkey",{"_index":127,"title":{},"body":{"interfaces/HttpContext.html":{},"miscellaneous/variables.html":{}}}],["getrequestid",{"_index":128,"title":{},"body":{"interfaces/HttpContext.html":{},"miscellaneous/variables.html":{}}}],["getsessionid",{"_index":129,"title":{},"body":{"interfaces/HttpContext.html":{},"miscellaneous/variables.html":{}}}],["getting",{"_index":209,"title":{"index.html":{},"license.html":{}},"body":{}}],["git@github.com:heliumtank92/am92",{"_index":311,"title":{},"body":{"properties.html":{}}}],["granted",{"_index":236,"title":{},"body":{"license.html":{}}}],["handleerror",{"_index":192,"title":{},"body":{"coverage.html":{}}}],["handleresponse",{"_index":194,"title":{},"body":{"coverage.html":{}}}],["handling",{"_index":339,"title":{},"body":{"miscellaneous/variables.html":{}}}],["handshake",{"_index":343,"title":{},"body":{"miscellaneous/variables.html":{}}}],["handshakehandler",{"_index":176,"title":{},"body":{"coverage.html":{}}}],["head",{"_index":324,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["header",{"_index":82,"title":{},"body":{"interfaces/ExpsConstants.html":{},"miscellaneous/variables.html":{}}}],["health",{"_index":340,"title":{},"body":{"miscellaneous/variables.html":{}}}],["healthhandler",{"_index":177,"title":{},"body":{"coverage.html":{}}}],["hereby",{"_index":235,"title":{},"body":{"license.html":{}}}],["holders",{"_index":284,"title":{},"body":{"license.html":{}}}],["homepage",{"_index":307,"title":{},"body":{"properties.html":{}}}],["http",{"_index":69,"title":{},"body":{"classes/CustomError.html":{},"interfaces/CustomErrorMap.html":{},"interfaces/ExpsRouteConfig.html":{},"interfaces/HttpContext.html":{},"classes/ResponseBody.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["httpcontext",{"_index":120,"title":{"interfaces/HttpContext.html":{}},"body":{"interfaces/HttpContext.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["https://github.com/heliumtank92/am92",{"_index":308,"title":{},"body":{"properties.html":{}}}],["id",{"_index":85,"title":{},"body":{"interfaces/ExpsConstants.html":{},"interfaces/HttpContext.html":{},"miscellaneous/variables.html":{}}}],["identification",{"_index":337,"title":{},"body":{"miscellaneous/variables.html":{}}}],["identifier",{"_index":153,"title":{},"body":{"coverage.html":{}}}],["identifiers",{"_index":359,"title":{},"body":{"miscellaneous/variables.html":{}}}],["identify",{"_index":58,"title":{},"body":{"classes/CustomError.html":{}}}],["implied",{"_index":274,"title":{},"body":{"license.html":{}}}],["include",{"_index":335,"title":{},"body":{"miscellaneous/variables.html":{}}}],["included",{"_index":268,"title":{},"body":{"license.html":{}}}],["including",{"_index":247,"title":{},"body":{"license.html":{}}}],["index",{"_index":15,"title":{"index.html":{}},"body":{"interfaces/AppRoute.html":{},"classes/CustomError.html":{},"interfaces/CustomErrorMap.html":{},"interfaces/ExpsConstants.html":{},"interfaces/ExpsRouteConfig.html":{},"interfaces/ExpsRouterConfig.html":{},"interfaces/HttpContext.html":{},"classes/ResponseBody.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["initialize",{"_index":174,"title":{},"body":{"coverage.html":{}}}],["insensitive",{"_index":106,"title":{},"body":{"interfaces/ExpsRouteConfig.html":{}}}],["install",{"_index":220,"title":{},"body":{"index.html":{}}}],["installation",{"_index":214,"title":{},"body":{"index.html":{}}}],["instance",{"_index":29,"title":{},"body":{"classes/CustomError.html":{},"classes/ResponseBody.html":{}}}],["interface",{"_index":0,"title":{"interfaces/AppRoute.html":{},"interfaces/CustomErrorMap.html":{},"interfaces/ExpsConstants.html":{},"interfaces/ExpsRouteConfig.html":{},"interfaces/ExpsRouterConfig.html":{},"interfaces/HttpContext.html":{}},"body":{"interfaces/AppRoute.html":{},"interfaces/CustomErrorMap.html":{},"interfaces/ExpsConstants.html":{},"interfaces/ExpsRouteConfig.html":{},"interfaces/ExpsRouterConfig.html":{},"interfaces/HttpContext.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/AppRoute.html":{},"interfaces/CustomErrorMap.html":{},"interfaces/ExpsConstants.html":{},"interfaces/ExpsRouteConfig.html":{},"interfaces/ExpsRouterConfig.html":{},"interfaces/HttpContext.html":{},"overview.html":{}}}],["key",{"_index":83,"title":{},"body":{"interfaces/ExpsConstants.html":{},"interfaces/HttpContext.html":{},"miscellaneous/variables.html":{}}}],["keys",{"_index":336,"title":{},"body":{"miscellaneous/variables.html":{}}}],["keywords",{"_index":305,"title":{},"body":{"properties.html":{}}}],["kind",{"_index":273,"title":{},"body":{"license.html":{}}}],["leverages",{"_index":354,"title":{},"body":{"miscellaneous/variables.html":{}}}],["liability",{"_index":288,"title":{},"body":{"license.html":{}}}],["liable",{"_index":285,"title":{},"body":{"license.html":{}}}],["library",{"_index":355,"title":{},"body":{"miscellaneous/variables.html":{}}}],["license",{"_index":217,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["lifecycle",{"_index":360,"title":{},"body":{"miscellaneous/variables.html":{}}}],["limitation",{"_index":248,"title":{},"body":{"license.html":{}}}],["limited",{"_index":275,"title":{},"body":{"license.html":{}}}],["lodash",{"_index":207,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["logger",{"_index":205,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["logging",{"_index":102,"title":{},"body":{"interfaces/ExpsRouteConfig.html":{},"interfaces/ExpsRouterConfig.html":{},"properties.html":{}}}],["logmanager",{"_index":182,"title":{},"body":{"coverage.html":{}}}],["lowercase",{"_index":318,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["main",{"_index":111,"title":{},"body":{"interfaces/ExpsRouteConfig.html":{}}}],["management",{"_index":338,"title":{},"body":{"miscellaneous/variables.html":{}}}],["managing",{"_index":121,"title":{},"body":{"interfaces/HttpContext.html":{},"miscellaneous/variables.html":{}}}],["manner",{"_index":107,"title":{},"body":{"interfaces/ExpsRouteConfig.html":{}}}],["map",{"_index":71,"title":{},"body":{"interfaces/CustomErrorMap.html":{}}}],["matching",{"_index":22,"title":{},"body":{"interfaces/AppRoute.html":{},"classes/CustomError.html":{},"interfaces/CustomErrorMap.html":{},"interfaces/ExpsConstants.html":{},"interfaces/ExpsRouteConfig.html":{},"interfaces/ExpsRouterConfig.html":{},"interfaces/HttpContext.html":{},"classes/ResponseBody.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mehul",{"_index":224,"title":{},"body":{"index.html":{},"license.html":{}}}],["merchantability",{"_index":277,"title":{},"body":{"license.html":{}}}],["merge",{"_index":252,"title":{},"body":{"license.html":{}}}],["message",{"_index":38,"title":{},"body":{"classes/CustomError.html":{},"interfaces/CustomErrorMap.html":{},"classes/ResponseBody.html":{}}}],["method",{"_index":95,"title":{},"body":{"interfaces/ExpsRouteConfig.html":{},"miscellaneous/variables.html":{}}}],["methods",{"_index":124,"title":{},"body":{"interfaces/HttpContext.html":{},"miscellaneous/typealiases.html":{}}}],["middleware",{"_index":108,"title":{},"body":{"interfaces/ExpsRouteConfig.html":{},"interfaces/ExpsRouterConfig.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["miscellaneous",{"_index":313,"title":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":228,"title":{},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["modify",{"_index":251,"title":{},"body":{"license.html":{}}}],["module",{"_index":332,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modules",{"_index":297,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["name",{"_index":47,"title":{},"body":{"classes/CustomError.html":{},"interfaces/ExpsRouterConfig.html":{},"interfaces/HttpContext.html":{},"classes/ResponseBody.html":{}}}],["nanoid",{"_index":227,"title":{},"body":{"index.html":{}}}],["new",{"_index":197,"title":{},"body":{"coverage.html":{}}}],["node",{"_index":65,"title":{},"body":{"classes/CustomError.html":{},"properties.html":{}}}],["noninfringement",{"_index":281,"title":{},"body":{"license.html":{}}}],["notice",{"_index":266,"title":{},"body":{"license.html":{}}}],["npm",{"_index":219,"title":{},"body":{"index.html":{}}}],["number",{"_index":67,"title":{},"body":{"classes/CustomError.html":{},"interfaces/CustomErrorMap.html":{},"classes/ResponseBody.html":{}}}],["object",{"_index":60,"title":{},"body":{"classes/CustomError.html":{},"miscellaneous/variables.html":{}}}],["obtaining",{"_index":240,"title":{},"body":{"license.html":{}}}],["optional",{"_index":35,"title":{},"body":{"classes/CustomError.html":{},"interfaces/CustomErrorMap.html":{},"interfaces/ExpsRouteConfig.html":{},"interfaces/ExpsRouterConfig.html":{},"interfaces/HttpContext.html":{},"classes/ResponseBody.html":{}}}],["options",{"_index":323,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["otherwise",{"_index":292,"title":{},"body":{"license.html":{}}}],["out",{"_index":294,"title":{},"body":{"license.html":{}}}],["overview",{"_index":298,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":200,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["parameters",{"_index":46,"title":{},"body":{"classes/CustomError.html":{},"interfaces/HttpContext.html":{},"classes/ResponseBody.html":{}}}],["particular",{"_index":279,"title":{},"body":{"license.html":{}}}],["patch",{"_index":322,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["path",{"_index":17,"title":{},"body":{"interfaces/AppRoute.html":{},"interfaces/ExpsRouteConfig.html":{},"miscellaneous/variables.html":{}}}],["permission",{"_index":234,"title":{},"body":{"license.html":{}}}],["permit",{"_index":259,"title":{},"body":{"license.html":{}}}],["person",{"_index":239,"title":{},"body":{"license.html":{}}}],["persons",{"_index":260,"title":{},"body":{"license.html":{}}}],["pipeline",{"_index":96,"title":{},"body":{"interfaces/ExpsRouteConfig.html":{},"miscellaneous/variables.html":{}}}],["plaintext",{"_index":87,"title":{},"body":{"interfaces/ExpsConstants.html":{},"interfaces/HttpContext.html":{},"miscellaneous/variables.html":{}}}],["plaintext_encryption_key",{"_index":79,"title":{},"body":{"interfaces/ExpsConstants.html":{},"miscellaneous/variables.html":{}}}],["portions",{"_index":270,"title":{},"body":{"license.html":{}}}],["post",{"_index":319,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["postmiddlewares",{"_index":114,"title":{},"body":{"interfaces/ExpsRouterConfig.html":{}}}],["postpipeline",{"_index":97,"title":{},"body":{"interfaces/ExpsRouteConfig.html":{}}}],["premiddlewares",{"_index":115,"title":{},"body":{"interfaces/ExpsRouterConfig.html":{}}}],["prepipeline",{"_index":98,"title":{},"body":{"interfaces/ExpsRouteConfig.html":{}}}],["project",{"_index":66,"title":{},"body":{"classes/CustomError.html":{}}}],["properties",{"_index":16,"title":{"properties.html":{}},"body":{"interfaces/AppRoute.html":{},"classes/CustomError.html":{},"interfaces/CustomErrorMap.html":{},"interfaces/ExpsConstants.html":{},"interfaces/ExpsRouteConfig.html":{},"interfaces/ExpsRouterConfig.html":{},"interfaces/HttpContext.html":{},"classes/ResponseBody.html":{},"properties.html":{}}}],["provided",{"_index":271,"title":{},"body":{"license.html":{}}}],["provides",{"_index":352,"title":{},"body":{"miscellaneous/variables.html":{}}}],["publish",{"_index":253,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":280,"title":{},"body":{"license.html":{}}}],["put",{"_index":320,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["readonly",{"_index":33,"title":{},"body":{"classes/CustomError.html":{}}}],["record",{"_index":119,"title":{},"body":{"interfaces/ExpsRouterConfig.html":{}}}],["registered",{"_index":347,"title":{},"body":{"miscellaneous/variables.html":{}}}],["related",{"_index":73,"title":{},"body":{"interfaces/CustomErrorMap.html":{}}}],["repository",{"_index":310,"title":{},"body":{"properties.html":{}}}],["representing",{"_index":149,"title":{},"body":{"classes/ResponseBody.html":{}}}],["req",{"_index":331,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request",{"_index":88,"title":{},"body":{"interfaces/ExpsConstants.html":{},"interfaces/ExpsRouteConfig.html":{},"interfaces/ExpsRouterConfig.html":{},"interfaces/HttpContext.html":{},"miscellaneous/variables.html":{}}}],["request_id_header_key",{"_index":80,"title":{},"body":{"interfaces/ExpsConstants.html":{},"miscellaneous/variables.html":{}}}],["requestid",{"_index":144,"title":{},"body":{"interfaces/HttpContext.html":{}}}],["resources",{"_index":216,"title":{},"body":{"index.html":{}}}],["response",{"_index":150,"title":{},"body":{"classes/ResponseBody.html":{}}}],["responsebody",{"_index":147,"title":{"classes/ResponseBody.html":{}},"body":{"classes/ResponseBody.html":{},"coverage.html":{}}}],["restriction",{"_index":246,"title":{},"body":{"license.html":{}}}],["results",{"_index":21,"title":{},"body":{"interfaces/AppRoute.html":{},"classes/CustomError.html":{},"interfaces/CustomErrorMap.html":{},"interfaces/ExpsConstants.html":{},"interfaces/ExpsRouteConfig.html":{},"interfaces/ExpsRouterConfig.html":{},"interfaces/HttpContext.html":{},"classes/ResponseBody.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retrieve",{"_index":357,"title":{},"body":{"miscellaneous/variables.html":{}}}],["returns",{"_index":135,"title":{},"body":{"interfaces/HttpContext.html":{}}}],["rewrap",{"_index":51,"title":{},"body":{"classes/CustomError.html":{}}}],["rights",{"_index":249,"title":{},"body":{"license.html":{}}}],["route",{"_index":8,"title":{},"body":{"interfaces/AppRoute.html":{},"interfaces/ExpsRouteConfig.html":{},"miscellaneous/variables.html":{}}}],["route_methods",{"_index":104,"title":{},"body":{"interfaces/ExpsRouteConfig.html":{},"miscellaneous/typealiases.html":{}}}],["route_methods_caps",{"_index":105,"title":{},"body":{"interfaces/ExpsRouteConfig.html":{},"miscellaneous/typealiases.html":{}}}],["router",{"_index":12,"title":{},"body":{"interfaces/AppRoute.html":{},"interfaces/ExpsRouterConfig.html":{}}}],["routername",{"_index":116,"title":{},"body":{"interfaces/ExpsRouterConfig.html":{}}}],["routes",{"_index":10,"title":{},"body":{"interfaces/AppRoute.html":{},"interfaces/ExpsRouterConfig.html":{},"miscellaneous/variables.html":{}}}],["routesanity",{"_index":196,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["routesconfig",{"_index":117,"title":{},"body":{"interfaces/ExpsRouterConfig.html":{}}}],["save",{"_index":221,"title":{},"body":{"index.html":{}}}],["sell",{"_index":257,"title":{},"body":{"license.html":{}}}],["service",{"_index":39,"title":{},"body":{"classes/CustomError.html":{}}}],["session",{"_index":89,"title":{},"body":{"interfaces/ExpsConstants.html":{},"interfaces/HttpContext.html":{},"miscellaneous/variables.html":{}}}],["session_id_header_key",{"_index":81,"title":{},"body":{"interfaces/ExpsConstants.html":{},"miscellaneous/variables.html":{}}}],["sessionid",{"_index":146,"title":{},"body":{"interfaces/HttpContext.html":{}}}],["set",{"_index":123,"title":{},"body":{"interfaces/HttpContext.html":{},"miscellaneous/variables.html":{}}}],["setclientid",{"_index":130,"title":{},"body":{"interfaces/HttpContext.html":{},"miscellaneous/variables.html":{}}}],["setclientid(clientid",{"_index":137,"title":{},"body":{"interfaces/HttpContext.html":{}}}],["setencryptionkey",{"_index":131,"title":{},"body":{"interfaces/HttpContext.html":{},"miscellaneous/variables.html":{}}}],["setencryptionkey(encryptionkey",{"_index":140,"title":{},"body":{"interfaces/HttpContext.html":{}}}],["setplaintextencryptionkey",{"_index":132,"title":{},"body":{"interfaces/HttpContext.html":{},"miscellaneous/variables.html":{}}}],["setplaintextencryptionkey(encryptionkey",{"_index":142,"title":{},"body":{"interfaces/HttpContext.html":{}}}],["setrequestid",{"_index":133,"title":{},"body":{"interfaces/HttpContext.html":{},"miscellaneous/variables.html":{}}}],["setrequestid(requestid",{"_index":143,"title":{},"body":{"interfaces/HttpContext.html":{}}}],["setsessionid",{"_index":134,"title":{},"body":{"interfaces/HttpContext.html":{},"miscellaneous/variables.html":{}}}],["setsessionid(sessionid",{"_index":145,"title":{},"body":{"interfaces/HttpContext.html":{}}}],["shall",{"_index":267,"title":{},"body":{"license.html":{}}}],["software",{"_index":242,"title":{},"body":{"license.html":{}}}],["specific",{"_index":353,"title":{},"body":{"miscellaneous/variables.html":{}}}],["specifies",{"_index":349,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../constants.ts",{"_index":327,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../default_routes.ts",{"_index":328,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../httpcontext.ts",{"_index":329,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../types.ts",{"_index":316,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/classes/customerror.ts",{"_index":26,"title":{},"body":{"classes/CustomError.html":{},"coverage.html":{}}}],["src/classes/responsebody.ts",{"_index":148,"title":{},"body":{"classes/ResponseBody.html":{},"coverage.html":{}}}],["src/constants.ts",{"_index":155,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/lib/asyncwrapper.ts",{"_index":165,"title":{},"body":{"coverage.html":{}}}],["src/lib/configureapp.ts",{"_index":168,"title":{},"body":{"coverage.html":{}}}],["src/lib/configurerouter.ts",{"_index":170,"title":{},"body":{"coverage.html":{}}}],["src/lib/httpcontext.ts",{"_index":172,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/lib/initialize.ts",{"_index":173,"title":{},"body":{"coverage.html":{}}}],["src/middlewares/apilogging.ts",{"_index":180,"title":{},"body":{"coverage.html":{}}}],["src/middlewares/decryptcryptokey.ts",{"_index":183,"title":{},"body":{"coverage.html":{}}}],["src/middlewares/decryptpayload.ts",{"_index":185,"title":{},"body":{"coverage.html":{}}}],["src/middlewares/default_routes.ts",{"_index":175,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/middlewares/encryptpayload.ts",{"_index":187,"title":{},"body":{"coverage.html":{}}}],["src/middlewares/extractheaders.ts",{"_index":189,"title":{},"body":{"coverage.html":{}}}],["src/middlewares/handleerror.ts",{"_index":191,"title":{},"body":{"coverage.html":{}}}],["src/middlewares/handleresponse.ts",{"_index":193,"title":{},"body":{"coverage.html":{}}}],["src/middlewares/routesanity.ts",{"_index":195,"title":{},"body":{"coverage.html":{}}}],["src/types.ts",{"_index":5,"title":{},"body":{"interfaces/AppRoute.html":{},"interfaces/CustomErrorMap.html":{},"interfaces/ExpsConstants.html":{},"interfaces/ExpsRouteConfig.html":{},"interfaces/ExpsRouterConfig.html":{},"interfaces/HttpContext.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["started",{"_index":210,"title":{"index.html":{},"license.html":{}},"body":{}}],["statements",{"_index":154,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":70,"title":{},"body":{"classes/CustomError.html":{},"interfaces/CustomErrorMap.html":{},"classes/ResponseBody.html":{}}}],["statuscode",{"_index":40,"title":{},"body":{"classes/CustomError.html":{},"interfaces/CustomErrorMap.html":{},"classes/ResponseBody.html":{}}}],["store",{"_index":356,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string",{"_index":18,"title":{},"body":{"interfaces/AppRoute.html":{},"classes/CustomError.html":{},"interfaces/CustomErrorMap.html":{},"interfaces/ExpsConstants.html":{},"interfaces/ExpsRouteConfig.html":{},"interfaces/ExpsRouterConfig.html":{},"interfaces/HttpContext.html":{},"classes/ResponseBody.html":{}}}],["subject",{"_index":262,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":255,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":269,"title":{},"body":{"license.html":{}}}],["table",{"_index":199,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":198,"title":{},"body":{"coverage.html":{}}}],["team",{"_index":232,"title":{},"body":{"license.html":{}}}],["throughout",{"_index":334,"title":{},"body":{"miscellaneous/variables.html":{}}}],["thrown",{"_index":30,"title":{},"body":{"classes/CustomError.html":{}}}],["tort",{"_index":291,"title":{},"body":{"license.html":{}}}],["true",{"_index":56,"title":{},"body":{"classes/CustomError.html":{}}}],["type",{"_index":19,"title":{},"body":{"interfaces/AppRoute.html":{},"classes/CustomError.html":{},"interfaces/CustomErrorMap.html":{},"interfaces/ExpsConstants.html":{},"interfaces/ExpsRouteConfig.html":{},"interfaces/ExpsRouterConfig.html":{},"interfaces/HttpContext.html":{},"classes/ResponseBody.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":314,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["undefined",{"_index":136,"title":{},"body":{"interfaces/HttpContext.html":{}}}],["understanding",{"_index":53,"title":{},"body":{"classes/CustomError.html":{}}}],["uppercase",{"_index":325,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["use",{"_index":250,"title":{},"body":{"license.html":{}}}],["used",{"_index":76,"title":{},"body":{"interfaces/ExpsConstants.html":{},"miscellaneous/variables.html":{}}}],["utilities",{"_index":303,"title":{},"body":{"properties.html":{}}}],["utils",{"_index":212,"title":{},"body":{"index.html":{}}}],["utils#readme",{"_index":309,"title":{},"body":{"properties.html":{}}}],["utils.git",{"_index":312,"title":{},"body":{"properties.html":{}}}],["value",{"_index":55,"title":{},"body":{"classes/CustomError.html":{},"interfaces/HttpContext.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":156,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":326,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["various",{"_index":358,"title":{},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":301,"title":{},"body":{"properties.html":{},"miscellaneous/variables.html":{}}}],["versionhandler",{"_index":178,"title":{},"body":{"coverage.html":{}}}],["void",{"_index":139,"title":{},"body":{"interfaces/HttpContext.html":{}}}],["warranties",{"_index":276,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":272,"title":{},"body":{"license.html":{}}}],["whether",{"_index":100,"title":{},"body":{"interfaces/ExpsRouteConfig.html":{},"interfaces/ExpsRouterConfig.html":{},"license.html":{}}}],["whose",{"_index":28,"title":{},"body":{"classes/CustomError.html":{}}}],["without",{"_index":245,"title":{},"body":{"license.html":{}}}],["wrap",{"_index":50,"title":{},"body":{"classes/CustomError.html":{}}}],["x",{"_index":330,"title":{},"body":{"miscellaneous/variables.html":{}}}],["yes",{"_index":49,"title":{},"body":{"classes/CustomError.html":{},"classes/ResponseBody.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/AppRoute.html":{"url":"interfaces/AppRoute.html","title":"interface - AppRoute","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AppRoute\n\n\n\n        \n            Documentation\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/TYPES.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for defining a route or collection of routes with its associated router in the Express application.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            path\n                                        \n                                \n                                \n                                        \n                                            router\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The path of the route.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        router\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        router:     Router\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Router\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The router associated with the route.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CustomError.html":{"url":"classes/CustomError.html","title":"class - CustomError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CustomError\n\n\n\n        \n            Documentation\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/classes/CustomError.ts\n        \n\n\n            \n                Description\n            \n            \n                Error class whose instance is thrown in case of any error.\n\n            \n\n            \n                Extends\n            \n            \n                        Error\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                _isCustomError\n                            \n                            \n                                    Optional\n                                data\n                            \n                            \n                                    Optional\n                                error\n                            \n                            \n                                errorCode\n                            \n                            \n                                message\n                            \n                            \n                                    Readonly\n                                service\n                            \n                            \n                                statusCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(e?: any, eMap?: CustomErrorMap)\n                    \n                \n\n                \n                    \n                            Creates an instance of CustomError.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                                Any Error instance to wrap with CustomError.\n\n                                                        \n                                                \n                                                \n                                                        eMap\n                                                  \n                                                        \n                                                                        CustomErrorMap\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                                CustomErrorMap to rewrap error for better understanding.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        _isCustomError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n\n            \n                \n                    Flag to identify if error is a custom error.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n            \n                \n                    Data object.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n            \n                \n                    Error object.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : DEFAULT_ERROR_CODE\n                    \n                \n\n            \n                \n                    Error Code.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : DEFAULT_ERROR_MSG\n                    \n                \n\n            \n                \n                    Error's message string.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        service\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : SERVICE\n                    \n                \n\n            \n                \n                    Node project from which Error is thrown.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        statusCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : DEFAULT_ERROR_STATUS_CODE\n                    \n                \n\n            \n                \n                    HTTP status code associated with the error.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CustomErrorMap.html":{"url":"interfaces/CustomErrorMap.html","title":"interface - CustomErrorMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CustomErrorMap\n\n\n\n        \n            Documentation\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/TYPES.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for defining an error map in the Express application.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            code\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            data\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            errorCode\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            message\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            statusCode\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The code associated with the error.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Additional data related to the error.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        errorCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The error code.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The error message.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        statusCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        statusCode:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The HTTP status code for the error.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExpsConstants.html":{"url":"interfaces/ExpsConstants.html","title":"interface - ExpsConstants","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ExpsConstants\n\n\n\n        \n            Documentation\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/TYPES.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for defining constants used in the Express application.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            CLIENT_ID_HEADER_KEY\n                                        \n                                \n                                \n                                        \n                                            ENCRYPTION_KEY_HEADER_KEY\n                                        \n                                \n                                \n                                        \n                                            PLAINTEXT_ENCRYPTION_KEY\n                                        \n                                \n                                \n                                        \n                                            REQUEST_ID_HEADER_KEY\n                                        \n                                \n                                \n                                        \n                                            SESSION_ID_HEADER_KEY\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        CLIENT_ID_HEADER_KEY\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        CLIENT_ID_HEADER_KEY:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Header key for the client ID.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ENCRYPTION_KEY_HEADER_KEY\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ENCRYPTION_KEY_HEADER_KEY:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Header key for the encryption key.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        PLAINTEXT_ENCRYPTION_KEY\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        PLAINTEXT_ENCRYPTION_KEY:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Key for the plaintext encryption key.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        REQUEST_ID_HEADER_KEY\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        REQUEST_ID_HEADER_KEY:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Header key for the request ID.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SESSION_ID_HEADER_KEY\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        SESSION_ID_HEADER_KEY:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Header key for the session ID.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExpsRouteConfig.html":{"url":"interfaces/ExpsRouteConfig.html","title":"interface - ExpsRouteConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ExpsRouteConfig\n\n\n\n        \n            Documentation\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/TYPES.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for defining the configuration of a route in the Express application.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            disableBodyLog\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableCrypto\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            enabled\n                                        \n                                \n                                \n                                        \n                                            method\n                                        \n                                \n                                \n                                        \n                                            path\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            pipeline\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            postPipeline\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            prePipeline\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        disableBodyLog\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableBodyLog:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Whether to disable logging of the request body.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableCrypto\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableCrypto:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Whether to disable encryption for the route.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        enabled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        enabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Whether the route is enabled.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        method\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        method:     ROUTE_METHODS | ROUTE_METHODS_CAPS\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ROUTE_METHODS | ROUTE_METHODS_CAPS\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The HTTP method for the route in a case insensitive manner.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The path of the route.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pipeline\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pipeline:         Middleware[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Middleware[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Middleware functions to be executed in the main pipeline.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postPipeline\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        postPipeline:         Middleware[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Middleware[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Middleware functions to be executed after the main pipeline.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        prePipeline\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        prePipeline:         Middleware[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Middleware[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Middleware functions to be executed before the main pipeline.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExpsRouterConfig.html":{"url":"interfaces/ExpsRouterConfig.html","title":"interface - ExpsRouterConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ExpsRouterConfig\n\n\n\n        \n            Documentation\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/TYPES.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for defining the configuration of a router in the Express application.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            disableBodyLog\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableCrypto\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            postMiddlewares\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            preMiddlewares\n                                        \n                                \n                                \n                                        \n                                            routerName\n                                        \n                                \n                                \n                                        \n                                            routesConfig\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        disableBodyLog\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableBodyLog:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Whether to disable logging of all the request bodies in the router.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableCrypto\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableCrypto:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Whether to disable encryption for all routes in the router.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postMiddlewares\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        postMiddlewares:         Middleware[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Middleware[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Middleware functions to be executed after the routes.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        preMiddlewares\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        preMiddlewares:         Middleware[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Middleware[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Middleware functions to be executed before the routes.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        routerName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        routerName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The name of the router.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        routesConfig\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        routesConfig:         Record\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Record\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Configuration for the routes in the router.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HttpContext.html":{"url":"interfaces/HttpContext.html","title":"interface - HttpContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HttpContext\n\n\n\n        \n            Documentation\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/TYPES.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for managing HTTP context in the Express application.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            get\n                                        \n                                \n                                \n                                        \n                                            set\n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getClientId\n                                    \n                                \n                                \n                                    \n                                        getEncryptionKey\n                                    \n                                \n                                \n                                    \n                                        getPlaintextEncryptionKey\n                                    \n                                \n                                \n                                    \n                                        getRequestId\n                                    \n                                \n                                \n                                    \n                                        getSessionId\n                                    \n                                \n                                \n                                    \n                                        setClientId\n                                    \n                                \n                                \n                                    \n                                        setEncryptionKey\n                                    \n                                \n                                \n                                    \n                                        setPlaintextEncryptionKey\n                                    \n                                \n                                \n                                    \n                                        setRequestId\n                                    \n                                \n                                \n                                    \n                                        setSessionId\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getClientId\n                        \n                    \n                \n            \n            \n                \ngetClientId()\n                \n            \n\n\n\n\n            \n                \n                        Get the client ID from the HTTP context.\n\n\n                        \n                            Returns :     string | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getEncryptionKey\n                        \n                    \n                \n            \n            \n                \ngetEncryptionKey()\n                \n            \n\n\n\n\n            \n                \n                        Get the encryption key from the HTTP context.\n\n\n                        \n                            Returns :     string | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPlaintextEncryptionKey\n                        \n                    \n                \n            \n            \n                \ngetPlaintextEncryptionKey()\n                \n            \n\n\n\n\n            \n                \n                        Get the plaintext encryption key from the HTTP context.\n\n\n                        \n                            Returns :     string | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRequestId\n                        \n                    \n                \n            \n            \n                \ngetRequestId()\n                \n            \n\n\n\n\n            \n                \n                        Get the request ID from the HTTP context.\n\n\n                        \n                            Returns :     string | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSessionId\n                        \n                    \n                \n            \n            \n                \ngetSessionId()\n                \n            \n\n\n\n\n            \n                \n                        Get the session ID from the HTTP context.\n\n\n                        \n                            Returns :     string | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setClientId\n                        \n                    \n                \n            \n            \n                \nsetClientId(clientId: string)\n                \n            \n\n\n\n\n            \n                \n                        Set the client ID in the HTTP context.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                clientId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setEncryptionKey\n                        \n                    \n                \n            \n            \n                \nsetEncryptionKey(encryptionKey: string)\n                \n            \n\n\n\n\n            \n                \n                        Set the encryption key in the HTTP context.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                encryptionKey\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPlaintextEncryptionKey\n                        \n                    \n                \n            \n            \n                \nsetPlaintextEncryptionKey(encryptionKey: string)\n                \n            \n\n\n\n\n            \n                \n                        Set the plaintext encryption key in the HTTP context.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                encryptionKey\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setRequestId\n                        \n                    \n                \n            \n            \n                \nsetRequestId(requestId: string)\n                \n            \n\n\n\n\n            \n                \n                        Set the request ID in the HTTP context.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                requestId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSessionId\n                        \n                    \n                \n            \n            \n                \nsetSessionId(sessionId: string)\n                \n            \n\n\n\n\n            \n                \n                        Set the session ID in the HTTP context.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sessionId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        get\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        get:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Get a value from the HTTP context.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        set\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        set:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Set a value in the HTTP context.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResponseBody.html":{"url":"classes/ResponseBody.html","title":"class - ResponseBody","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResponseBody\n\n\n\n        \n            Documentation\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/classes/ResponseBody.ts\n        \n\n\n            \n                Description\n            \n            \n                Class representing the response body.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                error\n                            \n                            \n                                errorCode\n                            \n                            \n                                message\n                            \n                            \n                                status\n                            \n                            \n                                statusCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(statusCode: number, message?: string, data?: any, error?: any, errorCode?: string)\n                    \n                \n\n                \n                    \n                            Creates an instance of ResponseBody.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        statusCode\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        error\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        errorCode\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n            \n                \n                    The data for the response.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n            \n                \n                    The error for the response.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n            \n                \n                    The error code for the response.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n            \n                \n                    The message for the response.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n            \n                \n                    The HTTP status message for the response.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        statusCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n            \n                \n                    The HTTP status code for the response.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/CONSTANTS.ts\n            \n            variable\n            CONSTANTS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/TYPES.ts\n            \n            interface\n            AppRoute\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/TYPES.ts\n            \n            interface\n            CustomErrorMap\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/TYPES.ts\n            \n            interface\n            ExpsConstants\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/TYPES.ts\n            \n            interface\n            ExpsRouteConfig\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/TYPES.ts\n            \n            interface\n            ExpsRouterConfig\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/TYPES.ts\n            \n            interface\n            HttpContext\n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                src/classes/CustomError.ts\n            \n            class\n            CustomError\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/classes/ResponseBody.ts\n            \n            class\n            ResponseBody\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/lib/asyncWrapper.ts\n            \n            function\n            asyncWrapper\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/configureApp.ts\n            \n            function\n            configureApp\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/configureRouter.ts\n            \n            function\n            configureRouter\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/httpContext.ts\n            \n            variable\n            httpContext\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/initialize.ts\n            \n            function\n            initialize\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/middlewares/DEFAULT_ROUTES.ts\n            \n            function\n            handshakeHandler\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/middlewares/DEFAULT_ROUTES.ts\n            \n            function\n            healthHandler\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/middlewares/DEFAULT_ROUTES.ts\n            \n            function\n            versionHandler\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/middlewares/DEFAULT_ROUTES.ts\n            \n            variable\n            DEFAULT_ROUTES\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/middlewares/apiLogging.ts\n            \n            function\n            apiLogging\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/middlewares/apiLogging.ts\n            \n            function\n            logManager\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/middlewares/decryptCryptoKey.ts\n            \n            function\n            decryptCryptoKey\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/middlewares/decryptPayload.ts\n            \n            function\n            decryptPayload\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/middlewares/encryptPayload.ts\n            \n            function\n            encryptPayload\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/middlewares/extractHeaders.ts\n            \n            function\n            extractHeaders\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/middlewares/handleError.ts\n            \n            function\n            handleError\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/middlewares/handleResponse.ts\n            \n            function\n            handleResponse\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/middlewares/routeSanity.ts\n            \n            function\n            routeSanity\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @am92/api-crypto : ^2.0.3\n        \n            @am92/api-logger : ^2.0.3\n        \n            express-http-context : ^1.2.4\n        \n            lodash : ^4.17.21\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n@am92/express-utils\n \n \n \n \n\n\n\n\nTable of Content\n\nInstallation\nContributors\nResources\nLicense\n\n\n\nInstallation\nExample :$ npm install --save @am92/express-utils\n\nContributors\n\n  \n    \n      \n        \n          \n          \n          Ankit Gandhi\n        \n      \n      \n        \n          \n          \n          Mehul Agarwal\n        \n      \n    \n  \n\n\n\n\nResources\n\nApi Crypto\nApi Logger\nExpress Http Context\nLodash\nNanoid\n\n\n\nLicense\n\nMIT\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2022 Ankit Mehul Team Account\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    6 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 2.0.2\n        \n            Description : Utilities for Express Framework\n        \n            Keywords : express, expressjs, node, api crypto, api logging\n        \n            Homepage : https://github.com/heliumtank92/am92-express-utils#readme\n        \n            License : MIT\n        \n            Repository : git@github.com:heliumtank92/am92-express-utils.git\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Middleware   (src/.../TYPES.ts)\n                        \n                        \n                            ROUTE_METHODS   (src/.../TYPES.ts)\n                        \n                        \n                            ROUTE_METHODS_CAPS   (src/.../TYPES.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/TYPES.ts\n    \n    \n        \n            \n                \n                    \n                    Middleware\n                \n            \n            \n                \n                    Type definition for Express middleware functions.\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ROUTE_METHODS\n                \n            \n            \n                \n                    Type definition for HTTP methods in lowercase.\n\n                \n            \n            \n                \n                        \"get\" | \"post\" | \"put\" | \"delete\" | \"patch\" | \"options\" | \"head\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ROUTE_METHODS_CAPS\n                \n            \n            \n                \n                    Type definition for HTTP methods in uppercase.\n\n                \n            \n            \n                \n                        \"GET\" | \"POST\" | \"PUT\" | \"DELETE\" | \"PATCH\" | \"OPTIONS\" | \"HEAD\"\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CONSTANTS   (src/.../CONSTANTS.ts)\n                        \n                        \n                            DEFAULT_ROUTES   (src/.../DEFAULT_ROUTES.ts)\n                        \n                        \n                            httpContext   (src/.../httpContext.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/CONSTANTS.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CONSTANTS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ExpsConstants\n\n                    \n                \n                \n                    \n                        Default value : {\n  REQUEST_ID_HEADER_KEY: 'x-req-id',\n  SESSION_ID_HEADER_KEY: 'x-session-id',\n  CLIENT_ID_HEADER_KEY: 'x-api-client-id',\n  ENCRYPTION_KEY_HEADER_KEY: 'x-api-encryption-key',\n  PLAINTEXT_ENCRYPTION_KEY: 'plaintext-api-encryption-key'\n}\n                    \n                \n\n            \n                \n                    This module defines a set of constants used throughout the application.\nThese constants include header keys for request identification, session management,\nclient identification, and encryption key handling.\n\n                \n            \n\n        \n    \n\n    src/middlewares/DEFAULT_ROUTES.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_ROUTES\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ExpsRouteConfig[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    path: '/health',\n    method: 'get',\n    pipeline: [routeSanity, asyncWrapper(healthHandler)]\n  },\n  {\n    path: '/version',\n    method: 'get',\n    pipeline: [routeSanity, asyncWrapper(versionHandler)]\n  },\n  {\n    path: '/handshake',\n    method: 'get',\n    pipeline: [routeSanity, asyncWrapper(handshakeHandler)]\n  }\n]\n                    \n                \n\n            \n                \n                    Default routes configuration for the Express application.\nThis array contains the default routes that are registered with the Express application.\nEach route object specifies the path, HTTP method, and the middleware pipeline to be executed.\n\n                \n            \n\n        \n    \n\n    src/lib/httpContext.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        httpContext\n                        \n                    \n                \n            \n                \n                    \n                        Type :         HttpContext\n\n                    \n                \n                \n                    \n                        Default value : {\n  get: expressHttpContext.get,\n  set: expressHttpContext.set,\n  getRequestId,\n  setRequestId,\n  getSessionId,\n  setSessionId,\n  getClientId,\n  setClientId,\n  getEncryptionKey,\n  setEncryptionKey,\n  getPlaintextEncryptionKey,\n  setPlaintextEncryptionKey\n}\n                    \n                \n\n            \n                \n                    This module provides a context for managing HTTP request-specific data.\nIt leverages the 'express-http-context' library to store and retrieve\nvarious identifiers and keys associated with the HTTP request lifecycle.\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
