var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/CustomError.html",[0,1.263,1,1.745]],["body/classes/CustomError.html",[0,1.004,1,2.351,2,1.387,3,0.456,4,0.541,5,1.672,6,0.782,7,3.208,8,2.104,9,2.351,10,3.039,11,1.672,12,2.104,13,0.379,14,0.659,15,3.906,16,3.039,17,1.698,18,1.99,19,2.003,20,2.351,21,3.567,22,2.003,23,1.672,24,2.104,25,3.039,26,1.99,27,1.672,28,1.174,29,0.056,30,1.174,31,0.802,32,2.104,33,2.414,34,2.104,35,2.104,36,2.104,37,2.104,38,3.291,39,2.73,40,2.104,41,2.104,42,2.104,43,2.104,44,2.003,45,1.179,46,2.104,47,2.003,48,2.104,49,2.104,50,1.672,51,2.104,52,1.387,53,2.104,54,0.541,55,1.387,56,1.004,57,0.034,58,0.034]],["title/interfaces/CustomErrorMap.html",[26,1.477,59,0.306]],["body/interfaces/CustomErrorMap.html",[3,0.571,4,0.677,6,0.677,7,3.055,13,0.475,14,0.771,17,2.023,18,2.403,19,2.651,20,2.839,22,2.651,26,1.469,29,0.054,31,0.811,45,1.4,47,3.055,52,2.342,54,0.677,55,1.735,56,1.256,57,0.04,58,0.04,59,0.305,60,0.927,61,0.795,62,1.256,63,2.632,64,0.386,65,0.795,66,2.632,67,2.632]],["title/interfaces/ExpsAppRoute.html",[59,0.306,68,1.745]],["body/interfaces/ExpsAppRoute.html",[3,0.688,4,0.816,6,0.816,13,0.572,14,0.871,29,0.052,31,0.724,45,1.212,56,1.916,57,0.046,58,0.046,59,0.367,60,1.118,61,0.958,62,1.514,64,0.466,65,0.958,68,2.091,69,2.903,70,3.173,71,2.091,72,3.266,73,3.051]],["title/interfaces/ExpsConstants.html",[59,0.306,74,1.477]],["body/interfaces/ExpsConstants.html",[3,0.579,4,0.687,6,0.687,13,0.481,14,0.778,29,0.054,31,0.815,45,1.494,57,0.041,58,0.041,59,0.309,60,0.941,61,0.806,62,1.274,64,0.392,65,0.806,74,1.49,75,1.76,76,2.121,77,3.219,78,3.219,79,3.219,80,3.219,81,3.219,82,3.442,83,3.134,84,1.76,85,2.67,86,1.712,87,1.76,88,1.095,89,1.76]],["title/interfaces/ExpsRouteConfig.html",[59,0.306,90,1.477]],["body/interfaces/ExpsRouteConfig.html",[3,0.455,4,0.539,6,0.539,11,1.665,13,0.378,14,0.657,17,2.036,29,0.055,31,0.821,45,0.915,54,0.539,57,0.034,58,0.034,59,0.243,60,0.739,61,0.633,62,1,64,0.308,65,0.633,69,2.726,73,2.57,86,1,88,0.859,90,1.17,91,1.382,92,2.828,93,2.828,94,3.098,95,3.098,96,3.425,97,3.559,98,3.559,99,3.425,100,2.346,101,2.408,102,1.382,103,1.665,104,2.408,105,2.408,106,2.096,107,2.096,108,2.841,109,1.986,110,2.346,111,2.346,112,3.559,113,1.665]],["title/interfaces/ExpsRouterConfig.html",[59,0.306,114,1.745]],["body/interfaces/ExpsRouterConfig.html",[3,0.492,4,0.583,6,0.583,13,0.409,14,0.695,17,2.036,29,0.054,30,1.265,31,0.82,45,0.968,57,0.036,58,0.036,59,0.262,60,0.799,61,0.685,62,1.082,64,0.333,65,0.685,71,2.81,72,2.917,86,1.082,88,0.929,91,2.112,92,2.954,93,2.954,94,3.21,99,3.516,100,2.45,101,2.546,102,1.494,108,2.663,109,1.788,110,2.112,111,2.112,113,1.801,114,1.494,115,3.718,116,3.718,117,3.718,118,3.718,119,2.267,120,3.205]],["title/interfaces/HttpContext.html",[59,0.306,121,1.477]],["body/interfaces/HttpContext.html",[3,0.374,4,0.444,6,0.444,13,0.311,14,0.569,17,1.563,28,2.127,29,0.056,30,2.127,31,0.688,39,1.729,45,1.442,54,1.205,57,0.03,58,0.03,59,0.2,60,0.608,61,0.521,64,0.253,65,0.521,83,2.336,84,1.729,85,2.646,86,1.691,87,1.729,88,1.075,89,1.729,121,0.963,122,1.371,123,2.614,124,3.5,125,2.084,126,2.521,127,2.521,128,2.521,129,2.521,130,2.521,131,2.084,132,2.084,133,2.084,134,2.084,135,2.084,136,4.493,137,3.813,138,1.725,139,1.725,140,3.813,141,1.725,142,2.623,143,1.725,144,1.725,145,1.725,146,1.725,147,1.725]],["title/classes/ResponseBody.html",[0,1.263,148,1.745]],["body/classes/ResponseBody.html",[0,1.173,2,1.62,3,0.533,4,0.632,6,0.632,7,2.992,9,1.62,13,0.443,14,0.736,17,1.007,18,2.45,19,2.758,20,2.992,22,2.559,23,1.953,27,1.953,28,1.371,29,0.055,30,1.371,31,0.839,33,3.489,45,1.405,47,2.235,52,2.559,54,0.872,55,2.758,57,0.038,58,0.038,103,1.953,148,2.235,149,1.953,150,2.458,151,3.696,152,2.458]],["title/coverage.html",[153,2.834]],["body/coverage.html",[0,1.291,1,1.185,3,0.39,4,0.462,5,1.428,26,1.003,29,0.058,31,0.324,57,0.031,58,0.031,59,0.472,61,1.232,68,1.185,74,1.003,75,1.185,90,1.003,114,1.185,121,1.51,148,1.185,149,1.428,153,1.428,154,1.798,155,1.798,156,1.428,157,3.254,158,5.083,159,4.937,160,2.706,161,1.798,162,2.706,163,2.706,164,1.798,165,1.798,166,3.852,167,1.798,168,1.798,169,1.798,170,1.798,171,1.798,172,1.428,173,1.798,174,1.798,175,2.876,176,1.798,177,1.798,178,1.798,179,1.428,180,2.706,181,1.798,182,1.798,183,1.798,184,1.798,185,1.798,186,1.798,187,1.798,188,1.798,189,1.798,190,1.798,191,1.798,192,1.798,193,1.798,194,1.798,195,1.798,196,1.428,197,1.798,198,1.798,199,1.428]],["title/dependencies.html",[200,1.774,201,2.519]],["body/dependencies.html",[29,0.057,54,0.921,57,0.049,58,0.049,64,0.526,123,1.998,201,2.846,202,4.328,203,2.361,204,3.582,205,2.846,206,3.582,207,3.582,208,2.846,209,3.582]],["title/index.html",[13,0.403,210,1.774,211,1.774]],["body/index.html",[29,0.05,54,0.835,57,0.046,58,0.046,64,0.477,123,1.812,199,2.58,203,2.14,205,2.58,208,2.58,212,4.074,213,3.237,214,3.247,215,4.074,216,4.074,217,4.074,218,2.273,219,3.247,220,3.247,221,3.247,222,3.247,223,2.58,224,3.247,225,2.58,226,3.247,227,2.685,228,3.247,229,2.14]],["title/license.html",[210,1.774,211,1.774,218,1.246]],["body/license.html",[3,0.517,29,0.038,56,1.137,57,0.038,58,0.038,64,0.35,100,1.571,218,1.33,223,1.894,225,1.894,229,1.571,230,3.82,231,2.384,232,2.384,233,2.384,234,2.384,235,3.32,236,2.384,237,2.384,238,2.384,239,2.384,240,2.384,241,2.384,242,3.32,243,4.78,244,2.384,245,2.384,246,3.82,247,2.384,248,3.32,249,2.384,250,2.384,251,3.32,252,2.384,253,2.384,254,2.384,255,2.384,256,2.384,257,2.384,258,2.384,259,3.32,260,2.384,261,2.384,262,2.384,263,2.384,264,2.384,265,2.384,266,2.384,267,3.32,268,3.32,269,2.384,270,2.384,271,2.384,272,2.384,273,2.384,274,2.384,275,2.384,276,2.384,277,2.384,278,2.384,279,2.384,280,2.384,281,2.384,282,2.384,283,2.384,284,2.384,285,2.384,286,2.384,287,2.384,288,2.384,289,2.384,290,2.384,291,2.384,292,2.384,293,2.384,294,2.384,295,2.384,296,2.384,297,2.384]],["title/modules.html",[298,2.834]],["body/modules.html",[29,0.052,57,0.052,58,0.052,298,3.173]],["title/overview.html",[299,2.834]],["body/overview.html",[2,2.558,29,0.051,57,0.051,58,0.051,60,1.368,299,3.084,300,3.882,301,3.882]],["title/properties.html",[14,0.688,200,1.774]],["body/properties.html",[6,0.845,14,0.713,29,0.057,50,2.61,57,0.047,58,0.047,64,0.688,102,2.165,203,2.165,213,2.61,218,1.833,227,2.705,229,2.165,302,2.61,303,3.286,304,3.286,305,3.286,306,3.286,307,3.286,308,3.286,309,3.286,310,3.286,311,3.286,312,3.286]],["title/miscellaneous/typealiases.html",[313,1.246,314,3.171]],["body/miscellaneous/typealiases.html",[9,2.003,13,0.379,28,1.99,29,0.056,31,0.87,44,2.003,54,0.782,57,0.034,58,0.034,61,0.635,64,0.653,65,0.635,72,2.003,88,1.246,104,2.414,105,2.414,108,2.003,109,1.174,110,1.387,125,2.414,151,2.414,166,2.414,313,1.174,315,2.104,316,3.039,317,4.773,318,3.039,319,3.039,320,3.567,321,3.567,322,3.039,323,3.039,324,3.039,325,4.773,326,2.104,327,2.104,328,3.039,329,2.414,330,2.104,331,2.104,332,2.104,333,3.039,334,3.039,335,3.039,336,3.039,337,3.039,338,3.039,339,2.104]],["title/miscellaneous/variables.html",[313,1.246,340,2.519]],["body/miscellaneous/variables.html",[13,0.333,18,1.03,29,0.056,31,0.596,38,3.119,39,2.178,44,1.216,54,0.943,56,0.881,57,0.031,58,0.031,64,0.485,65,0.998,69,1.216,71,1.819,73,2.417,74,1.03,75,2.417,76,1.466,77,1.466,78,1.466,79,1.466,80,1.466,81,1.466,82,1.466,83,2.178,84,1.819,85,2.178,86,1.577,87,1.216,88,1.355,89,1.819,90,1.03,91,1.216,95,2.914,96,2.914,109,1.03,111,1.216,121,1.844,122,1.466,123,1.54,124,2.192,126,1.466,127,1.466,128,1.466,129,1.466,130,1.466,131,1.466,132,1.466,133,1.466,134,1.466,135,1.466,156,1.466,172,1.466,175,1.466,179,2.192,196,2.626,227,2.178,302,1.466,313,1.03,329,1.466,340,1.466,341,1.846,342,1.846,343,1.846,344,3.668,345,1.846,346,2.76,347,1.846,348,1.846,349,1.846,350,2.76,351,2.76,352,1.846,353,1.846,354,1.846,355,1.846,356,1.846,357,1.846,358,1.846,359,1.846,360,1.846,361,1.846,362,1.846,363,1.846,364,1.846,365,1.846,366,1.846,367,1.846,368,1.846,369,1.846,370,1.846,371,1.846,372,1.846,373,1.846]]],"invertedIndex":[["",{"_index":29,"title":{},"body":{"classes/CustomError.html":{},"interfaces/CustomErrorMap.html":{},"interfaces/ExpsAppRoute.html":{},"interfaces/ExpsConstants.html":{},"interfaces/ExpsRouteConfig.html":{},"interfaces/ExpsRouterConfig.html":{},"interfaces/HttpContext.html":{},"classes/ResponseBody.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["1.2.4",{"_index":207,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":159,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":158,"title":{},"body":{"coverage.html":{}}}],["13/13",{"_index":164,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":300,"title":{},"body":{"overview.html":{}}}],["2.0.12",{"_index":303,"title":{},"body":{"properties.html":{}}}],["2.0.4",{"_index":204,"title":{},"body":{"dependencies.html":{}}}],["2.0.5",{"_index":206,"title":{},"body":{"dependencies.html":{}}}],["2022",{"_index":232,"title":{},"body":{"license.html":{}}}],["3/3",{"_index":161,"title":{},"body":{"coverage.html":{}}}],["4.17.21",{"_index":209,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":301,"title":{},"body":{"overview.html":{}}}],["6/6",{"_index":160,"title":{},"body":{"coverage.html":{}}}],["8/8",{"_index":163,"title":{},"body":{"coverage.html":{}}}],["9/9",{"_index":162,"title":{},"body":{"coverage.html":{}}}],["_iscustomerror",{"_index":16,"title":{},"body":{"classes/CustomError.html":{}}}],["above",{"_index":266,"title":{},"body":{"license.html":{}}}],["account",{"_index":234,"title":{},"body":{"license.html":{}}}],["action",{"_index":290,"title":{},"body":{"license.html":{}}}],["additional",{"_index":66,"title":{},"body":{"interfaces/CustomErrorMap.html":{}}}],["agarwal",{"_index":226,"title":{},"body":{"index.html":{}}}],["aliases",{"_index":315,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["am92/api",{"_index":202,"title":{},"body":{"dependencies.html":{}}}],["am92/express",{"_index":212,"title":{},"body":{"index.html":{}}}],["and/or",{"_index":257,"title":{},"body":{"license.html":{}}}],["ankit",{"_index":223,"title":{},"body":{"index.html":{},"license.html":{}}}],["api",{"_index":227,"title":{},"body":{"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["apilogging",{"_index":181,"title":{},"body":{"coverage.html":{}}}],["application",{"_index":65,"title":{},"body":{"interfaces/CustomErrorMap.html":{},"interfaces/ExpsAppRoute.html":{},"interfaces/ExpsConstants.html":{},"interfaces/ExpsRouteConfig.html":{},"interfaces/ExpsRouterConfig.html":{},"interfaces/HttpContext.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["arising",{"_index":294,"title":{},"body":{"license.html":{}}}],["array",{"_index":329,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["associated",{"_index":56,"title":{},"body":{"classes/CustomError.html":{},"interfaces/CustomErrorMap.html":{},"interfaces/ExpsAppRoute.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["asyncwrapper",{"_index":167,"title":{},"body":{"coverage.html":{}}}],["asyncwrapper(handshakehandler",{"_index":358,"title":{},"body":{"miscellaneous/variables.html":{}}}],["asyncwrapper(healthhandler",{"_index":355,"title":{},"body":{"miscellaneous/variables.html":{}}}],["asyncwrapper(versionhandler",{"_index":356,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authors",{"_index":284,"title":{},"body":{"license.html":{}}}],["before",{"_index":113,"title":{},"body":{"interfaces/ExpsRouteConfig.html":{},"interfaces/ExpsRouterConfig.html":{}}}],["better",{"_index":36,"title":{},"body":{"classes/CustomError.html":{}}}],["bodies",{"_index":119,"title":{},"body":{"interfaces/ExpsRouterConfig.html":{}}}],["body",{"_index":103,"title":{},"body":{"interfaces/ExpsRouteConfig.html":{},"classes/ResponseBody.html":{}}}],["boolean",{"_index":99,"title":{},"body":{"interfaces/ExpsRouteConfig.html":{},"interfaces/ExpsRouterConfig.html":{}}}],["c",{"_index":231,"title":{},"body":{"license.html":{}}}],["case",{"_index":11,"title":{},"body":{"classes/CustomError.html":{},"interfaces/ExpsRouteConfig.html":{}}}],["charge",{"_index":239,"title":{},"body":{"license.html":{}}}],["claim",{"_index":287,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/CustomError.html":{},"classes/ResponseBody.html":{}},"body":{"classes/CustomError.html":{},"classes/ResponseBody.html":{},"coverage.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/CustomError.html":{},"classes/ResponseBody.html":{},"overview.html":{}}}],["client",{"_index":84,"title":{},"body":{"interfaces/ExpsConstants.html":{},"interfaces/HttpContext.html":{},"miscellaneous/variables.html":{}}}],["client_id_header_key",{"_index":77,"title":{},"body":{"interfaces/ExpsConstants.html":{},"miscellaneous/variables.html":{}}}],["clientid",{"_index":139,"title":{},"body":{"interfaces/HttpContext.html":{}}}],["code",{"_index":47,"title":{},"body":{"classes/CustomError.html":{},"interfaces/CustomErrorMap.html":{},"classes/ResponseBody.html":{}}}],["collection",{"_index":70,"title":{},"body":{"interfaces/ExpsAppRoute.html":{}}}],["conditions",{"_index":265,"title":{},"body":{"license.html":{}}}],["configuration",{"_index":91,"title":{},"body":{"interfaces/ExpsRouteConfig.html":{},"interfaces/ExpsRouterConfig.html":{},"miscellaneous/variables.html":{}}}],["configureapp",{"_index":169,"title":{},"body":{"coverage.html":{}}}],["configurerouter",{"_index":171,"title":{},"body":{"coverage.html":{}}}],["connection",{"_index":296,"title":{},"body":{"license.html":{}}}],["constants",{"_index":75,"title":{},"body":{"interfaces/ExpsConstants.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":23,"title":{},"body":{"classes/CustomError.html":{},"classes/ResponseBody.html":{}}}],["constructor(e",{"_index":24,"title":{},"body":{"classes/CustomError.html":{}}}],["constructor(statuscode",{"_index":152,"title":{},"body":{"classes/ResponseBody.html":{}}}],["contains",{"_index":359,"title":{},"body":{"miscellaneous/variables.html":{}}}],["content",{"_index":214,"title":{},"body":{"index.html":{}}}],["context",{"_index":123,"title":{},"body":{"interfaces/HttpContext.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["contract",{"_index":291,"title":{},"body":{"license.html":{}}}],["contributors",{"_index":216,"title":{},"body":{"index.html":{}}}],["copies",{"_index":259,"title":{},"body":{"license.html":{}}}],["copy",{"_index":242,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":230,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":153,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creates",{"_index":27,"title":{},"body":{"classes/CustomError.html":{},"classes/ResponseBody.html":{}}}],["crypto",{"_index":203,"title":{},"body":{"dependencies.html":{},"index.html":{},"properties.html":{}}}],["custom",{"_index":43,"title":{},"body":{"classes/CustomError.html":{}}}],["customerror",{"_index":1,"title":{"classes/CustomError.html":{}},"body":{"classes/CustomError.html":{},"coverage.html":{}}}],["customerrormap",{"_index":26,"title":{"interfaces/CustomErrorMap.html":{}},"body":{"classes/CustomError.html":{},"interfaces/CustomErrorMap.html":{},"coverage.html":{}}}],["damages",{"_index":288,"title":{},"body":{"license.html":{}}}],["data",{"_index":18,"title":{},"body":{"classes/CustomError.html":{},"interfaces/CustomErrorMap.html":{},"classes/ResponseBody.html":{},"miscellaneous/variables.html":{}}}],["deal",{"_index":245,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":297,"title":{},"body":{"license.html":{}}}],["decryptcryptokey",{"_index":184,"title":{},"body":{"coverage.html":{}}}],["decryptpayload",{"_index":186,"title":{},"body":{"coverage.html":{}}}],["default",{"_index":38,"title":{},"body":{"classes/CustomError.html":{},"miscellaneous/variables.html":{}}}],["default_error_code",{"_index":46,"title":{},"body":{"classes/CustomError.html":{}}}],["default_error_msg",{"_index":48,"title":{},"body":{"classes/CustomError.html":{}}}],["default_error_status_code",{"_index":53,"title":{},"body":{"classes/CustomError.html":{}}}],["default_routes",{"_index":179,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["defines",{"_index":347,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defining",{"_index":62,"title":{},"body":{"interfaces/CustomErrorMap.html":{},"interfaces/ExpsAppRoute.html":{},"interfaces/ExpsConstants.html":{},"interfaces/ExpsRouteConfig.html":{},"interfaces/ExpsRouterConfig.html":{}}}],["definition",{"_index":325,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["delete",{"_index":335,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["dependencies",{"_index":201,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["description",{"_index":6,"title":{},"body":{"classes/CustomError.html":{},"interfaces/CustomErrorMap.html":{},"interfaces/ExpsAppRoute.html":{},"interfaces/ExpsConstants.html":{},"interfaces/ExpsRouteConfig.html":{},"interfaces/ExpsRouterConfig.html":{},"interfaces/HttpContext.html":{},"classes/ResponseBody.html":{},"properties.html":{}}}],["dictionary",{"_index":328,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["disable",{"_index":101,"title":{},"body":{"interfaces/ExpsRouteConfig.html":{},"interfaces/ExpsRouterConfig.html":{}}}],["disablebodylog",{"_index":92,"title":{},"body":{"interfaces/ExpsRouteConfig.html":{},"interfaces/ExpsRouterConfig.html":{}}}],["disablecrypto",{"_index":93,"title":{},"body":{"interfaces/ExpsRouteConfig.html":{},"interfaces/ExpsRouterConfig.html":{}}}],["distribute",{"_index":255,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":3,"title":{},"body":{"classes/CustomError.html":{},"interfaces/CustomErrorMap.html":{},"interfaces/ExpsAppRoute.html":{},"interfaces/ExpsConstants.html":{},"interfaces/ExpsRouteConfig.html":{},"interfaces/ExpsRouterConfig.html":{},"interfaces/HttpContext.html":{},"classes/ResponseBody.html":{},"coverage.html":{},"license.html":{}}}],["e",{"_index":32,"title":{},"body":{"classes/CustomError.html":{}}}],["each",{"_index":361,"title":{},"body":{"miscellaneous/variables.html":{}}}],["emap",{"_index":25,"title":{},"body":{"classes/CustomError.html":{}}}],["enabled",{"_index":94,"title":{},"body":{"interfaces/ExpsRouteConfig.html":{},"interfaces/ExpsRouterConfig.html":{}}}],["encryption",{"_index":86,"title":{},"body":{"interfaces/ExpsConstants.html":{},"interfaces/ExpsRouteConfig.html":{},"interfaces/ExpsRouterConfig.html":{},"interfaces/HttpContext.html":{},"miscellaneous/variables.html":{}}}],["encryption_key_header_key",{"_index":78,"title":{},"body":{"interfaces/ExpsConstants.html":{},"miscellaneous/variables.html":{}}}],["encryptionkey",{"_index":142,"title":{},"body":{"interfaces/HttpContext.html":{}}}],["encryptpayload",{"_index":188,"title":{},"body":{"coverage.html":{}}}],["error",{"_index":7,"title":{},"body":{"classes/CustomError.html":{},"interfaces/CustomErrorMap.html":{},"classes/ResponseBody.html":{}}}],["error's",{"_index":49,"title":{},"body":{"classes/CustomError.html":{}}}],["errorcode",{"_index":19,"title":{},"body":{"classes/CustomError.html":{},"interfaces/CustomErrorMap.html":{},"classes/ResponseBody.html":{}}}],["event",{"_index":283,"title":{},"body":{"license.html":{}}}],["example",{"_index":219,"title":{},"body":{"index.html":{}}}],["executed",{"_index":111,"title":{},"body":{"interfaces/ExpsRouteConfig.html":{},"interfaces/ExpsRouterConfig.html":{},"miscellaneous/variables.html":{}}}],["express",{"_index":64,"title":{},"body":{"interfaces/CustomErrorMap.html":{},"interfaces/ExpsAppRoute.html":{},"interfaces/ExpsConstants.html":{},"interfaces/ExpsRouteConfig.html":{},"interfaces/ExpsRouterConfig.html":{},"interfaces/HttpContext.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["expresshttpcontext.get",{"_index":363,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expresshttpcontext.set",{"_index":364,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expressjs",{"_index":307,"title":{},"body":{"properties.html":{}}}],["expsapp",{"_index":316,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["expsapproute",{"_index":68,"title":{"interfaces/ExpsAppRoute.html":{}},"body":{"interfaces/ExpsAppRoute.html":{},"coverage.html":{}}}],["expsconstants",{"_index":74,"title":{"interfaces/ExpsConstants.html":{}},"body":{"interfaces/ExpsConstants.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["expsmiddleware",{"_index":108,"title":{},"body":{"interfaces/ExpsRouteConfig.html":{},"interfaces/ExpsRouterConfig.html":{},"miscellaneous/typealiases.html":{}}}],["expsnextfunction",{"_index":318,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["expsparams",{"_index":319,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["expsparamsarray",{"_index":320,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["expsparamsdictionary",{"_index":321,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["expsrequest",{"_index":322,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["expsresponse",{"_index":323,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["expsrouteconfig",{"_index":90,"title":{"interfaces/ExpsRouteConfig.html":{}},"body":{"interfaces/ExpsRouteConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["expsrouter",{"_index":324,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["expsrouterconfig",{"_index":114,"title":{"interfaces/ExpsRouterConfig.html":{}},"body":{"interfaces/ExpsRouterConfig.html":{},"coverage.html":{}}}],["extends",{"_index":12,"title":{},"body":{"classes/CustomError.html":{}}}],["extractheaders",{"_index":190,"title":{},"body":{"coverage.html":{}}}],["file",{"_index":4,"title":{},"body":{"classes/CustomError.html":{},"interfaces/CustomErrorMap.html":{},"interfaces/ExpsAppRoute.html":{},"interfaces/ExpsConstants.html":{},"interfaces/ExpsRouteConfig.html":{},"interfaces/ExpsRouterConfig.html":{},"interfaces/HttpContext.html":{},"classes/ResponseBody.html":{},"coverage.html":{}}}],["files",{"_index":244,"title":{},"body":{"license.html":{}}}],["fitness",{"_index":279,"title":{},"body":{"license.html":{}}}],["flag",{"_index":41,"title":{},"body":{"classes/CustomError.html":{}}}],["following",{"_index":264,"title":{},"body":{"license.html":{}}}],["framework",{"_index":305,"title":{},"body":{"properties.html":{}}}],["free",{"_index":238,"title":{},"body":{"license.html":{}}}],["function",{"_index":166,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["functions",{"_index":110,"title":{},"body":{"interfaces/ExpsRouteConfig.html":{},"interfaces/ExpsRouterConfig.html":{},"miscellaneous/typealiases.html":{}}}],["furnished",{"_index":262,"title":{},"body":{"license.html":{}}}],["gandhi",{"_index":224,"title":{},"body":{"index.html":{}}}],["getclientid",{"_index":126,"title":{},"body":{"interfaces/HttpContext.html":{},"miscellaneous/variables.html":{}}}],["getencryptionkey",{"_index":127,"title":{},"body":{"interfaces/HttpContext.html":{},"miscellaneous/variables.html":{}}}],["getplaintextencryptionkey",{"_index":128,"title":{},"body":{"interfaces/HttpContext.html":{},"miscellaneous/variables.html":{}}}],["getrequestid",{"_index":129,"title":{},"body":{"interfaces/HttpContext.html":{},"miscellaneous/variables.html":{}}}],["getsessionid",{"_index":130,"title":{},"body":{"interfaces/HttpContext.html":{},"miscellaneous/variables.html":{}}}],["getting",{"_index":210,"title":{"index.html":{},"license.html":{}},"body":{}}],["git@github.com:heliumtank92/am92",{"_index":311,"title":{},"body":{"properties.html":{}}}],["granted",{"_index":237,"title":{},"body":{"license.html":{}}}],["handleerror",{"_index":192,"title":{},"body":{"coverage.html":{}}}],["handleresponse",{"_index":194,"title":{},"body":{"coverage.html":{}}}],["handling",{"_index":353,"title":{},"body":{"miscellaneous/variables.html":{}}}],["handshake",{"_index":357,"title":{},"body":{"miscellaneous/variables.html":{}}}],["handshakehandler",{"_index":176,"title":{},"body":{"coverage.html":{}}}],["head",{"_index":338,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["header",{"_index":82,"title":{},"body":{"interfaces/ExpsConstants.html":{},"miscellaneous/variables.html":{}}}],["health",{"_index":354,"title":{},"body":{"miscellaneous/variables.html":{}}}],["healthhandler",{"_index":177,"title":{},"body":{"coverage.html":{}}}],["hereby",{"_index":236,"title":{},"body":{"license.html":{}}}],["holders",{"_index":285,"title":{},"body":{"license.html":{}}}],["homepage",{"_index":308,"title":{},"body":{"properties.html":{}}}],["http",{"_index":54,"title":{},"body":{"classes/CustomError.html":{},"interfaces/CustomErrorMap.html":{},"interfaces/ExpsRouteConfig.html":{},"interfaces/HttpContext.html":{},"classes/ResponseBody.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["httpcontext",{"_index":121,"title":{"interfaces/HttpContext.html":{}},"body":{"interfaces/HttpContext.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["https://heliumtank92.github.io/am92",{"_index":309,"title":{},"body":{"properties.html":{}}}],["id",{"_index":85,"title":{},"body":{"interfaces/ExpsConstants.html":{},"interfaces/HttpContext.html":{},"miscellaneous/variables.html":{}}}],["identification",{"_index":351,"title":{},"body":{"miscellaneous/variables.html":{}}}],["identifier",{"_index":154,"title":{},"body":{"coverage.html":{}}}],["identifiers",{"_index":372,"title":{},"body":{"miscellaneous/variables.html":{}}}],["identify",{"_index":42,"title":{},"body":{"classes/CustomError.html":{}}}],["implied",{"_index":275,"title":{},"body":{"license.html":{}}}],["include",{"_index":349,"title":{},"body":{"miscellaneous/variables.html":{}}}],["included",{"_index":269,"title":{},"body":{"license.html":{}}}],["including",{"_index":248,"title":{},"body":{"license.html":{}}}],["index",{"_index":13,"title":{"index.html":{}},"body":{"classes/CustomError.html":{},"interfaces/CustomErrorMap.html":{},"interfaces/ExpsAppRoute.html":{},"interfaces/ExpsConstants.html":{},"interfaces/ExpsRouteConfig.html":{},"interfaces/ExpsRouterConfig.html":{},"interfaces/HttpContext.html":{},"classes/ResponseBody.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["initialize",{"_index":174,"title":{},"body":{"coverage.html":{}}}],["insensitive",{"_index":106,"title":{},"body":{"interfaces/ExpsRouteConfig.html":{}}}],["install",{"_index":221,"title":{},"body":{"index.html":{}}}],["installation",{"_index":215,"title":{},"body":{"index.html":{}}}],["instance",{"_index":9,"title":{},"body":{"classes/CustomError.html":{},"classes/ResponseBody.html":{},"miscellaneous/typealiases.html":{}}}],["interface",{"_index":59,"title":{"interfaces/CustomErrorMap.html":{},"interfaces/ExpsAppRoute.html":{},"interfaces/ExpsConstants.html":{},"interfaces/ExpsRouteConfig.html":{},"interfaces/ExpsRouterConfig.html":{},"interfaces/HttpContext.html":{}},"body":{"interfaces/CustomErrorMap.html":{},"interfaces/ExpsAppRoute.html":{},"interfaces/ExpsConstants.html":{},"interfaces/ExpsRouteConfig.html":{},"interfaces/ExpsRouterConfig.html":{},"interfaces/HttpContext.html":{},"coverage.html":{}}}],["interfaces",{"_index":60,"title":{},"body":{"interfaces/CustomErrorMap.html":{},"interfaces/ExpsAppRoute.html":{},"interfaces/ExpsConstants.html":{},"interfaces/ExpsRouteConfig.html":{},"interfaces/ExpsRouterConfig.html":{},"interfaces/HttpContext.html":{},"overview.html":{}}}],["key",{"_index":83,"title":{},"body":{"interfaces/ExpsConstants.html":{},"interfaces/HttpContext.html":{},"miscellaneous/variables.html":{}}}],["keys",{"_index":350,"title":{},"body":{"miscellaneous/variables.html":{}}}],["keywords",{"_index":306,"title":{},"body":{"properties.html":{}}}],["kind",{"_index":274,"title":{},"body":{"license.html":{}}}],["leverages",{"_index":367,"title":{},"body":{"miscellaneous/variables.html":{}}}],["liability",{"_index":289,"title":{},"body":{"license.html":{}}}],["liable",{"_index":286,"title":{},"body":{"license.html":{}}}],["library",{"_index":368,"title":{},"body":{"miscellaneous/variables.html":{}}}],["license",{"_index":218,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["lifecycle",{"_index":373,"title":{},"body":{"miscellaneous/variables.html":{}}}],["limitation",{"_index":249,"title":{},"body":{"license.html":{}}}],["limited",{"_index":276,"title":{},"body":{"license.html":{}}}],["lodash",{"_index":208,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["logger",{"_index":205,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["logging",{"_index":102,"title":{},"body":{"interfaces/ExpsRouteConfig.html":{},"interfaces/ExpsRouterConfig.html":{},"properties.html":{}}}],["logmanager",{"_index":182,"title":{},"body":{"coverage.html":{}}}],["lowercase",{"_index":332,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["main",{"_index":112,"title":{},"body":{"interfaces/ExpsRouteConfig.html":{}}}],["management",{"_index":352,"title":{},"body":{"miscellaneous/variables.html":{}}}],["managing",{"_index":122,"title":{},"body":{"interfaces/HttpContext.html":{},"miscellaneous/variables.html":{}}}],["manner",{"_index":107,"title":{},"body":{"interfaces/ExpsRouteConfig.html":{}}}],["map",{"_index":63,"title":{},"body":{"interfaces/CustomErrorMap.html":{}}}],["matching",{"_index":58,"title":{},"body":{"classes/CustomError.html":{},"interfaces/CustomErrorMap.html":{},"interfaces/ExpsAppRoute.html":{},"interfaces/ExpsConstants.html":{},"interfaces/ExpsRouteConfig.html":{},"interfaces/ExpsRouterConfig.html":{},"interfaces/HttpContext.html":{},"classes/ResponseBody.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mehul",{"_index":225,"title":{},"body":{"index.html":{},"license.html":{}}}],["merchantability",{"_index":278,"title":{},"body":{"license.html":{}}}],["merge",{"_index":253,"title":{},"body":{"license.html":{}}}],["message",{"_index":20,"title":{},"body":{"classes/CustomError.html":{},"interfaces/CustomErrorMap.html":{},"classes/ResponseBody.html":{}}}],["method",{"_index":95,"title":{},"body":{"interfaces/ExpsRouteConfig.html":{},"miscellaneous/variables.html":{}}}],["methods",{"_index":125,"title":{},"body":{"interfaces/HttpContext.html":{},"miscellaneous/typealiases.html":{}}}],["middleware",{"_index":109,"title":{},"body":{"interfaces/ExpsRouteConfig.html":{},"interfaces/ExpsRouterConfig.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["miscellaneous",{"_index":313,"title":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":229,"title":{},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["modify",{"_index":252,"title":{},"body":{"license.html":{}}}],["module",{"_index":346,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modules",{"_index":298,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["name",{"_index":30,"title":{},"body":{"classes/CustomError.html":{},"interfaces/ExpsRouterConfig.html":{},"interfaces/HttpContext.html":{},"classes/ResponseBody.html":{}}}],["nanoid",{"_index":228,"title":{},"body":{"index.html":{}}}],["new",{"_index":197,"title":{},"body":{"coverage.html":{}}}],["next",{"_index":326,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["nextfunction",{"_index":327,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["node",{"_index":50,"title":{},"body":{"classes/CustomError.html":{},"properties.html":{}}}],["noninfringement",{"_index":282,"title":{},"body":{"license.html":{}}}],["notice",{"_index":267,"title":{},"body":{"license.html":{}}}],["npm",{"_index":220,"title":{},"body":{"index.html":{}}}],["number",{"_index":52,"title":{},"body":{"classes/CustomError.html":{},"interfaces/CustomErrorMap.html":{},"classes/ResponseBody.html":{}}}],["object",{"_index":44,"title":{},"body":{"classes/CustomError.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["obtaining",{"_index":241,"title":{},"body":{"license.html":{}}}],["optional",{"_index":17,"title":{},"body":{"classes/CustomError.html":{},"interfaces/CustomErrorMap.html":{},"interfaces/ExpsRouteConfig.html":{},"interfaces/ExpsRouterConfig.html":{},"interfaces/HttpContext.html":{},"classes/ResponseBody.html":{}}}],["options",{"_index":337,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["otherwise",{"_index":293,"title":{},"body":{"license.html":{}}}],["out",{"_index":295,"title":{},"body":{"license.html":{}}}],["overview",{"_index":299,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":200,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["parameters",{"_index":28,"title":{},"body":{"classes/CustomError.html":{},"interfaces/HttpContext.html":{},"classes/ResponseBody.html":{},"miscellaneous/typealiases.html":{}}}],["paramsarray",{"_index":330,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["paramsdictionary",{"_index":331,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["particular",{"_index":280,"title":{},"body":{"license.html":{}}}],["patch",{"_index":336,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["path",{"_index":73,"title":{},"body":{"interfaces/ExpsAppRoute.html":{},"interfaces/ExpsRouteConfig.html":{},"miscellaneous/variables.html":{}}}],["permission",{"_index":235,"title":{},"body":{"license.html":{}}}],["permit",{"_index":260,"title":{},"body":{"license.html":{}}}],["person",{"_index":240,"title":{},"body":{"license.html":{}}}],["persons",{"_index":261,"title":{},"body":{"license.html":{}}}],["pipeline",{"_index":96,"title":{},"body":{"interfaces/ExpsRouteConfig.html":{},"miscellaneous/variables.html":{}}}],["plaintext",{"_index":87,"title":{},"body":{"interfaces/ExpsConstants.html":{},"interfaces/HttpContext.html":{},"miscellaneous/variables.html":{}}}],["plaintext_encryption_key",{"_index":79,"title":{},"body":{"interfaces/ExpsConstants.html":{},"miscellaneous/variables.html":{}}}],["portions",{"_index":271,"title":{},"body":{"license.html":{}}}],["post",{"_index":333,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["postmiddlewares",{"_index":115,"title":{},"body":{"interfaces/ExpsRouterConfig.html":{}}}],["postpipeline",{"_index":97,"title":{},"body":{"interfaces/ExpsRouteConfig.html":{}}}],["premiddlewares",{"_index":116,"title":{},"body":{"interfaces/ExpsRouterConfig.html":{}}}],["prepipeline",{"_index":98,"title":{},"body":{"interfaces/ExpsRouteConfig.html":{}}}],["project",{"_index":51,"title":{},"body":{"classes/CustomError.html":{}}}],["properties",{"_index":14,"title":{"properties.html":{}},"body":{"classes/CustomError.html":{},"interfaces/CustomErrorMap.html":{},"interfaces/ExpsAppRoute.html":{},"interfaces/ExpsConstants.html":{},"interfaces/ExpsRouteConfig.html":{},"interfaces/ExpsRouterConfig.html":{},"interfaces/HttpContext.html":{},"classes/ResponseBody.html":{},"properties.html":{}}}],["provided",{"_index":272,"title":{},"body":{"license.html":{}}}],["provides",{"_index":365,"title":{},"body":{"miscellaneous/variables.html":{}}}],["publish",{"_index":254,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":281,"title":{},"body":{"license.html":{}}}],["put",{"_index":334,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["readonly",{"_index":15,"title":{},"body":{"classes/CustomError.html":{}}}],["record",{"_index":120,"title":{},"body":{"interfaces/ExpsRouterConfig.html":{}}}],["registered",{"_index":360,"title":{},"body":{"miscellaneous/variables.html":{}}}],["related",{"_index":67,"title":{},"body":{"interfaces/CustomErrorMap.html":{}}}],["repository",{"_index":310,"title":{},"body":{"properties.html":{}}}],["representing",{"_index":150,"title":{},"body":{"classes/ResponseBody.html":{}}}],["req",{"_index":345,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request",{"_index":88,"title":{},"body":{"interfaces/ExpsConstants.html":{},"interfaces/ExpsRouteConfig.html":{},"interfaces/ExpsRouterConfig.html":{},"interfaces/HttpContext.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["request_id_header_key",{"_index":80,"title":{},"body":{"interfaces/ExpsConstants.html":{},"miscellaneous/variables.html":{}}}],["requestid",{"_index":145,"title":{},"body":{"interfaces/HttpContext.html":{}}}],["resources",{"_index":217,"title":{},"body":{"index.html":{}}}],["response",{"_index":151,"title":{},"body":{"classes/ResponseBody.html":{},"miscellaneous/typealiases.html":{}}}],["responsebody",{"_index":148,"title":{"classes/ResponseBody.html":{}},"body":{"classes/ResponseBody.html":{},"coverage.html":{}}}],["restriction",{"_index":247,"title":{},"body":{"license.html":{}}}],["results",{"_index":57,"title":{},"body":{"classes/CustomError.html":{},"interfaces/CustomErrorMap.html":{},"interfaces/ExpsAppRoute.html":{},"interfaces/ExpsConstants.html":{},"interfaces/ExpsRouteConfig.html":{},"interfaces/ExpsRouterConfig.html":{},"interfaces/HttpContext.html":{},"classes/ResponseBody.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retrieve",{"_index":370,"title":{},"body":{"miscellaneous/variables.html":{}}}],["returns",{"_index":136,"title":{},"body":{"interfaces/HttpContext.html":{}}}],["rewrap",{"_index":35,"title":{},"body":{"classes/CustomError.html":{}}}],["rights",{"_index":250,"title":{},"body":{"license.html":{}}}],["route",{"_index":69,"title":{},"body":{"interfaces/ExpsAppRoute.html":{},"interfaces/ExpsRouteConfig.html":{},"miscellaneous/variables.html":{}}}],["route_methods",{"_index":104,"title":{},"body":{"interfaces/ExpsRouteConfig.html":{},"miscellaneous/typealiases.html":{}}}],["route_methods_caps",{"_index":105,"title":{},"body":{"interfaces/ExpsRouteConfig.html":{},"miscellaneous/typealiases.html":{}}}],["router",{"_index":72,"title":{},"body":{"interfaces/ExpsAppRoute.html":{},"interfaces/ExpsRouterConfig.html":{},"miscellaneous/typealiases.html":{}}}],["routername",{"_index":117,"title":{},"body":{"interfaces/ExpsRouterConfig.html":{}}}],["routes",{"_index":71,"title":{},"body":{"interfaces/ExpsAppRoute.html":{},"interfaces/ExpsRouterConfig.html":{},"miscellaneous/variables.html":{}}}],["routesanity",{"_index":196,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["routesconfig",{"_index":118,"title":{},"body":{"interfaces/ExpsRouterConfig.html":{}}}],["save",{"_index":222,"title":{},"body":{"index.html":{}}}],["sell",{"_index":258,"title":{},"body":{"license.html":{}}}],["service",{"_index":21,"title":{},"body":{"classes/CustomError.html":{}}}],["session",{"_index":89,"title":{},"body":{"interfaces/ExpsConstants.html":{},"interfaces/HttpContext.html":{},"miscellaneous/variables.html":{}}}],["session_id_header_key",{"_index":81,"title":{},"body":{"interfaces/ExpsConstants.html":{},"miscellaneous/variables.html":{}}}],["sessionid",{"_index":147,"title":{},"body":{"interfaces/HttpContext.html":{}}}],["set",{"_index":124,"title":{},"body":{"interfaces/HttpContext.html":{},"miscellaneous/variables.html":{}}}],["setclientid",{"_index":131,"title":{},"body":{"interfaces/HttpContext.html":{},"miscellaneous/variables.html":{}}}],["setclientid(clientid",{"_index":138,"title":{},"body":{"interfaces/HttpContext.html":{}}}],["setencryptionkey",{"_index":132,"title":{},"body":{"interfaces/HttpContext.html":{},"miscellaneous/variables.html":{}}}],["setencryptionkey(encryptionkey",{"_index":141,"title":{},"body":{"interfaces/HttpContext.html":{}}}],["setplaintextencryptionkey",{"_index":133,"title":{},"body":{"interfaces/HttpContext.html":{},"miscellaneous/variables.html":{}}}],["setplaintextencryptionkey(encryptionkey",{"_index":143,"title":{},"body":{"interfaces/HttpContext.html":{}}}],["setrequestid",{"_index":134,"title":{},"body":{"interfaces/HttpContext.html":{},"miscellaneous/variables.html":{}}}],["setrequestid(requestid",{"_index":144,"title":{},"body":{"interfaces/HttpContext.html":{}}}],["setsessionid",{"_index":135,"title":{},"body":{"interfaces/HttpContext.html":{},"miscellaneous/variables.html":{}}}],["setsessionid(sessionid",{"_index":146,"title":{},"body":{"interfaces/HttpContext.html":{}}}],["shall",{"_index":268,"title":{},"body":{"license.html":{}}}],["software",{"_index":243,"title":{},"body":{"license.html":{}}}],["specific",{"_index":366,"title":{},"body":{"miscellaneous/variables.html":{}}}],["specifies",{"_index":362,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../constants.ts",{"_index":341,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../default_routes.ts",{"_index":342,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../httpcontext.ts",{"_index":343,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../types.ts",{"_index":317,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/classes/customerror.ts",{"_index":5,"title":{},"body":{"classes/CustomError.html":{},"coverage.html":{}}}],["src/classes/responsebody.ts",{"_index":149,"title":{},"body":{"classes/ResponseBody.html":{},"coverage.html":{}}}],["src/constants.ts",{"_index":156,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/lib/asyncwrapper.ts",{"_index":165,"title":{},"body":{"coverage.html":{}}}],["src/lib/configureapp.ts",{"_index":168,"title":{},"body":{"coverage.html":{}}}],["src/lib/configurerouter.ts",{"_index":170,"title":{},"body":{"coverage.html":{}}}],["src/lib/httpcontext.ts",{"_index":172,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/lib/initialize.ts",{"_index":173,"title":{},"body":{"coverage.html":{}}}],["src/middlewares/apilogging.ts",{"_index":180,"title":{},"body":{"coverage.html":{}}}],["src/middlewares/decryptcryptokey.ts",{"_index":183,"title":{},"body":{"coverage.html":{}}}],["src/middlewares/decryptpayload.ts",{"_index":185,"title":{},"body":{"coverage.html":{}}}],["src/middlewares/default_routes.ts",{"_index":175,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/middlewares/encryptpayload.ts",{"_index":187,"title":{},"body":{"coverage.html":{}}}],["src/middlewares/extractheaders.ts",{"_index":189,"title":{},"body":{"coverage.html":{}}}],["src/middlewares/handleerror.ts",{"_index":191,"title":{},"body":{"coverage.html":{}}}],["src/middlewares/handleresponse.ts",{"_index":193,"title":{},"body":{"coverage.html":{}}}],["src/middlewares/routesanity.ts",{"_index":195,"title":{},"body":{"coverage.html":{}}}],["src/types.ts",{"_index":61,"title":{},"body":{"interfaces/CustomErrorMap.html":{},"interfaces/ExpsAppRoute.html":{},"interfaces/ExpsConstants.html":{},"interfaces/ExpsRouteConfig.html":{},"interfaces/ExpsRouterConfig.html":{},"interfaces/HttpContext.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["started",{"_index":211,"title":{"index.html":{},"license.html":{}},"body":{}}],["statements",{"_index":155,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":55,"title":{},"body":{"classes/CustomError.html":{},"interfaces/CustomErrorMap.html":{},"classes/ResponseBody.html":{}}}],["statuscode",{"_index":22,"title":{},"body":{"classes/CustomError.html":{},"interfaces/CustomErrorMap.html":{},"classes/ResponseBody.html":{}}}],["store",{"_index":369,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string",{"_index":45,"title":{},"body":{"classes/CustomError.html":{},"interfaces/CustomErrorMap.html":{},"interfaces/ExpsAppRoute.html":{},"interfaces/ExpsConstants.html":{},"interfaces/ExpsRouteConfig.html":{},"interfaces/ExpsRouterConfig.html":{},"interfaces/HttpContext.html":{},"classes/ResponseBody.html":{}}}],["subject",{"_index":263,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":256,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":270,"title":{},"body":{"license.html":{}}}],["table",{"_index":199,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":198,"title":{},"body":{"coverage.html":{}}}],["team",{"_index":233,"title":{},"body":{"license.html":{}}}],["throughout",{"_index":348,"title":{},"body":{"miscellaneous/variables.html":{}}}],["thrown",{"_index":10,"title":{},"body":{"classes/CustomError.html":{}}}],["tort",{"_index":292,"title":{},"body":{"license.html":{}}}],["true",{"_index":40,"title":{},"body":{"classes/CustomError.html":{}}}],["type",{"_index":31,"title":{},"body":{"classes/CustomError.html":{},"interfaces/CustomErrorMap.html":{},"interfaces/ExpsAppRoute.html":{},"interfaces/ExpsConstants.html":{},"interfaces/ExpsRouteConfig.html":{},"interfaces/ExpsRouterConfig.html":{},"interfaces/HttpContext.html":{},"classes/ResponseBody.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":314,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["undefined",{"_index":137,"title":{},"body":{"interfaces/HttpContext.html":{}}}],["understanding",{"_index":37,"title":{},"body":{"classes/CustomError.html":{}}}],["uppercase",{"_index":339,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["use",{"_index":251,"title":{},"body":{"license.html":{}}}],["used",{"_index":76,"title":{},"body":{"interfaces/ExpsConstants.html":{},"miscellaneous/variables.html":{}}}],["utilities",{"_index":304,"title":{},"body":{"properties.html":{}}}],["utils",{"_index":213,"title":{},"body":{"index.html":{},"properties.html":{}}}],["utils.git",{"_index":312,"title":{},"body":{"properties.html":{}}}],["value",{"_index":39,"title":{},"body":{"classes/CustomError.html":{},"interfaces/HttpContext.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":157,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":340,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["various",{"_index":371,"title":{},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":302,"title":{},"body":{"properties.html":{},"miscellaneous/variables.html":{}}}],["versionhandler",{"_index":178,"title":{},"body":{"coverage.html":{}}}],["void",{"_index":140,"title":{},"body":{"interfaces/HttpContext.html":{}}}],["warranties",{"_index":277,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":273,"title":{},"body":{"license.html":{}}}],["whether",{"_index":100,"title":{},"body":{"interfaces/ExpsRouteConfig.html":{},"interfaces/ExpsRouterConfig.html":{},"license.html":{}}}],["whose",{"_index":8,"title":{},"body":{"classes/CustomError.html":{}}}],["without",{"_index":246,"title":{},"body":{"license.html":{}}}],["wrap",{"_index":34,"title":{},"body":{"classes/CustomError.html":{}}}],["x",{"_index":344,"title":{},"body":{"miscellaneous/variables.html":{}}}],["yes",{"_index":33,"title":{},"body":{"classes/CustomError.html":{},"classes/ResponseBody.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/CustomError.html":{"url":"classes/CustomError.html","title":"class - CustomError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CustomError\n\n\n\n        \n            Documentation\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/classes/CustomError.ts\n        \n\n\n            \n                Description\n            \n            \n                Error class whose instance is thrown in case of any error.\n\n            \n\n            \n                Extends\n            \n            \n                        Error\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                _isCustomError\n                            \n                            \n                                    Optional\n                                data\n                            \n                            \n                                    Optional\n                                error\n                            \n                            \n                                errorCode\n                            \n                            \n                                message\n                            \n                            \n                                    Readonly\n                                service\n                            \n                            \n                                statusCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(e?: any, eMap?: CustomErrorMap)\n                    \n                \n\n                \n                    \n                            Creates an instance of CustomError.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                                Any Error instance to wrap with CustomError.\n\n                                                        \n                                                \n                                                \n                                                        eMap\n                                                  \n                                                        \n                                                                        CustomErrorMap\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                                CustomErrorMap to rewrap error for better understanding.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        _isCustomError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n\n            \n                \n                    Flag to identify if error is a custom error.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n            \n                \n                    Data object.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n            \n                \n                    Error object.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : DEFAULT_ERROR_CODE\n                    \n                \n\n            \n                \n                    Error Code.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : DEFAULT_ERROR_MSG\n                    \n                \n\n            \n                \n                    Error's message string.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        service\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : SERVICE\n                    \n                \n\n            \n                \n                    Node project from which Error is thrown.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        statusCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : DEFAULT_ERROR_STATUS_CODE\n                    \n                \n\n            \n                \n                    HTTP status code associated with the error.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CustomErrorMap.html":{"url":"interfaces/CustomErrorMap.html","title":"interface - CustomErrorMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CustomErrorMap\n\n\n\n        \n            Documentation\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/TYPES.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for defining an error map in the Express application.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            code\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            data\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            errorCode\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            message\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            statusCode\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The code associated with the error.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Additional data related to the error.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        errorCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The error code.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The error message.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        statusCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        statusCode:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The HTTP status code for the error.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExpsAppRoute.html":{"url":"interfaces/ExpsAppRoute.html","title":"interface - ExpsAppRoute","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ExpsAppRoute\n\n\n\n        \n            Documentation\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/TYPES.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for defining a route or collection of routes with its associated router in the Express application.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            path\n                                        \n                                \n                                \n                                        \n                                            router\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The path of the route.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        router\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        router:     Router\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Router\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The router associated with the route.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExpsConstants.html":{"url":"interfaces/ExpsConstants.html","title":"interface - ExpsConstants","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ExpsConstants\n\n\n\n        \n            Documentation\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/TYPES.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for defining constants used in the Express application.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            CLIENT_ID_HEADER_KEY\n                                        \n                                \n                                \n                                        \n                                            ENCRYPTION_KEY_HEADER_KEY\n                                        \n                                \n                                \n                                        \n                                            PLAINTEXT_ENCRYPTION_KEY\n                                        \n                                \n                                \n                                        \n                                            REQUEST_ID_HEADER_KEY\n                                        \n                                \n                                \n                                        \n                                            SESSION_ID_HEADER_KEY\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        CLIENT_ID_HEADER_KEY\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        CLIENT_ID_HEADER_KEY:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Header key for the client ID.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ENCRYPTION_KEY_HEADER_KEY\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ENCRYPTION_KEY_HEADER_KEY:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Header key for the encryption key.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        PLAINTEXT_ENCRYPTION_KEY\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        PLAINTEXT_ENCRYPTION_KEY:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Key for the plaintext encryption key.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        REQUEST_ID_HEADER_KEY\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        REQUEST_ID_HEADER_KEY:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Header key for the request ID.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SESSION_ID_HEADER_KEY\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        SESSION_ID_HEADER_KEY:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Header key for the session ID.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExpsRouteConfig.html":{"url":"interfaces/ExpsRouteConfig.html","title":"interface - ExpsRouteConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ExpsRouteConfig\n\n\n\n        \n            Documentation\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/TYPES.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for defining the configuration of a route in the Express application.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            disableBodyLog\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableCrypto\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            enabled\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            method\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            path\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            pipeline\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            postPipeline\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            prePipeline\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        disableBodyLog\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableBodyLog:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Whether to disable logging of the request body.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableCrypto\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableCrypto:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Whether to disable encryption for the route.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        enabled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        enabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Whether the route is enabled.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        method\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        method:     ROUTE_METHODS | ROUTE_METHODS_CAPS\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ROUTE_METHODS | ROUTE_METHODS_CAPS\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The HTTP method for the route in a case insensitive manner.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The path of the route.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pipeline\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pipeline:         ExpsMiddleware[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ExpsMiddleware[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Middleware functions to be executed in the main pipeline.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postPipeline\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        postPipeline:         ExpsMiddleware[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ExpsMiddleware[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Middleware functions to be executed after the main pipeline.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        prePipeline\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        prePipeline:         ExpsMiddleware[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ExpsMiddleware[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Middleware functions to be executed before the main pipeline.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExpsRouterConfig.html":{"url":"interfaces/ExpsRouterConfig.html","title":"interface - ExpsRouterConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ExpsRouterConfig\n\n\n\n        \n            Documentation\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/TYPES.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for defining the configuration of a router in the Express application.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            disableBodyLog\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableCrypto\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            enabled\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            postMiddlewares\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            preMiddlewares\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            routerName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            routesConfig\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        disableBodyLog\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableBodyLog:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Whether to disable logging of all the request bodies in the router.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableCrypto\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableCrypto:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Whether to disable encryption for all routes in the router.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        enabled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        enabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Whether all routes in the router are enabled.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postMiddlewares\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        postMiddlewares:         ExpsMiddleware[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ExpsMiddleware[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Middleware functions to be executed after the routes.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        preMiddlewares\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        preMiddlewares:         ExpsMiddleware[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ExpsMiddleware[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Middleware functions to be executed before the routes.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        routerName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        routerName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The name of the router.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        routesConfig\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        routesConfig:         Record\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Record\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Configuration for the routes in the router.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HttpContext.html":{"url":"interfaces/HttpContext.html","title":"interface - HttpContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HttpContext\n\n\n\n        \n            Documentation\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/TYPES.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for managing HTTP context in the Express application.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            get\n                                        \n                                \n                                \n                                        \n                                            set\n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getClientId\n                                    \n                                \n                                \n                                    \n                                        getEncryptionKey\n                                    \n                                \n                                \n                                    \n                                        getPlaintextEncryptionKey\n                                    \n                                \n                                \n                                    \n                                        getRequestId\n                                    \n                                \n                                \n                                    \n                                        getSessionId\n                                    \n                                \n                                \n                                    \n                                        setClientId\n                                    \n                                \n                                \n                                    \n                                        setEncryptionKey\n                                    \n                                \n                                \n                                    \n                                        setPlaintextEncryptionKey\n                                    \n                                \n                                \n                                    \n                                        setRequestId\n                                    \n                                \n                                \n                                    \n                                        setSessionId\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getClientId\n                        \n                    \n                \n            \n            \n                \ngetClientId()\n                \n            \n\n\n\n\n            \n                \n                        Get the client ID from the HTTP context.\n\n\n                        \n                            Returns :     string | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getEncryptionKey\n                        \n                    \n                \n            \n            \n                \ngetEncryptionKey()\n                \n            \n\n\n\n\n            \n                \n                        Get the encryption key from the HTTP context.\n\n\n                        \n                            Returns :     string | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPlaintextEncryptionKey\n                        \n                    \n                \n            \n            \n                \ngetPlaintextEncryptionKey()\n                \n            \n\n\n\n\n            \n                \n                        Get the plaintext encryption key from the HTTP context.\n\n\n                        \n                            Returns :     string | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRequestId\n                        \n                    \n                \n            \n            \n                \ngetRequestId()\n                \n            \n\n\n\n\n            \n                \n                        Get the request ID from the HTTP context.\n\n\n                        \n                            Returns :     string | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSessionId\n                        \n                    \n                \n            \n            \n                \ngetSessionId()\n                \n            \n\n\n\n\n            \n                \n                        Get the session ID from the HTTP context.\n\n\n                        \n                            Returns :     string | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setClientId\n                        \n                    \n                \n            \n            \n                \nsetClientId(clientId: string)\n                \n            \n\n\n\n\n            \n                \n                        Set the client ID in the HTTP context.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                clientId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setEncryptionKey\n                        \n                    \n                \n            \n            \n                \nsetEncryptionKey(encryptionKey: string)\n                \n            \n\n\n\n\n            \n                \n                        Set the encryption key in the HTTP context.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                encryptionKey\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPlaintextEncryptionKey\n                        \n                    \n                \n            \n            \n                \nsetPlaintextEncryptionKey(encryptionKey: string)\n                \n            \n\n\n\n\n            \n                \n                        Set the plaintext encryption key in the HTTP context.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                encryptionKey\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setRequestId\n                        \n                    \n                \n            \n            \n                \nsetRequestId(requestId: string)\n                \n            \n\n\n\n\n            \n                \n                        Set the request ID in the HTTP context.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                requestId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSessionId\n                        \n                    \n                \n            \n            \n                \nsetSessionId(sessionId: string)\n                \n            \n\n\n\n\n            \n                \n                        Set the session ID in the HTTP context.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sessionId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        get\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        get:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Get a value from the HTTP context.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        set\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        set:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Set a value in the HTTP context.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResponseBody.html":{"url":"classes/ResponseBody.html","title":"class - ResponseBody","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResponseBody\n\n\n\n        \n            Documentation\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/classes/ResponseBody.ts\n        \n\n\n            \n                Description\n            \n            \n                Class representing the response body.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                error\n                            \n                            \n                                errorCode\n                            \n                            \n                                message\n                            \n                            \n                                status\n                            \n                            \n                                statusCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(statusCode?: number, message?: string, data?: any, error?: any, errorCode?: string)\n                    \n                \n\n                \n                    \n                            Creates an instance of ResponseBody.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        statusCode\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        error\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        errorCode\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n            \n                \n                    The data for the response.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n            \n                \n                    The error for the response.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n            \n                \n                    The error code for the response.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n            \n                \n                    The message for the response.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n            \n                \n                    The HTTP status message for the response.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        statusCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n            \n                \n                    The HTTP status code for the response.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/CONSTANTS.ts\n            \n            variable\n            CONSTANTS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/TYPES.ts\n            \n            interface\n            CustomErrorMap\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/TYPES.ts\n            \n            interface\n            ExpsAppRoute\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/TYPES.ts\n            \n            interface\n            ExpsConstants\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/TYPES.ts\n            \n            interface\n            ExpsRouteConfig\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/TYPES.ts\n            \n            interface\n            ExpsRouterConfig\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/TYPES.ts\n            \n            interface\n            HttpContext\n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                src/classes/CustomError.ts\n            \n            class\n            CustomError\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/classes/ResponseBody.ts\n            \n            class\n            ResponseBody\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/lib/asyncWrapper.ts\n            \n            function\n            asyncWrapper\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/configureApp.ts\n            \n            function\n            configureApp\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/configureRouter.ts\n            \n            function\n            configureRouter\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/httpContext.ts\n            \n            variable\n            httpContext\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/initialize.ts\n            \n            function\n            initialize\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/middlewares/DEFAULT_ROUTES.ts\n            \n            function\n            handshakeHandler\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/middlewares/DEFAULT_ROUTES.ts\n            \n            function\n            healthHandler\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/middlewares/DEFAULT_ROUTES.ts\n            \n            function\n            versionHandler\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/middlewares/DEFAULT_ROUTES.ts\n            \n            variable\n            DEFAULT_ROUTES\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/middlewares/apiLogging.ts\n            \n            function\n            apiLogging\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/middlewares/apiLogging.ts\n            \n            function\n            logManager\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/middlewares/decryptCryptoKey.ts\n            \n            function\n            decryptCryptoKey\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/middlewares/decryptPayload.ts\n            \n            function\n            decryptPayload\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/middlewares/encryptPayload.ts\n            \n            function\n            encryptPayload\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/middlewares/extractHeaders.ts\n            \n            function\n            extractHeaders\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/middlewares/handleError.ts\n            \n            function\n            handleError\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/middlewares/handleResponse.ts\n            \n            function\n            handleResponse\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/middlewares/routeSanity.ts\n            \n            function\n            routeSanity\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @am92/api-crypto : ^2.0.4\n        \n            @am92/api-logger : ^2.0.5\n        \n            express-http-context : ^1.2.4\n        \n            lodash : ^4.17.21\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n@am92/express-utils\n \n \n \n \n\n\n\n\nTable of Content\n\nInstallation\nContributors\nResources\nLicense\n\n\n\nInstallation\nExample :$ npm install --save @am92/express-utils\n\nContributors\n\n  \n    \n      \n        \n          \n          \n          Ankit Gandhi\n        \n      \n      \n        \n          \n          \n          Mehul Agarwal\n        \n      \n    \n  \n\n\n\n\nResources\n\nApi Crypto\nApi Logger\nExpress Http Context\nLodash\nNanoid\n\n\n\nLicense\n\nMIT\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2022 Ankit Mehul Team Account\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    6 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 2.0.12\n        \n            Description : Utilities for Express Framework\n        \n            Keywords : express, expressjs, node, api crypto, api logging\n        \n            Homepage : https://heliumtank92.github.io/am92-express-utils\n        \n            License : MIT\n        \n            Repository : git@github.com:heliumtank92/am92-express-utils.git\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ExpsApp   (src/.../TYPES.ts)\n                        \n                        \n                            ExpsMiddleware   (src/.../TYPES.ts)\n                        \n                        \n                            ExpsNextFunction   (src/.../TYPES.ts)\n                        \n                        \n                            ExpsParams   (src/.../TYPES.ts)\n                        \n                        \n                            ExpsParamsArray   (src/.../TYPES.ts)\n                        \n                        \n                            ExpsParamsDictionary   (src/.../TYPES.ts)\n                        \n                        \n                            ExpsRequest   (src/.../TYPES.ts)\n                        \n                        \n                            ExpsResponse   (src/.../TYPES.ts)\n                        \n                        \n                            ExpsRouter   (src/.../TYPES.ts)\n                        \n                        \n                            ROUTE_METHODS   (src/.../TYPES.ts)\n                        \n                        \n                            ROUTE_METHODS_CAPS   (src/.../TYPES.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/TYPES.ts\n    \n    \n        \n            \n                \n                    \n                    ExpsApp\n                \n            \n            \n                \n                    Type definition for the Express application instance.\n\n                \n            \n            \n                \n                        Express\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ExpsMiddleware\n                \n            \n            \n                \n                    Type definition for Express middleware functions.\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ExpsNextFunction\n                \n            \n            \n                \n                    Type definition for the Express next function.\n\n                \n            \n            \n                \n                        NextFunction\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ExpsParams\n                \n            \n            \n                \n                    Type definition for parameters which can be either a dictionary or an array.\n\n                \n            \n            \n                \n                        ExpsParamsDictionary | ExpsParamsArray\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ExpsParamsArray\n                \n            \n            \n                \n                    Type definition for an array of parameters.\n\n                \n            \n            \n                \n                        ParamsArray\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ExpsParamsDictionary\n                \n            \n            \n                \n                    Type definition for a dictionary of parameters.\n\n                \n            \n            \n                \n                        ParamsDictionary\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ExpsRequest\n                \n            \n            \n                \n                    Type definition for the Express request object.\n\n                \n            \n            \n                \n                        Request\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ExpsResponse\n                \n            \n            \n                \n                    Type definition for the Express response object.\n\n                \n            \n            \n                \n                        Response\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ExpsRouter\n                \n            \n            \n                \n                    Type definition for the Express router instance.\n\n                \n            \n            \n                \n                        Router\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ROUTE_METHODS\n                \n            \n            \n                \n                    Type definition for HTTP methods in lowercase.\n\n                \n            \n            \n                \n                        \"get\" | \"post\" | \"put\" | \"delete\" | \"patch\" | \"options\" | \"head\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ROUTE_METHODS_CAPS\n                \n            \n            \n                \n                    Type definition for HTTP methods in uppercase.\n\n                \n            \n            \n                \n                        \"GET\" | \"POST\" | \"PUT\" | \"DELETE\" | \"PATCH\" | \"OPTIONS\" | \"HEAD\"\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CONSTANTS   (src/.../CONSTANTS.ts)\n                        \n                        \n                            DEFAULT_ROUTES   (src/.../DEFAULT_ROUTES.ts)\n                        \n                        \n                            httpContext   (src/.../httpContext.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/CONSTANTS.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CONSTANTS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ExpsConstants\n\n                    \n                \n                \n                    \n                        Default value : {\n  REQUEST_ID_HEADER_KEY: 'x-req-id',\n  SESSION_ID_HEADER_KEY: 'x-session-id',\n  CLIENT_ID_HEADER_KEY: 'x-api-client-id',\n  ENCRYPTION_KEY_HEADER_KEY: 'x-api-encryption-key',\n  PLAINTEXT_ENCRYPTION_KEY: 'plaintext-api-encryption-key'\n}\n                    \n                \n\n            \n                \n                    This module defines a set of constants used throughout the application.\nThese constants include header keys for request identification, session management,\nclient identification, and encryption key handling.\n\n                \n            \n\n        \n    \n\n    src/middlewares/DEFAULT_ROUTES.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_ROUTES\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ExpsRouteConfig[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    path: '/health',\n    method: 'get',\n    pipeline: [routeSanity, asyncWrapper(healthHandler)]\n  },\n  {\n    path: '/version',\n    method: 'get',\n    pipeline: [routeSanity, asyncWrapper(versionHandler)]\n  },\n  {\n    path: '/handshake',\n    method: 'get',\n    pipeline: [routeSanity, asyncWrapper(handshakeHandler)]\n  }\n]\n                    \n                \n\n            \n                \n                    Default routes configuration for the Express application.\nThis array contains the default routes that are registered with the Express application.\nEach route object specifies the path, HTTP method, and the middleware pipeline to be executed.\n\n                \n            \n\n        \n    \n\n    src/lib/httpContext.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        httpContext\n                        \n                    \n                \n            \n                \n                    \n                        Type :         HttpContext\n\n                    \n                \n                \n                    \n                        Default value : {\n  get: expressHttpContext.get,\n  set: expressHttpContext.set,\n  getRequestId,\n  setRequestId,\n  getSessionId,\n  setSessionId,\n  getClientId,\n  setClientId,\n  getEncryptionKey,\n  setEncryptionKey,\n  getPlaintextEncryptionKey,\n  setPlaintextEncryptionKey\n}\n                    \n                \n\n            \n                \n                    This module provides a context for managing HTTP request-specific data.\nIt leverages the 'express-http-context' library to store and retrieve\nvarious identifiers and keys associated with the HTTP request lifecycle.\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
